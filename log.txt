commit 501b0269c3187aa61b4d1cc24c9addb4a9e21ad9
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Wed Jan 8 19:07:20 2025 +0200

    add dry.pdf

diff --git a/dry.pdf b/dry.pdf
new file mode 100644
index 0000000..857b66e
Binary files /dev/null and b/dry.pdf differ
diff --git a/log.txt b/log.txt
deleted file mode 100644
index 09ef530..0000000
--- a/log.txt
+++ /dev/null
@@ -1,15347 +0,0 @@
-commit ff3a294360fd41d008fc3624017f2da043c808de
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Wed Jan 8 18:20:02 2025 +0200
-
-    verify push
-
-diff --git a/SortedList.h b/SortedList.h
-index cd01502..e2bf52f 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -77,6 +77,7 @@ namespace mtm {
-             }
- 
-         public:
-+
-             /**
-              * @brief Destructor for the SortedListNode class. Releases all allocated resources.
-              */
-
-commit 9407399fdc8d09e96348b7faa11e1df6d099a1a4
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Wed Jan 8 16:20:40 2025 +0200
-
-    reduce unused code
-
-diff --git a/SortedList.h b/SortedList.h
-index 86a257d..cd01502 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -9,7 +9,6 @@ namespace mtm {
-     template <typename T>
-     class SortedList {
-         class SortedListNode {
--            /* Inner class, part of implementation so no documentation is provided. */
-             friend class SortedList<T>;
-             SortedListNode* prev;
-             SortedListNode* next;
-@@ -25,7 +24,7 @@ namespace mtm {
-              *
-              * @param data The data to store in the node.
-              */
--            SortedListNode(T data): SortedListNode() { //todo ask regev
-+            SortedListNode(T data): SortedListNode() {
-                 try{
-                     this->data = new T(data);
-                 } catch (std::bad_alloc& e) {
-@@ -203,7 +202,7 @@ namespace mtm {
-          * @param address2 Address of the second swapped value.
-          */
-         template <typename V> 
--        void swap(V& address1, V& address2) { //todo ask regev
-+        void swap(V& address1, V& address2) {
-             V temp = address1;
-             address1 = address2;
-             address2 = temp;
-@@ -244,7 +243,7 @@ namespace mtm {
-         /**
-          * @brief Constructor for the SortedList class. Initializes an empty sorted list.
-          */
--        SortedList() : listLength(0){
-+        SortedList() : listLength(0), head(nullptr), tail(nullptr){
-             try {
-                 this->head = new SortedListNode();
-                 this->tail = new SortedListNode();
-@@ -264,11 +263,7 @@ namespace mtm {
-          */
-         SortedList(const SortedList<T>& other): SortedList<T>(){
-             for(const T& currentData : other) {
--                try{
--                    this->insert(currentData);
--                } catch (std::bad_alloc& e) {
--                    throw;
--                }
-+                this->insert(currentData);
-             }
-         }
- 
-
-commit 0133683bb96c2e0e81c2340ad8cd611d90fcff05
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Wed Jan 8 15:11:43 2025 +0200
-
-    reduce unused code
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 725719f..f61224c 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -23,14 +23,9 @@ void TaskManager::assignTask(const string &personName, const Task &task){
-         currentEmployee = numOfEmployees;
-         employees[numOfEmployees++] = newEmployee;
-     }
--    try{
--        Task newTask(task.getPriority(), task.getType(), task.getDescription());
--        newTask.setId(idCounter++);
--        employees[currentEmployee].assignTask(newTask);
--    }
--    catch (std::bad_alloc& e){
--        throw;
--    }
-+    Task newTask(task.getPriority(), task.getType(), task.getDescription());
-+    newTask.setId(idCounter++);
-+    employees[currentEmployee].assignTask(newTask);
- }
- 
- void TaskManager::completeTask(const string &personName){
-@@ -38,14 +33,7 @@ void TaskManager::completeTask(const string &personName){
-     if(currentEmployee == NOT_FOUND){
-        return;
-     }
--    try
--    {
--        employees[currentEmployee].completeTask();
--    }
--    catch (const std::runtime_error& e)
--    {
--        throw;
--    }
-+    employees[currentEmployee].completeTask();
- }
- 
- const Task TaskManager::setPriority(const Task& tasks, TaskType type, int priority){
-@@ -63,13 +51,8 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     }
-     for(int i = 0; i < numOfEmployees; i++){
-         SortedList<Task> oldTasks = this->employees[i].getTasks();
--        try{
--            SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
--             this->employees[i].setTasks(newTasks);
--        }
--        catch (std::bad_alloc& e){
--            throw;
--        } 
-+        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
-+        this->employees[i].setTasks(newTasks);
-     }
- 
- }
-@@ -91,14 +74,8 @@ void TaskManager::printAllTasks() const{
- 
- void TaskManager::printTasksByType(TaskType type) const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
--    try{
--        SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
--        printTasks(tasksByType);
--    }
--    catch (std::bad_alloc& e){
--        throw;
--    }
--    
-+    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-+    printTasks(tasksByType);
- }
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-     SortedList<Task> allTasks;
-
-commit 79928531b1e042b4ca1f3f3908e0671c9f4df402
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Wed Jan 8 15:00:30 2025 +0200
-
-    add documentation for SortedList.h
-
-diff --git a/SortedList.h b/SortedList.h
-index b5365d9..86a257d 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -15,9 +15,17 @@ namespace mtm {
-             SortedListNode* next;
-             T* data;
- 
-+            /**
-+             * @brief Constructs an empty node for the sorted list.
-+             */
-             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
- 
--            SortedListNode(T data): SortedListNode() {
-+            /**
-+             * @brief Constructs a node with the given data.
-+             *
-+             * @param data The data to store in the node.
-+             */
-+            SortedListNode(T data): SortedListNode() { //todo ask regev
-                 try{
-                     this->data = new T(data);
-                 } catch (std::bad_alloc& e) {
-@@ -26,6 +34,9 @@ namespace mtm {
-                 }
-             }
- 
-+            /**
-+             * @brief Deletes the current node and adjusts its neighbors accordingly.
-+             */
-             void deleteNode() {
-                 this->prev->next = this->next;
-                 this->next->prev = this->prev;
-@@ -34,6 +45,11 @@ namespace mtm {
-                 delete this;
-             }
- 
-+            /**
-+             * @brief Inserts a new node immediately after the current node.
-+             *
-+             * @param newNode The node to insert.
-+             */
-             void addImmediate(SortedListNode* newNode) {
-                 this->next->prev = newNode;
-                 newNode->next = this->next;
-@@ -41,6 +57,11 @@ namespace mtm {
-                 newNode->prev = this;
-             }
- 
-+            /**
-+             * @brief Inserts a new node into the sorted list, maintaining the order.
-+             *
-+             * @param newNode The node to insert.
-+             */
-             void add(SortedListNode* newNode) {
-                 //if we arrived at the end of the chain
-                 if (!this->hasNext()) {
-@@ -57,48 +78,96 @@ namespace mtm {
-             }
- 
-         public:
--
-+            /**
-+             * @brief Destructor for the SortedListNode class. Releases all allocated resources.
-+             */
-             ~SortedListNode() {
-                 this->prev = nullptr;
-                 this->next = nullptr;
-                 delete this->data;
-             }
- 
-+            /**
-+             * @brief Checks if the node is the tail of the list.
-+             *
-+             * @return true If the node is the tail.
-+             * @return false Otherwise.
-+             */
-             inline bool isTail() const {
-                 return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-             }
- 
-+            /**
-+             * @brief Checks if the node is the head of the list.
-+             *
-+             * @return true If the node is the head.
-+             * @return false Otherwise.
-+             */
-             inline bool isHead() const {
-                 return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-             }
- 
-+            /**
-+             * @brief Checks if the node has a valid next node.
-+             *
-+             * @return true If there is a next node.
-+             * @return false Otherwise.
-+             */
-             inline bool hasNext()   const {
-                 return !(this->next->isTail());
-             }
- 
-+            /**
-+             * @brief Inserts a new element into the sorted list starting from this node.
-+             *
-+             * @param data The element to insert.
-+             */
-             void insert(const T& data) {
--                try{
--                     SortedListNode* newNode = new SortedListNode(data);
--                    this->add(newNode);
--                }
--                catch (std::bad_alloc& e) {
--                    throw;
--                }
-+                SortedListNode* newNode = new SortedListNode(data);
-+                this->add(newNode);
-             }
- 
--            //FIXME CORRECT FOR SYNTAX
-+            /**
-+             * @brief Equality comparison operator.
-+             *
-+             * @param other The node to compare against.
-+             * @return true If the nodes are equal.
-+             * @return false Otherwise.
-+             */
-             bool operator==(SortedListNode* other) const {
-                 return (this->data == other->data);
-             }
- 
-+            /**
-+             * @brief Inequality comparison operator.
-+             *
-+             * @param other The node to compare against.
-+             * @return true If the nodes are not equal.
-+             * @return false Otherwise.
-+             */
-             bool operator!=(SortedListNode* other) const {
-                 return !(*this == *other);
-             }
- 
-+            /**
-+             * @brief Greater-than comparison operator.
-+             *
-+             * @param other The node to compare against.
-+             * @return true If this node is greater than the other.
-+             * @return false Otherwise.
-+             */
-             bool operator>(SortedListNode* other) const {
-                 return (this->data > other->data);
-             }
- 
-+            /**
-+             * @brief Less-than comparison operator.
-+             *
-+             * @param lhs The left node.
-+             * @param rhs The right node.
-+             * @return true if lhs > rhs.
-+             * @return false Otherwise.
-+             */
-             friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
-                 if (rhs.isTail()) {
-                     return true;
-@@ -106,19 +175,6 @@ namespace mtm {
-                 return (lhs.data > rhs.data);
-             }
- 
--            bool operator<(SortedListNode* other) const {
--                bool equal = *this == *other;
--                bool greater = *this > *other;
--                return (!equal) && (!greater);
--            }
--
--            bool operator<=(SortedListNode* other) const {
--                return !(*this > *other);
--            }
--
--            bool operator>=(const SortedListNode* other) const {
--                return !(*this < *other);
--            }
-         };
- 
-         private:
-@@ -126,6 +182,11 @@ namespace mtm {
-         SortedListNode* head;
-         SortedListNode* tail;
- 
-+        /**
-+         * @brief Deletes a specified node from the list.
-+         *
-+         * @param node The node to delete, is nullptr safe.
-+         */
-         void deleteNode(SortedListNode* node) {
-             if (node == nullptr) {
-                 return;
-@@ -134,13 +195,25 @@ namespace mtm {
-             --(this->listLength);
-         }
- 
-+        /**
-+         * @brief Swaps the values of two things.
-+         *
-+         * @tparam V The type of the values to be swapped.
-+         * @param address1 Address of the first swapped value.
-+         * @param address2 Address of the second swapped value.
-+         */
-         template <typename V> 
--        void swap(V& address1, V& address2) {
-+        void swap(V& address1, V& address2) { //todo ask regev
-             V temp = address1;
-             address1 = address2;
-             address2 = temp;
-         }
- 
-+        /**
-+         * @brief Swaps the contents of the current list with another list.
-+         *
-+         * @param other The list to swap with.
-+         */
-         void swapList(SortedList& other) {
-             swap<SortedListNode*>(this->head, other.head);
-             swap<SortedListNode*>(this->tail, other.tail);
-@@ -232,13 +305,8 @@ namespace mtm {
-          * @param newElement The element to insert.
-          */
-         void insert(const T& newElement) {
--            try{
--                this->head->insert(newElement);
--                ++(this->listLength);
--            }
--            catch (std::bad_alloc& e) {
--                throw;
--            }
-+            this->head->insert(newElement);
-+            ++(this->listLength);
-         }
- 
-         /**
-@@ -263,8 +331,7 @@ namespace mtm {
-             SortedListNode* current = this->head->next;
-             for(ConstIterator curr = begin(); curr!= last; ++curr, current = current->next){
-                 if(!(curr != iter)) {
--                    current->deleteNode();
--                    --(this->listLength);
-+                    this->deleteNode(current);
-                     return;
-                 }
-             }
-@@ -282,12 +349,7 @@ namespace mtm {
-             SortedList<T> filteredList;
-             for(const T& val : *this){
-                 if(condition(val)) {
--                    try{
--                        filteredList.insert(val);
--                    } 
--                    catch (std::bad_alloc& e) {
--                        throw;
--                    }
-+                    filteredList.insert(val);
-                 }
-             }
-             return filteredList;
-@@ -303,14 +365,8 @@ namespace mtm {
-         template <class Function>
-         SortedList<T> apply(Function function) const{
-             SortedList<T> appliedList;
--            
-             for(const T& val : *this){
--                try{
--                    appliedList.insert(function(val));
--                } 
--                catch (std::bad_alloc& e) {
--                    throw;
--                }
-+                appliedList.insert(function(val));
-             }
-             return appliedList;
-         }
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 26ba226..725719f 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -80,7 +80,7 @@ void TaskManager::printAllEmployees() const{
-     }
- }
- void TaskManager::printTasks(const SortedList<Task>& tasks){
--    for(Task currentTask : tasks){
-+    for(const Task& currentTask : tasks){
-         std::cout << currentTask << std::endl;
-     }
- }
-
-commit d5dad8055d65c3860c2758a1808211c3a98b1c4d
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 16:01:26 2025 +0200
-
-    adding const to operator*
-
-diff --git a/SortedList.h b/SortedList.h
-index 304b3dc..b5365d9 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -348,7 +348,7 @@ namespace mtm {
-             * @return T& A reference to the element.
-             * @throws std::out_of_range If the iterator is out of range.
-             */
--            T& operator*() const{
-+            const T& operator*() const{
-                 if(current->isTail()) {
-                     throw std::out_of_range("Iterator is out of range");
-                 }
-
-commit 8cc27d38ab02b6227a96e48e09f166281fe5bb46
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 15:39:20 2025 +0200
-
-    fixing typos, removing comments
-
-diff --git a/SortedList.h b/SortedList.h
-index 969908c..304b3dc 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -26,18 +26,6 @@ namespace mtm {
-                 }
-             }
- 
--            //FIXME might be redundant
--            /**
--            SortedListNode(SortedListNode* other) : SortedListNode() {
--                try{
--                    this->data = new T(*(other->data));
--                } catch (std::bad_alloc& e) {
--                    delete this;
--                    throw;
--                }
--            }
--            */
--
-             void deleteNode() {
-                 this->prev->next = this->next;
-                 this->next->prev = this->prev;
-@@ -118,7 +106,6 @@ namespace mtm {
-                 return (lhs.data > rhs.data);
-             }
- 
--
-             bool operator<(SortedListNode* other) const {
-                 bool equal = *this == *other;
-                 bool greater = *this > *other;
-@@ -147,17 +134,17 @@ namespace mtm {
-             --(this->listLength);
-         }
- 
--        template <typename V> //FIXME if new assignment operator is not used, then no need for this function
--        void swap(V address1, V address2) {
-+        template <typename V> 
-+        void swap(V& address1, V& address2) {
-             V temp = address1;
-             address1 = address2;
-             address2 = temp;
-         }
- 
-         void swapList(SortedList& other) {
--            Swap<SortedListNode*>(this->head, other.head);
--            Swap<SortedListNode*>(this->tail, other.tail);
--            Swap<int>(this->listLength, other.listLength);
-+            swap<SortedListNode*>(this->head, other.head);
-+            swap<SortedListNode*>(this->tail, other.tail);
-+            swap<int>(this->listLength, other.listLength);
-         }
- 
-         public:
-@@ -203,19 +190,6 @@ namespace mtm {
-          * @param other The SortedList instance to copy.
-          */
-         SortedList(const SortedList<T>& other): SortedList<T>(){
--            /*
--             try {
--                this->head = new SortedListNode();
--                this->tail = new SortedListNode();
--            } catch (std::bad_alloc& e) {
--                delete this->head;
--                delete this->tail;
--            }
--            this->head->next = this->tail;
--            this->tail->prev = this->head;
--            this->listLength = 0;
--            */
--
-             for(const T& currentData : other) {
-                 try{
-                     this->insert(currentData);
-@@ -235,54 +209,9 @@ namespace mtm {
-             if(this == &other) {
-                 return *this;
-             }
--            
--            // for(ConstIterator iter : *this) {
--            //     this->remove(*iter);
--            // }
--            /**
--             SortedListNode* oldHead = this->head;
--             SortedListNode* oldTail = this->tail;
--             int oldLength = this->listLength;
--             try{
--                SortedList* tempOther = new SortedList(other);
--                this->head = tempOther->head;
--                this->tail = tempOther->tail;
--                this->listLength = tempOther->listLength;
--                tempOther->head = nullptr;
--                tempOther->tail = nullptr;
--                delete tempOther;
--            } 
--            catch (std::bad_alloc& e) {
--                this->head = oldHead;
--                this->tail = oldTail;
--                this->listLength = oldLength;
--                throw;
--            }
--            while(oldHead != nullptr) {
--                SortedListNode* nextNode = oldHead->next;
--                delete oldHead;
--                oldHead = nextNode;
--            }
--            */
-             SortedList<T> temp = SortedList(other);
-             this->swapList(temp);
-             return *this;
--            /**
--             *FIXME
--             *
--             *maybe better implementation for this:
--             *
--            *
--            if(this == &other) {
--                return *this;
--            }
--            sortedList<T> temp = sortedList(other);
--            this->swapList(temp);
--            delete temp;
--            return *this;
--
--             *
--             */
-         }
- 
-         /**
-@@ -332,15 +261,12 @@ namespace mtm {
-                 return;
-             }
-             SortedListNode* current = this->head->next;
--            ConstIterator curr = this->begin();
--            while(curr != last) {
-+            for(ConstIterator curr = begin(); curr!= last; ++curr, current = current->next){
-                 if(!(curr != iter)) {
-                     current->deleteNode();
-                     --(this->listLength);
-                     return;
-                 }
--                ++curr;
--                current = current->next;
-             }
-         }
- 
-@@ -388,29 +314,6 @@ namespace mtm {
-             }
-             return appliedList;
-         }
--        /**
--         *
--         * the class should support the following public interface:
--         * if needed, use =defualt / =delete
--         *
--         * constructors and destructor:
--         * 1. SortedList() - creates an empty list. V
--         * 2. copy constructor V
--         * 3. operator= - assignment operator V
--         * 4. ~SortedList() - destructor V
--         *
--         * iterator:
--         * 5. class ConstIterator;
--         * 6. begin method V?
--         * 7. end method V?
--         *
--         * functions:
--         * 8. insert - inserts a new element to the list V
--         * 9. remove - removes an element from the list V
--         * 10. length - returns the number of elements in the list V
--         * 11. filter - returns a new list with elements that satisfy a given condition V?
--         * 12. apply - returns a new list with elements that were modified by an operation V?
--         */
-     };
- 
-     template <class T>
-@@ -426,9 +329,8 @@ namespace mtm {
-             *
-             * @param other The ConstIterator instance to copy.
-             */
--            ConstIterator(const ConstIterator& other) {
--                this->current = other.current;
--            }
-+            ConstIterator(const ConstIterator& other) = default;
-+
- 
-             /**
-              * @brief Assignment operator for the ConstIterator class.
-@@ -477,23 +379,5 @@ namespace mtm {
-             bool operator!=(const ConstIterator& other) const{
-                 return current != other.current;
-             }
--    /**
--     * the class should support the following public interface:
--     * if needed, use =defualt / =delete
--     *
--     * constructors and destructor:
--     * 1. a ctor(or ctors) your implementation needs V?
--     * 2. copy constructor V?
--     * 3. operator= - assignment operator V?
--     * 4. ~ConstIterator() - destructor V?
--     *
--     * operators:
--     * 5. operator* - returns the element the iterator points to V?
--     * 6. operator++ - advances the iterator to the next element V?
--     * 7. operator!= - returns true if the iterator points to a different element V?
--     *
--     */
-     };
--
--
- };
-\ No newline at end of file
-
-commit 8f19416c1113b44f89d2747e4509289174b9fa25
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 15:36:31 2025 +0200
-
-    removing namespace, adding try-catch blocks for filter and apply
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 74545cd..26ba226 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -1,6 +1,5 @@
- #include <iostream>
- #include "TaskManager.h"
--using namespace mtm;
- #define NOT_FOUND -1
- TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
- 
-@@ -64,8 +63,13 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     }
-     for(int i = 0; i < numOfEmployees; i++){
-         SortedList<Task> oldTasks = this->employees[i].getTasks();
--        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
--        this->employees[i].setTasks(newTasks);
-+        try{
-+            SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
-+             this->employees[i].setTasks(newTasks);
-+        }
-+        catch (std::bad_alloc& e){
-+            throw;
-+        } 
-     }
- 
- }
-@@ -87,9 +91,14 @@ void TaskManager::printAllTasks() const{
- 
- void TaskManager::printTasksByType(TaskType type) const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
--    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
--    printTasks(tasksByType);
--   
-+    try{
-+        SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-+        printTasks(tasksByType);
-+    }
-+    catch (std::bad_alloc& e){
-+        throw;
-+    }
-+    
- }
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-     SortedList<Task> allTasks;
-diff --git a/TaskManager.h b/TaskManager.h
-index 5680ec7..67f0e8d 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -4,7 +4,6 @@
- #include "Task.h"
- #include "SortedList.h"
- #include "Person.h"
--using namespace mtm;
- 
- 
- /**
-
-commit f3a92c20a155019aca07dbb7973c728029748067
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Tue Jan 7 14:15:20 2025 +0200
-
-    Update SortedList.h
-
-diff --git a/SortedList.h b/SortedList.h
-index c7edc0e..969908c 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -264,9 +264,8 @@ namespace mtm {
-                 oldHead = nextNode;
-             }
-             */
--            SortedList<T> temp = new SortedList(other);
-+            SortedList<T> temp = SortedList(other);
-             this->swapList(temp);
--            delete temp;
-             return *this;
-             /**
-              *FIXME
-
-commit 5a1325cf248deeda38a5ff3201de395681406354
-Merge: ad62340 a0fad64
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Tue Jan 7 13:56:40 2025 +0200
-
-    Merge remote-tracking branch 'origin/main'
-
-commit ad62340cf18ce660f5139306e30751cb14bd2a05
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Tue Jan 7 13:56:26 2025 +0200
-
-    add documentation for SortedList.h
-
-diff --git a/SortedList.h b/SortedList.h
-index 6834b4f..c7edc0e 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -8,16 +8,8 @@
- namespace mtm {
-     template <typename T>
-     class SortedList {
--        //class SortedListNode; //TODO fix dependencies
--        //TODO maybe delete these comment lines
--        //provides the de-facto interface for interacting with SortedListNode,
--        //wrapping function provides flexibility with static like parameters such as
--        //head and tail, without forcing a single instance of the list class.
--        // class ConstIterator;
-         class SortedListNode {
--        //TODO maybe delete these comment lines
--            //the members of this class are only accessible by SortedList class
--        private:
-+            /* Inner class, part of implementation so no documentation is provided. */
-             friend class SortedList<T>;
-             SortedListNode* prev;
-             SortedListNode* next;
-@@ -35,6 +27,7 @@ namespace mtm {
-             }
- 
-             //FIXME might be redundant
-+            /**
-             SortedListNode(SortedListNode* other) : SortedListNode() {
-                 try{
-                     this->data = new T(*(other->data));
-@@ -43,7 +36,7 @@ namespace mtm {
-                     throw;
-                 }
-             }
--
-+            */
- 
-             void deleteNode() {
-                 this->prev->next = this->next;
-@@ -67,7 +60,7 @@ namespace mtm {
-                     return;
-                 }
-                 //if we arrived at the orderly place of the new node
--                if (*(newNode->data) > *(this->next->data)) { //fixme
-+                if (*(newNode->data) > *(this->next->data)) {
-                     this->addImmediate(newNode);
-                     return;
-                 }
-@@ -96,9 +89,6 @@ namespace mtm {
-             }
- 
-             void insert(const T& data) {
--                // if (data == nullptr) {
--                //     //TODO invalid argument
--                // }
-                 try{
-                      SortedListNode* newNode = new SortedListNode(data);
-                     this->add(newNode);
-@@ -143,6 +133,7 @@ namespace mtm {
-                 return !(*this < *other);
-             }
-         };
-+
-         private:
-         int listLength;
-         SortedListNode* head;
-@@ -156,18 +147,43 @@ namespace mtm {
-             --(this->listLength);
-         }
- 
-+        template <typename V> //FIXME if new assignment operator is not used, then no need for this function
-+        void swap(V address1, V address2) {
-+            V temp = address1;
-+            address1 = address2;
-+            address2 = temp;
-+        }
-+
-+        void swapList(SortedList& other) {
-+            Swap<SortedListNode*>(this->head, other.head);
-+            Swap<SortedListNode*>(this->tail, other.tail);
-+            Swap<int>(this->listLength, other.listLength);
-+        }
-+
-         public:
--        //class NodeIterator;
-         class ConstIterator;
- 
-+        /**
-+         * @brief Retrieves an iterator to the first element of the sorted list.
-+         *
-+         * @return ConstIterator, An iterator pointing to the first element.
-+         */
-         ConstIterator begin() const {
-             return ConstIterator(this->head->next);
-         }
- 
-+        /**
-+         * @brief Retrieves an iterator one element after the last.
-+         *
-+         * @return ConstIterator, An iterator pointing past the last element.
-+         */
-         ConstIterator end() const {
-             return ConstIterator(this->tail);
-         }
- 
-+        /**
-+         * @brief Constructor for the SortedList class. Initializes an empty sorted list.
-+         */
-         SortedList() : listLength(0){
-             try {
-                 this->head = new SortedListNode();
-@@ -181,6 +197,11 @@ namespace mtm {
-             this->tail->prev = this->head;
-         }
- 
-+        /**
-+         * @brief Copy constructor for the SortedList class.
-+         *
-+         * @param other The SortedList instance to copy.
-+         */
-         SortedList(const SortedList<T>& other): SortedList<T>(){
-             /*
-              try {
-@@ -204,6 +225,12 @@ namespace mtm {
-             }
-         }
- 
-+        /**
-+         * @brief Assignment operator for the SortedList class.
-+         *
-+         * @param other The SortedList instance to assign.
-+         * @return SortedList<T>& A reference to the assigned SortedList instance.
-+         */
-         SortedList<T>& operator=(const SortedList<T>& other) {
-             if(this == &other) {
-                 return *this;
-@@ -212,6 +239,7 @@ namespace mtm {
-             // for(ConstIterator iter : *this) {
-             //     this->remove(*iter);
-             // }
-+            /**
-              SortedListNode* oldHead = this->head;
-              SortedListNode* oldTail = this->tail;
-              int oldLength = this->listLength;
-@@ -235,17 +263,32 @@ namespace mtm {
-                 delete oldHead;
-                 oldHead = nextNode;
-             }
-+            */
-+            SortedList<T> temp = new SortedList(other);
-+            this->swapList(temp);
-+            delete temp;
-             return *this;
--            // for(ConstIterator iter : other) {
--            //     this->insert(*iter);
--            // }
--            // ConstIterator otherCurrent = other.begin();
--            // while(otherCurrent != other.end()) {
--            //     this->insert(*otherCurrent);
--            //     ++otherCurrent;
--            // }            
-+            /**
-+             *FIXME
-+             *
-+             *maybe better implementation for this:
-+             *
-+            *
-+            if(this == &other) {
-+                return *this;
-+            }
-+            sortedList<T> temp = sortedList(other);
-+            this->swapList(temp);
-+            delete temp;
-+            return *this;
-+
-+             *
-+             */
-         }
- 
-+        /**
-+         * @brief Destructor for the SortedList class. Frees all allocated resources.
-+         */
-         ~SortedList() {
-             SortedListNode* current = this->head;
-             while(current != nullptr) {
-@@ -255,6 +298,11 @@ namespace mtm {
-             }
-         }
- 
-+        /**
-+         * @brief Inserts a new element into the sorted list.
-+         *
-+         * @param newElement The element to insert.
-+         */
-         void insert(const T& newElement) {
-             try{
-                 this->head->insert(newElement);
-@@ -265,10 +313,20 @@ namespace mtm {
-             }
-         }
- 
-+        /**
-+         * @brief Retrieves the number of elements in the sorted list.
-+         * 
-+         * @return int The length of the list.
-+         */
-         int length() const {
-             return this->listLength;
-         }
- 
-+        /**
-+         * @brief Removes an element from the sorted list using a specified iterator.
-+         *
-+         * @param iter A const iterator pointing to the element to be removed.
-+         */
-         void remove(const ConstIterator& iter){
-             ConstIterator last = this->end();
-             if(!(iter != last)) {
-@@ -286,7 +344,14 @@ namespace mtm {
-                 current = current->next;
-             }
-         }
--        
-+
-+        /**
-+         * @brief Filters the sorted list based on a specified condition.
-+         *
-+         * @tparam Condition A callable object that determines whether an element is included.
-+         * @param condition The filtering condition.
-+         * @return SortedList<T> A new list containing elements that satisfy the condition.
-+         */
-         template <class Condition>
-         SortedList<T> filter(Condition condition) const{
-             SortedList<T> filteredList;
-@@ -303,6 +368,13 @@ namespace mtm {
-             return filteredList;
-         }
- 
-+        /**
-+         * @brief Applies a transformation to each element in the sorted list.
-+         *
-+         * @tparam Function A callable object that defines the transformation.
-+         * @param function The transformation function.
-+         * @return SortedList<T> A new list containing the transformed elements.
-+         */
-         template <class Function>
-         SortedList<T> apply(Function function) const{
-             SortedList<T> appliedList;
-@@ -349,24 +421,60 @@ namespace mtm {
-             const SortedListNode* current;
-             ConstIterator(const SortedListNode* current) : current(current) {}
-         public:
-+
-+            /**
-+            * @brief Copy constructor for the ConstIterator class.
-+            *
-+            * @param other The ConstIterator instance to copy.
-+            */
-             ConstIterator(const ConstIterator& other) {
-                 this->current = other.current;
-             }
-+
-+            /**
-+             * @brief Assignment operator for the ConstIterator class.
-+             *
-+             * @param other The ConstIterator instance to assign.
-+             * @return ConstIterator& A reference to the assigned iterator.
-+             */
-             ConstIterator& operator=(const ConstIterator& other) = default;
-+
-             ~ConstIterator() = default;
-+
-+            /**
-+            * @brief Accesses the element that the iterator points to.
-+            *
-+            * @return T& A reference to the element.
-+            * @throws std::out_of_range If the iterator is out of range.
-+            */
-             T& operator*() const{
-                 if(current->isTail()) {
-                     throw std::out_of_range("Iterator is out of range");
-                 }
-                 return *(current->data);
-             }
-+
-+            /**
-+            * @brief Advances the iterator to the next element in the list.
-+            *
-+            * @return ConstIterator& A reference to the advanced iterator.
-+            * @throws std::out_of_range If the iterator is out of range.
-+            */
-             ConstIterator& operator++(){
-                 if(current->isTail()){
--                    throw std::out_of_range("Iterator is out of range");                
-+                    throw std::out_of_range("Iterator is out of range");
-                 }
-                 current = current->next;
-                 return *this;
-             }
-+
-+            /**
-+            * @brief Compares two iterators for inequality.
-+            *
-+            * @param other The iterator to compare against.
-+            * @return true If the iterators point to different elements.
-+            * @return false If the iterators point to the same element.
-+            */
-             bool operator!=(const ConstIterator& other) const{
-                 return current != other.current;
-             }
-
-commit a0fad64bd8cfa820ad8177ee6da108a35fbd2fb2
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 13:49:30 2025 +0200
-
-    adding try-catch to assigntask
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 63be670..74545cd 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -24,9 +24,14 @@ void TaskManager::assignTask(const string &personName, const Task &task){
-         currentEmployee = numOfEmployees;
-         employees[numOfEmployees++] = newEmployee;
-     }
--    Task newTask(task.getPriority(), task.getType(), task.getDescription());
--    newTask.setId(idCounter++);
--    employees[currentEmployee].assignTask(newTask);
-+    try{
-+        Task newTask(task.getPriority(), task.getType(), task.getDescription());
-+        newTask.setId(idCounter++);
-+        employees[currentEmployee].assignTask(newTask);
-+    }
-+    catch (std::bad_alloc& e){
-+        throw;
-+    }
- }
- 
- void TaskManager::completeTask(const string &personName){
-
-commit 64c29f32bf92b61b4534bf682ed051b936bcf4ca
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 13:46:01 2025 +0200
-
-    removing code duplication for prints
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index a872235..63be670 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -40,8 +40,7 @@ void TaskManager::completeTask(const string &personName){
-     }
-     catch (const std::runtime_error& e)
-     {
--        throw(e);
--        //std::cout << e.what() << std::endl;
-+        throw;
-     }
- }
- 
-@@ -66,26 +65,25 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
- 
- }
- 
--
- void TaskManager::printAllEmployees() const{
-     for(int i = 0; i < numOfEmployees; i++){
-         std::cout << employees[i] << std::endl;        
-     }
- }
--
--void TaskManager::printAllTasks() const{
--    SortedList<Task> allTasks = getAllEmployeesTasks();
--    for(Task currentTask : allTasks){
-+void TaskManager::printTasks(const SortedList<Task>& tasks){
-+    for(Task currentTask : tasks){
-         std::cout << currentTask << std::endl;
-     }
- }
-+void TaskManager::printAllTasks() const{
-+    SortedList<Task> allTasks = getAllEmployeesTasks();
-+    printTasks(allTasks);
-+}
- 
- void TaskManager::printTasksByType(TaskType type) const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
-     SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
--    for(Task currentTask : tasksByType){
--        std::cout << currentTask << std::endl;
--    }
-+    printTasks(tasksByType);
-    
- }
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-diff --git a/TaskManager.h b/TaskManager.h
-index 1a6215d..5680ec7 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -21,6 +21,7 @@ private:
-     Person employees[MAX_PERSONS];
-     int isEmployeeExist(const string& personName);
-     static const Task setPriority(const Task& tasks, TaskType type, int priority);
-+    static void printTasks(const SortedList<Task>& tasks);
-     SortedList<Task> getAllEmployeesTasks() const;
- 
-     // Note - Additional private fields and methods can be added if needed.
-
-commit ad99c8626ecf14bb921d2c85a9bb281d48999a72
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 13:36:04 2025 +0200
-
-    removing auto from prints
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index a5f01e2..a872235 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -75,7 +75,7 @@ void TaskManager::printAllEmployees() const{
- 
- void TaskManager::printAllTasks() const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
--    for(auto currentTask : allTasks){
-+    for(Task currentTask : allTasks){
-         std::cout << currentTask << std::endl;
-     }
- }
-@@ -83,7 +83,7 @@ void TaskManager::printAllTasks() const{
- void TaskManager::printTasksByType(TaskType type) const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
-     SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
--    for(auto currentTask : tasksByType){
-+    for(Task currentTask : tasksByType){
-         std::cout << currentTask << std::endl;
-     }
-    
-@@ -92,7 +92,7 @@ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-     SortedList<Task> allTasks;
-     for(int i = 0; i < this->numOfEmployees; i++){
-         SortedList<Task> tasks(this->employees[i].getTasks());
--        for(auto currentTask : tasks){
-+        for(Task currentTask : tasks){
-             allTasks.insert(currentTask);
-         }
-     }
-
-commit a66820d193571c2fc0e237306fc3dcede88f9ecc
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 13:32:21 2025 +0200
-
-    changing setpriority to static
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index c007d98..a5f01e2 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -60,7 +60,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     }
-     for(int i = 0; i < numOfEmployees; i++){
-         SortedList<Task> oldTasks = this->employees[i].getTasks();
--        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task){ return setPriority(task, type, priority); });
-+        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
-         this->employees[i].setTasks(newTasks);
-     }
- 
-diff --git a/TaskManager.h b/TaskManager.h
-index 909637d..1a6215d 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -20,7 +20,7 @@ private:
-     int numOfEmployees;
-     Person employees[MAX_PERSONS];
-     int isEmployeeExist(const string& personName);
--    const Task setPriority(const Task& tasks, TaskType type, int priority);
-+    static const Task setPriority(const Task& tasks, TaskType type, int priority);
-     SortedList<Task> getAllEmployeesTasks() const;
- 
-     // Note - Additional private fields and methods can be added if needed.
-
-commit 5ec21d2ef833faaf3691b7d45565c2cdcd22ed36
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 12:39:49 2025 +0200
-
-    removing uneeded comments and func
-
-diff --git a/SortedList.h b/SortedList.h
-index 5c7391c..6834b4f 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -2,7 +2,6 @@
- 
- #include <iostream>
- #include <stdexcept>
--#include <cassert>
- #include <functional>
- #include <new>
- 
-@@ -33,7 +32,6 @@ namespace mtm {
-                     delete this;
-                     throw;
-                 }
--                //this->data = new T(data);
-             }
- 
-             //FIXME might be redundant
-@@ -44,12 +42,10 @@ namespace mtm {
-                     delete this;
-                     throw;
-                 }
--                //this->data = new T(other->data);
-             }
- 
- 
-             void deleteNode() {
--                assert(!(this->isTail()||this->isHead()));
-                 this->prev->next = this->next;
-                 this->next->prev = this->prev;
-                 this->next = nullptr;
-@@ -58,7 +54,6 @@ namespace mtm {
-             }
- 
-             void addImmediate(SortedListNode* newNode) {
--                assert(!this->isTail());
-                 this->next->prev = newNode;
-                 newNode->next = this->next;
-                 this->next = newNode;
-@@ -68,37 +63,16 @@ namespace mtm {
-             void add(SortedListNode* newNode) {
-                 //if we arrived at the end of the chain
-                 if (!this->hasNext()) {
--                    assert(this->next->isTail());
-                     this->addImmediate(newNode);
--                    assert(this->isSorted());
-                     return;
-                 }
-                 //if we arrived at the orderly place of the new node
-                 if (*(newNode->data) > *(this->next->data)) { //fixme
--                    assert(!this->next->isTail());
-                     this->addImmediate(newNode);
--                    //assert(this->isSorted());//todo attempt to reduce assertion calls to help see the actual bug
-                     return;
-                 }
-                 //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-                 this->next->add(newNode);
--                assert(this->isSorted());
--            }
--
--            // SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
--            // prev(prev), next(next), data(data) {}
--
--            /**
--             * overload of the isSorted function, to differentiate calls between
--             * the head and the rest of the chain
--             *
--             * @return if the list is sorted
--             */
--            bool isSorted(int) const {
--                if (this->isTail()||(!(this->hasNext()))){
--                    return true;
--                }
--                return (!((*(this->next->data)) > (*(this->data)))) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-             }
- 
-         public:
-@@ -134,16 +108,6 @@ namespace mtm {
-                 }
-             }
- 
--            /**
--             *check if the list is sorted
--             *
--             * @return if the list is sorted
--             */
--            bool isSorted() const {
--                //the head breaks the sorted logic, if it is the head- skip it.
--                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
--            }
--
-             //FIXME CORRECT FOR SYNTAX
-             bool operator==(SortedListNode* other) const {
-                 return (this->data == other->data);
-@@ -158,7 +122,6 @@ namespace mtm {
-             }
- 
-             friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
--                assert(!lhs.isHead());
-                 if (rhs.isTail()) {
-                     return true;
-                 }
-@@ -185,40 +148,12 @@ namespace mtm {
-         SortedListNode* head;
-         SortedListNode* tail;
- 
--        bool isEmpty() const{
--            return (this->listLength == 0);
--        }
--
--        bool isSorted() const {
--            if ((this->isEmpty())){
--                return true;
--            }
--            return head->isSorted();
--        }
--
--        bool verifyLength() const {
--            int actualLength = 0;
--            SortedListNode* current = this->head;
--            while(current != this->tail) {
--                ++actualLength;
--                current = current->next;
--            }
--            return actualLength == this->listLength;
--        }
--
--        bool verifyList() const {
--            return true;
--            return (this->isSorted())&&(this->verifyLength());
--        }
--
--
-         void deleteNode(SortedListNode* node) {
-             if (node == nullptr) {
-                 return;
-             }
-             node->deleteNode();
-             --(this->listLength);
--            assert(this->verifyList());
-         }
- 
-         public:
-@@ -266,9 +201,7 @@ namespace mtm {
-                 } catch (std::bad_alloc& e) {
-                     throw;
-                 }
--                //this->insert(currentData);
-             }
--            //assert(this->verifyList());
-         }
- 
-         SortedList<T>& operator=(const SortedList<T>& other) {
-@@ -302,9 +235,6 @@ namespace mtm {
-                 delete oldHead;
-                 oldHead = nextNode;
-             }
--            // if(other.head == nullptr) {
--            //     return *this;
--            // }
-             return *this;
-             // for(ConstIterator iter : other) {
-             //     this->insert(*iter);
-@@ -325,26 +255,6 @@ namespace mtm {
-             }
-         }
- 
--        // void insert(const T& newElement) {
--        //     ConstIterator iter = this->begin();
--        //     while( newElement < *iter && iter != this->end()) {
--        //         ++iter;
--        //     }
--        //     if(iter == this->end()) {
--        //         SortedListNode* newNode = new SortedListNode(newElement);
--        //         this->tail->prev = newNode;
--        //         newNode->next = this->tail;
--        //         ++(this->listLength);
--        //         return;
--        //     }
--        //     SortedListNode* newNode = new SortedListNode(newElement);
--        //     newNode->prev = iter.current;
--        //     newNode->next = iter.current->next;
--        //     iter.current->next->prev = newNode;
--        //     iter.current->next = newNode;
--        //     ++(this->listLength);
--        // }
--
-         void insert(const T& newElement) {
-             try{
-                 this->head->insert(newElement);
-@@ -353,54 +263,12 @@ namespace mtm {
-             catch (std::bad_alloc& e) {
-                 throw;
-             }
--           
--            //assert(this->verifyList());
-         }
- 
--        /**
--        void insert(const T& newElement){
--            if (newElement == nullptr) {
--                    //TODO invalid argument
--                }
--            if(this->head == nullptr) {
--                this->head = new SortedListNode<T>(nullptr, nullptr, newElement);
--                this->tail = this->head;
--                this->length = 1;
--                return;
--            }
--            this->head->add(newElement);
--            this->length++;
--        }
--         */
--
--
--
-         int length() const {
-             return this->listLength;
-         }
- 
--        //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
--
--        /**
--        void remove(const ConstIterator& iter){
--            if(iter == this->end()) {
--                return;
--            }
--            ConstIterator& begin = this->begin();
--            if(iter == begin) {
--                this->head->next->deleteNode(); //FIXME this line
--            }
--            else{
--                SortedListNode* nextNode = iter.current->next; //TODO understand what this code does
--                SortedListNode* prevNode = iter.current->prev;
--                prevNode->next = nextNode;
--                nextNode->prev = prevNode;
--            }
--            //delete iter;
--            --(this->listLength);
--        }
--         */
--
-         void remove(const ConstIterator& iter){
-             ConstIterator last = this->end();
-             if(!(iter != last)) {
-@@ -430,7 +298,6 @@ namespace mtm {
-                     catch (std::bad_alloc& e) {
-                         throw;
-                     }
--                    //filteredList.insert(val);
-                 }
-             }
-             return filteredList;
-@@ -447,7 +314,6 @@ namespace mtm {
-                 catch (std::bad_alloc& e) {
-                     throw;
-                 }
--                //appliedList.insert(function(val));
-             }
-             return appliedList;
-         }
-@@ -489,7 +355,6 @@ namespace mtm {
-             ConstIterator& operator=(const ConstIterator& other) = default;
-             ~ConstIterator() = default;
-             T& operator*() const{
--                assert(!current->isHead());
-                 if(current->isTail()) {
-                     throw std::out_of_range("Iterator is out of range");
-                 }
-@@ -505,9 +370,6 @@ namespace mtm {
-             bool operator!=(const ConstIterator& other) const{
-                 return current != other.current;
-             }
--            // bool operator==(const ConstIterator& other) const{
--            //     return current == other.current;
--            // }
-     /**
-      * the class should support the following public interface:
-      * if needed, use =defualt / =delete
-
-commit 0aba796d73832f41b27d00cf1ee0c1f4274c9912
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 12:27:51 2025 +0200
-
-    adding try-catch block for bad::aloc, moving sortedlistnode d'tor to public, removing op== for Constiterator
-
-diff --git a/SortedList.h b/SortedList.h
-index 0518d20..5c7391c 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -14,8 +14,7 @@ namespace mtm {
-         //provides the de-facto interface for interacting with SortedListNode,
-         //wrapping function provides flexibility with static like parameters such as
-         //head and tail, without forcing a single instance of the list class.
--        class ConstIterator;
--        //class Iterator;
-+        // class ConstIterator;
-         class SortedListNode {
-         //TODO maybe delete these comment lines
-             //the members of this class are only accessible by SortedList class
-@@ -28,19 +27,26 @@ namespace mtm {
-             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
- 
-             SortedListNode(T data): SortedListNode() {
--                this->data = new T(data);
-+                try{
-+                    this->data = new T(data);
-+                } catch (std::bad_alloc& e) {
-+                    delete this;
-+                    throw;
-+                }
-+                //this->data = new T(data);
-             }
- 
-             //FIXME might be redundant
-             SortedListNode(SortedListNode* other) : SortedListNode() {
--                this->data = new T(other->data);
-+                try{
-+                    this->data = new T(*(other->data));
-+                } catch (std::bad_alloc& e) {
-+                    delete this;
-+                    throw;
-+                }
-+                //this->data = new T(other->data);
-             }
- 
--            ~SortedListNode() {
--                this->prev = nullptr;
--                this->next = nullptr;
--                delete this->data;
--            }
- 
-             void deleteNode() {
-                 assert(!(this->isTail()||this->isHead()));
-@@ -97,6 +103,12 @@ namespace mtm {
- 
-         public:
- 
-+            ~SortedListNode() {
-+                this->prev = nullptr;
-+                this->next = nullptr;
-+                delete this->data;
-+            }
-+
-             inline bool isTail() const {
-                 return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-             }
-@@ -113,9 +125,13 @@ namespace mtm {
-                 // if (data == nullptr) {
-                 //     //TODO invalid argument
-                 // }
--                SortedListNode* newNode = new SortedListNode(data);
--                this->add(newNode);
--                assert(this->isSorted());
-+                try{
-+                     SortedListNode* newNode = new SortedListNode(data);
-+                    this->add(newNode);
-+                }
-+                catch (std::bad_alloc& e) {
-+                    throw;
-+                }
-             }
- 
-             /**
-@@ -191,6 +207,7 @@ namespace mtm {
-         }
- 
-         bool verifyList() const {
-+            return true;
-             return (this->isSorted())&&(this->verifyLength());
-         }
- 
-@@ -206,7 +223,7 @@ namespace mtm {
- 
-         public:
-         //class NodeIterator;
--        //class ConstIterator;
-+        class ConstIterator;
- 
-         ConstIterator begin() const {
-             return ConstIterator(this->head->next);
-@@ -216,16 +233,6 @@ namespace mtm {
-             return ConstIterator(this->tail);
-         }
- 
--        /**
--        ConstIterator begin() {
--            return ConstIterator(this->head->next);
--        }
--
--        ConstIterator end() {
--            return ConstIterator(this->tail);
--        }
--        */
--
-         SortedList() : listLength(0){
-             try {
-                 this->head = new SortedListNode();
-@@ -233,6 +240,7 @@ namespace mtm {
-             } catch (std::bad_alloc& e) {
-                 delete this->head;
-                 delete this->tail;
-+                throw;
-             }
-             this->head->next = this->tail;
-             this->tail->prev = this->head;
-@@ -253,9 +261,14 @@ namespace mtm {
-             */
- 
-             for(const T& currentData : other) {
--                this->insert(currentData);
-+                try{
-+                    this->insert(currentData);
-+                } catch (std::bad_alloc& e) {
-+                    throw;
-+                }
-+                //this->insert(currentData);
-             }
--            assert(this->verifyList());
-+            //assert(this->verifyList());
-         }
- 
-         SortedList<T>& operator=(const SortedList<T>& other) {
-@@ -266,16 +279,33 @@ namespace mtm {
-             // for(ConstIterator iter : *this) {
-             //     this->remove(*iter);
-             // }
--            SortedListNode* current = this->head->next;
--            while(current != this->tail) {
--                SortedListNode* next = current->next;
--                delete current;
--                current = next;
--            }
--           this->listLength = 0;
--            if(other.head == nullptr) {
--                return *this;
--            }
-+             SortedListNode* oldHead = this->head;
-+             SortedListNode* oldTail = this->tail;
-+             int oldLength = this->listLength;
-+             try{
-+                SortedList* tempOther = new SortedList(other);
-+                this->head = tempOther->head;
-+                this->tail = tempOther->tail;
-+                this->listLength = tempOther->listLength;
-+                tempOther->head = nullptr;
-+                tempOther->tail = nullptr;
-+                delete tempOther;
-+            } 
-+            catch (std::bad_alloc& e) {
-+                this->head = oldHead;
-+                this->tail = oldTail;
-+                this->listLength = oldLength;
-+                throw;
-+            }
-+            while(oldHead != nullptr) {
-+                SortedListNode* nextNode = oldHead->next;
-+                delete oldHead;
-+                oldHead = nextNode;
-+            }
-+            // if(other.head == nullptr) {
-+            //     return *this;
-+            // }
-+            return *this;
-             // for(ConstIterator iter : other) {
-             //     this->insert(*iter);
-             // }
-@@ -283,11 +313,7 @@ namespace mtm {
-             // while(otherCurrent != other.end()) {
-             //     this->insert(*otherCurrent);
-             //     ++otherCurrent;
--            // }
--            for(const T& currentData : other) { //TODO create iterator for SortedListNodes
--                this->insert(currentData);
--            }
--            return *this;
-+            // }            
-         }
- 
-         ~SortedList() {
-@@ -320,9 +346,15 @@ namespace mtm {
-         // }
- 
-         void insert(const T& newElement) {
--            this->head->insert(newElement);
--            ++(this->listLength);
--            assert(this->verifyList());
-+            try{
-+                this->head->insert(newElement);
-+                ++(this->listLength);
-+            }
-+            catch (std::bad_alloc& e) {
-+                throw;
-+            }
-+           
-+            //assert(this->verifyList());
-         }
- 
-         /**
-@@ -371,17 +403,18 @@ namespace mtm {
- 
-         void remove(const ConstIterator& iter){
-             ConstIterator last = this->end();
--            if(iter == last) {
-+            if(!(iter != last)) {
-                 return;
-             }
-             SortedListNode* current = this->head->next;
-             ConstIterator curr = this->begin();
-             while(curr != last) {
--                if(curr == iter) {
-+                if(!(curr != iter)) {
-                     current->deleteNode();
-                     --(this->listLength);
-+                    return;
-                 }
--                curr++;
-+                ++curr;
-                 current = current->next;
-             }
-         }
-@@ -391,7 +424,13 @@ namespace mtm {
-             SortedList<T> filteredList;
-             for(const T& val : *this){
-                 if(condition(val)) {
--                    filteredList.insert(val);
-+                    try{
-+                        filteredList.insert(val);
-+                    } 
-+                    catch (std::bad_alloc& e) {
-+                        throw;
-+                    }
-+                    //filteredList.insert(val);
-                 }
-             }
-             return filteredList;
-@@ -400,8 +439,15 @@ namespace mtm {
-         template <class Function>
-         SortedList<T> apply(Function function) const{
-             SortedList<T> appliedList;
-+            
-             for(const T& val : *this){
--                appliedList.insert(function(val));
-+                try{
-+                    appliedList.insert(function(val));
-+                } 
-+                catch (std::bad_alloc& e) {
-+                    throw;
-+                }
-+                //appliedList.insert(function(val));
-             }
-             return appliedList;
-         }
-@@ -459,18 +505,9 @@ namespace mtm {
-             bool operator!=(const ConstIterator& other) const{
-                 return current != other.current;
-             }
--            bool operator>(const ConstIterator& other) const{
--                return current->data > other.current->data;
--            }
--            bool operator==(const ConstIterator& other) const{
--                return current == other.current;
--            }
--            ConstIterator operator++(int){
--                ConstIterator temp = *this;
--                ++(*this);
--                return temp;
--            }
--
-+            // bool operator==(const ConstIterator& other) const{
-+            //     return current == other.current;
-+            // }
-     /**
-      * the class should support the following public interface:
-      * if needed, use =defualt / =delete
-
-commit 0653548115efb475ee9ef2255ffd5751378fb1d3
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Tue Jan 7 12:24:32 2025 +0200
-
-    removing extra spaces in prints
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index dc8872c..c007d98 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -37,11 +37,11 @@ void TaskManager::completeTask(const string &personName){
-     try
-     {
-         employees[currentEmployee].completeTask();
--        
-     }
-     catch (const std::runtime_error& e)
-     {
--        std::cout << e.what() << std::endl;
-+        throw(e);
-+        //std::cout << e.what() << std::endl;
-     }
- }
- 
-@@ -60,7 +60,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     }
-     for(int i = 0; i < numOfEmployees; i++){
-         SortedList<Task> oldTasks = this->employees[i].getTasks();
--        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
-+        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task){ return setPriority(task, type, priority); });
-         this->employees[i].setTasks(newTasks);
-     }
- 
-@@ -69,7 +69,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
- 
- void TaskManager::printAllEmployees() const{
-     for(int i = 0; i < numOfEmployees; i++){
--        std::cout << employees[i] << std::endl;
-+        std::cout << employees[i] << std::endl;        
-     }
- }
- 
-@@ -78,7 +78,6 @@ void TaskManager::printAllTasks() const{
-     for(auto currentTask : allTasks){
-         std::cout << currentTask << std::endl;
-     }
--    std::cout << std::endl;
- }
- 
- void TaskManager::printTasksByType(TaskType type) const{
-@@ -87,7 +86,6 @@ void TaskManager::printTasksByType(TaskType type) const{
-     for(auto currentTask : tasksByType){
-         std::cout << currentTask << std::endl;
-     }
--    std::cout << std::endl;
-    
- }
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-
-commit 15b8664b8ec62371842ac36a283c97cdf037642a
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Mon Jan 6 17:27:30 2025 +0200
-
-    removing loop in verifyLength
-
-diff --git a/SortedList.h b/SortedList.h
-index cb49cbe..0518d20 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -182,8 +182,10 @@ namespace mtm {
- 
-         bool verifyLength() const {
-             int actualLength = 0;
--            for(const T& data : *this) {
-+            SortedListNode* current = this->head;
-+            while(current != this->tail) {
-                 ++actualLength;
-+                current = current->next;
-             }
-             return actualLength == this->listLength;
-         }
-
-commit f9111aecae6467bcf44532eb7f7dc18d8f44c8cf
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Mon Jan 6 17:25:10 2025 +0200
-
-    fix copy constructor
-
-diff --git a/SortedList.h b/SortedList.h
-index 62647e2..cb49cbe 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -27,7 +27,7 @@ namespace mtm {
- 
-             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
- 
--            SortedListNode(T data): prev(nullptr), next(nullptr) {
-+            SortedListNode(T data): SortedListNode() {
-                 this->data = new T(data);
-             }
- 
-@@ -43,6 +43,7 @@ namespace mtm {
-             }
- 
-             void deleteNode() {
-+                assert(!(this->isTail()||this->isHead()));
-                 this->prev->next = this->next;
-                 this->next->prev = this->prev;
-                 this->next = nullptr;
-@@ -345,16 +346,18 @@ namespace mtm {
-         }
- 
-         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
--        
-+
-+        /**
-         void remove(const ConstIterator& iter){
-             if(iter == this->end()) {
-                 return;
-             }
--            if(iter == this->begin()) {
--                this->head = this->head->next;
-+            ConstIterator& begin = this->begin();
-+            if(iter == begin) {
-+                this->head->next->deleteNode(); //FIXME this line
-             }
-             else{
--                SortedListNode* nextNode = iter.current->next;
-+                SortedListNode* nextNode = iter.current->next; //TODO understand what this code does
-                 SortedListNode* prevNode = iter.current->prev;
-                 prevNode->next = nextNode;
-                 nextNode->prev = prevNode;
-@@ -362,6 +365,24 @@ namespace mtm {
-             //delete iter;
-             --(this->listLength);
-         }
-+         */
-+
-+        void remove(const ConstIterator& iter){
-+            ConstIterator last = this->end();
-+            if(iter == last) {
-+                return;
-+            }
-+            SortedListNode* current = this->head->next;
-+            ConstIterator curr = this->begin();
-+            while(curr != last) {
-+                if(curr == iter) {
-+                    current->deleteNode();
-+                    --(this->listLength);
-+                }
-+                curr++;
-+                current = current->next;
-+            }
-+        }
-         
-         template <class Condition>
-         SortedList<T> filter(Condition condition) const{
-@@ -467,59 +488,4 @@ namespace mtm {
-     };
- 
- 
--    // template <class T>
--    // class SortedList<T>::NodeIterator {
--    //     /**
--    //      * the class should support the following public interface:
--    //      * if needed, use =defualt / =delete
--    //      *
--    //      * constructors and destructor:
--    //      * 1. a ctor(or ctors) your implementation needs
--    //      * 2. copy constructor
--    //      * 3. operator= - assignment operator
--    //      * 4. ~ConstIterator() - destructor
--    //      *
--    //      * operators:
--    //      * 5. operator* - returns the element the iterator points to
--    //      * 6. operator++ - advances the iterator to the next element
--    //      * 7. operator!= - returns true if the iterator points to a different element
--    //      *
--    //      */
--    //     private:
--    //     SortedListNode* current;
--    //     int index;
--    //     public:
--
--    //     NodeIterator() = delete;
--    //     NodeIterator(SortedListNode* current) : current(current) {}
--
--    //     bool operator==(const NodeIterator& other) const {
--    //         return this->current == other.current;
--    //     }
--
--    //     bool operator!=(const NodeIterator& other) const {
--    //         return !(this == other);
--    //     }
--
--    //     bool operator<(const NodeIterator& other) const {
--    //         return this->index < other.index;
--    //     }
--
--    //     bool operator>(const NodeIterator& other) const {
--    //         return (this != other) && (!(this < other));
--    //     }
--
--    //     bool operator<=(const NodeIterator& other) const {
--    //         return !(*this > other);
--    //     }
--
--    //     bool operator>=(const NodeIterator& other) const {
--    //         return !(*this < other);
--    //     }
--
--    //     T operator*() const {
--    //         return this->current;
--    //     }
--
--    // };
- };
-\ No newline at end of file
-
-commit 47c314bca1434aa2aa14bfe3f03b7de4b406e225
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Mon Jan 6 12:26:34 2025 +0200
-
-    fix copy constructor
-
-diff --git a/SortedList.h b/SortedList.h
-index fd63b1e..62647e2 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -67,10 +67,10 @@ namespace mtm {
-                     return;
-                 }
-                 //if we arrived at the orderly place of the new node
--                if (newNode > this->next) {
-+                if (*(newNode->data) > *(this->next->data)) { //fixme
-                     assert(!this->next->isTail());
-                     this->addImmediate(newNode);
--                    assert(this->isSorted());
-+                    //assert(this->isSorted());//todo attempt to reduce assertion calls to help see the actual bug
-                     return;
-                 }
-                 //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-@@ -88,10 +88,10 @@ namespace mtm {
-              * @return if the list is sorted
-              */
-             bool isSorted(int) const {
--                if (this->isTail()){
-+                if (this->isTail()||(!(this->hasNext()))){
-                     return true;
-                 }
--                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-+                return (!((*(this->next->data)) > (*(this->data)))) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-             }
- 
-         public:
-@@ -236,6 +236,19 @@ namespace mtm {
-         }
- 
-         SortedList(const SortedList<T>& other): SortedList<T>(){
-+            /*
-+             try {
-+                this->head = new SortedListNode();
-+                this->tail = new SortedListNode();
-+            } catch (std::bad_alloc& e) {
-+                delete this->head;
-+                delete this->tail;
-+            }
-+            this->head->next = this->tail;
-+            this->tail->prev = this->head;
-+            this->listLength = 0;
-+            */
-+
-             for(const T& currentData : other) {
-                 this->insert(currentData);
-             }
-
-commit 8228282d48338be47ff297c82019b867957b0f2c
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sun Jan 5 19:43:25 2025 +0200
-
-    changing Person* employees[MAX_PERSONS]; to Person employees[MAX_PERSONS];
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index d1eef57..dc8872c 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -1,41 +1,42 @@
- #include <iostream>
- #include "TaskManager.h"
- using namespace mtm;
--
-+#define NOT_FOUND -1
- TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
- 
--Person* TaskManager::isEmployeeExist(const string& personName){
--    Person* currentEmployee = nullptr;
-+int TaskManager::isEmployeeExist(const string& personName){
-+    int currentEmployee = NOT_FOUND;
-     for (int i = 0; i < numOfEmployees; i++){
--        if (employees[i]->getName() == personName){
--            currentEmployee = employees[i];
-+        if (employees[i].getName() == personName){
-+            currentEmployee = i;
-         }
-     }
-     return currentEmployee;
- }
- 
- void TaskManager::assignTask(const string &personName, const Task &task){
--    Person* currentEmployee = isEmployeeExist(personName);
--    if(currentEmployee == nullptr){
-+    int currentEmployee = isEmployeeExist(personName);
-+    if(currentEmployee == NOT_FOUND){
-         if(numOfEmployees == MAX_PERSONS){
-             throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
-         }
--        currentEmployee = new Person(personName);
--        employees[numOfEmployees++] = currentEmployee;
-+        Person newEmployee(personName);
-+        currentEmployee = numOfEmployees;
-+        employees[numOfEmployees++] = newEmployee;
-     }
-     Task newTask(task.getPriority(), task.getType(), task.getDescription());
-     newTask.setId(idCounter++);
--    currentEmployee->assignTask(newTask);
-+    employees[currentEmployee].assignTask(newTask);
- }
- 
- void TaskManager::completeTask(const string &personName){
--    Person* currentEmployee = isEmployeeExist(personName);
--    if(currentEmployee == nullptr){
-+    int currentEmployee = isEmployeeExist(personName);
-+    if(currentEmployee == NOT_FOUND){
-        return;
-     }
-     try
-     {
--        currentEmployee->completeTask();
-+        employees[currentEmployee].completeTask();
-         
-     }
-     catch (const std::runtime_error& e)
-@@ -58,9 +59,9 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-         return;
-     }
-     for(int i = 0; i < numOfEmployees; i++){
--        SortedList<Task> oldTasks = this->employees[i]->getTasks();
-+        SortedList<Task> oldTasks = this->employees[i].getTasks();
-         SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
--        this->employees[i]->setTasks(newTasks);
-+        this->employees[i].setTasks(newTasks);
-     }
- 
- }
-@@ -68,7 +69,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
- 
- void TaskManager::printAllEmployees() const{
-     for(int i = 0; i < numOfEmployees; i++){
--        std::cout << *employees[i] << std::endl;
-+        std::cout << employees[i] << std::endl;
-     }
- }
- 
-@@ -92,7 +93,7 @@ void TaskManager::printTasksByType(TaskType type) const{
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-     SortedList<Task> allTasks;
-     for(int i = 0; i < this->numOfEmployees; i++){
--        SortedList<Task> tasks(this->employees[i]->getTasks());
-+        SortedList<Task> tasks(this->employees[i].getTasks());
-         for(auto currentTask : tasks){
-             allTasks.insert(currentTask);
-         }
-diff --git a/TaskManager.h b/TaskManager.h
-index 992c707..909637d 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -18,8 +18,8 @@ private:
-     static const int MAX_PERSONS = 10;
-     int idCounter;
-     int numOfEmployees;
--    Person* employees[MAX_PERSONS];
--    Person* isEmployeeExist(const string& personName);
-+    Person employees[MAX_PERSONS];
-+    int isEmployeeExist(const string& personName);
-     const Task setPriority(const Task& tasks, TaskType type, int priority);
-     SortedList<Task> getAllEmployeesTasks() const;
- 
-
-commit 54cee0e14013897058629fb37dae5acd52b83cd8
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sun Jan 5 19:13:09 2025 +0200
-
-    fix > in add
-
-diff --git a/SortedList.h b/SortedList.h
-index 97a85b5..fd63b1e 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -67,7 +67,7 @@ namespace mtm {
-                     return;
-                 }
-                 //if we arrived at the orderly place of the new node
--                if (newNode < this->next) {
-+                if (newNode > this->next) {
-                     assert(!this->next->isTail());
-                     this->addImmediate(newNode);
-                     assert(this->isSorted());
-
-commit e4dfb1d8d405838796d3452527b0b68840e0371b
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sun Jan 5 19:09:13 2025 +0200
-
-    add > operator
-
-diff --git a/SortedList.h b/SortedList.h
-index 8d19288..97a85b5 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -17,7 +17,7 @@ namespace mtm {
-         class ConstIterator;
-         //class Iterator;
-         class SortedListNode {
--            //TODO maybe delete these comment lines
-+        //TODO maybe delete these comment lines
-             //the members of this class are only accessible by SortedList class
-         private:
-             friend class SortedList<T>;
-@@ -140,6 +140,15 @@ namespace mtm {
-                 return (this->data > other->data);
-             }
- 
-+            friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
-+                assert(!lhs.isHead());
-+                if (rhs.isTail()) {
-+                    return true;
-+                }
-+                return (lhs.data > rhs.data);
-+            }
-+
-+
-             bool operator<(SortedListNode* other) const {
-                 bool equal = *this == *other;
-                 bool greater = *this > *other;
-
-commit 1e6c054e84118ecea4901048a41a787479dbf4d6
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sun Jan 5 18:44:14 2025 +0200
-
-    changing TM c'tor
-
-diff --git a/TaskManager.h b/TaskManager.h
-index d5369e8..992c707 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -31,7 +31,7 @@ public:
-      *
-      * Note - you may add =default if needed.
-      */
--    TaskManager() : idCounter(0), numOfEmployees(0) {};
-+    TaskManager();
- 
-     /**
-      * @brief Deleted copy constructor to prevent copying of TaskManager objects.
-
-commit 9045c6eb82e85637eed83e396e967e71fb86ec40
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sun Jan 5 18:43:03 2025 +0200
-
-    removing  static from idCounter
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 2fc9060..d1eef57 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -2,7 +2,7 @@
- #include "TaskManager.h"
- using namespace mtm;
- 
--int TaskManager::idCounter = 0;
-+TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
- 
- Person* TaskManager::isEmployeeExist(const string& personName){
-     Person* currentEmployee = nullptr;
-diff --git a/TaskManager.h b/TaskManager.h
-index f2ee51d..d5369e8 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -16,8 +16,8 @@ private:
-      * @brief Maximum number of persons the TaskManager can handle.
-      */
-     static const int MAX_PERSONS = 10;
--    static int idCounter;
--    int numOfEmployees = 0;
-+    int idCounter;
-+    int numOfEmployees;
-     Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName);
-     const Task setPriority(const Task& tasks, TaskType type, int priority);
-@@ -31,7 +31,7 @@ public:
-      *
-      * Note - you may add =default if needed.
-      */
--    TaskManager() = default;
-+    TaskManager() : idCounter(0), numOfEmployees(0) {};
- 
-     /**
-      * @brief Deleted copy constructor to prevent copying of TaskManager objects.
-
-commit a6d4adbfe69f4db7f0e586ddd38d579643a89cea
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sun Jan 5 18:38:23 2025 +0200
-
-    fix default constructor
-
-diff --git a/SortedList.h b/SortedList.h
-index cc122f7..8d19288 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -15,6 +15,7 @@ namespace mtm {
-         //wrapping function provides flexibility with static like parameters such as
-         //head and tail, without forcing a single instance of the list class.
-         class ConstIterator;
-+        //class Iterator;
-         class SortedListNode {
-             //TODO maybe delete these comment lines
-             //the members of this class are only accessible by SortedList class
-@@ -31,8 +32,7 @@ namespace mtm {
-             }
- 
-             //FIXME might be redundant
--            SortedListNode(SortedListNode* other) {
--                this();
-+            SortedListNode(SortedListNode* other) : SortedListNode() {
-                 this->data = new T(other->data);
-             }
- 
-@@ -204,6 +204,16 @@ namespace mtm {
-             return ConstIterator(this->tail);
-         }
- 
-+        /**
-+        ConstIterator begin() {
-+            return ConstIterator(this->head->next);
-+        }
-+
-+        ConstIterator end() {
-+            return ConstIterator(this->tail);
-+        }
-+        */
-+
-         SortedList() : listLength(0){
-             try {
-                 this->head = new SortedListNode();
-@@ -314,7 +324,7 @@ namespace mtm {
- 
-         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-         
--        void remove(ConstIterator iter){
-+        void remove(const ConstIterator& iter){
-             if(iter == this->end()) {
-                 return;
-             }
-@@ -379,13 +389,15 @@ namespace mtm {
-     class SortedList<T>::ConstIterator {
-         private:
-             friend class SortedList<T>;
--            SortedListNode* current;
--            ConstIterator(SortedListNode* current) : current(current) {}
-+            const SortedListNode* current;
-+            ConstIterator(const SortedListNode* current) : current(current) {}
-         public:
--            ConstIterator(ConstIterator& other) = default;
-+            ConstIterator(const ConstIterator& other) {
-+                this->current = other.current;
-+            }
-             ConstIterator& operator=(const ConstIterator& other) = default;
-             ~ConstIterator() = default;
--            const T& operator*() const{
-+            T& operator*() const{
-                 assert(!current->isHead());
-                 if(current->isTail()) {
-                     throw std::out_of_range("Iterator is out of range");
-
-commit 701211041a14220a115f8612ae1a5f62a1e7dfd7
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 22:14:52 2025 +0200
-
-    adding const
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index e71e2be..2fc9060 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -44,7 +44,7 @@ void TaskManager::completeTask(const string &personName){
-     }
- }
- 
--Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
-+const Task TaskManager::setPriority(const Task& tasks, TaskType type, int priority){
-     if(tasks.getType() == type){
-         Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
-         resultTasks.setId(tasks.getId());
-
-commit 8b75341e5c20f2330702565c2dd4ce884fe2e794
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 22:13:57 2025 +0200
-
-    adding const
-
-diff --git a/TaskManager.h b/TaskManager.h
-index d06a25f..f2ee51d 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -20,7 +20,7 @@ private:
-     int numOfEmployees = 0;
-     Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName);
--    Task setPriority(Task tasks, TaskType type, int priority);
-+    const Task setPriority(const Task& tasks, TaskType type, int priority);
-     SortedList<Task> getAllEmployeesTasks() const;
- 
-     // Note - Additional private fields and methods can be added if needed.
-
-commit 684f8095f105676b02214a290bfce79cc6cd58d1
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 22:13:30 2025 +0200
-
-    moving isEmpty() up
-
-diff --git a/SortedList.h b/SortedList.h
-index b3842f7..cc122f7 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -14,6 +14,7 @@ namespace mtm {
-         //provides the de-facto interface for interacting with SortedListNode,
-         //wrapping function provides flexibility with static like parameters such as
-         //head and tail, without forcing a single instance of the list class.
-+        class ConstIterator;
-         class SortedListNode {
-             //TODO maybe delete these comment lines
-             //the members of this class are only accessible by SortedList class
-@@ -158,8 +159,12 @@ namespace mtm {
-         SortedListNode* head;
-         SortedListNode* tail;
- 
-+        bool isEmpty() const{
-+            return (this->listLength == 0);
-+        }
-+
-         bool isSorted() const {
--            if (this->isEmpty()){
-+            if ((this->isEmpty())){
-                 return true;
-             }
-             return head->isSorted();
-@@ -167,7 +172,7 @@ namespace mtm {
- 
-         bool verifyLength() const {
-             int actualLength = 0;
--            for (T& data : this) {
-+            for(const T& data : *this) {
-                 ++actualLength;
-             }
-             return actualLength == this->listLength;
-@@ -177,9 +182,6 @@ namespace mtm {
-             return (this->isSorted())&&(this->verifyLength());
-         }
- 
--        inline bool isEmpty(){
--            return this->listLength == 0;
--        }
- 
-         void deleteNode(SortedListNode* node) {
-             if (node == nullptr) {
-@@ -192,7 +194,7 @@ namespace mtm {
- 
-         public:
-         //class NodeIterator;
--        class ConstIterator;
-+        //class ConstIterator;
- 
-         ConstIterator begin() const {
-             return ConstIterator(this->head->next);
-
-commit 999c73182a4f49919f94ab13bb2e3b1346469295
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 20:48:41 2025 +0200
-
-    fixing conflicts
-
-diff --git a/SortedList.h b/SortedList.h
-index 5eb8caa..b3842f7 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -111,7 +111,7 @@ namespace mtm {
-                 // if (data == nullptr) {
-                 //     //TODO invalid argument
-                 // }
--                SortedListNode * newNode = new SortedListNode(data);
-+                SortedListNode* newNode = new SortedListNode(data);
-                 this->add(newNode);
-                 assert(this->isSorted());
-             }
-@@ -181,7 +181,6 @@ namespace mtm {
-             return this->listLength == 0;
-         }
- 
--        void deleteNode(SortedListNode* node) {
-         void deleteNode(SortedListNode* node) {
-             if (node == nullptr) {
-                 return;
-@@ -191,7 +190,7 @@ namespace mtm {
-             assert(this->verifyList());
-         }
- 
--    public:
-+        public:
-         //class NodeIterator;
-         class ConstIterator;
- 
-@@ -313,7 +312,7 @@ namespace mtm {
- 
-         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-         
--        void remove(ConstIterator& iter){
-+        void remove(ConstIterator iter){
-             if(iter == this->end()) {
-                 return;
-             }
-@@ -374,7 +373,7 @@ namespace mtm {
-          */
-     };
- 
--    template <typename T>
-+    template <class T>
-     class SortedList<T>::ConstIterator {
-         private:
-             friend class SortedList<T>;
-@@ -432,59 +431,59 @@ namespace mtm {
-     };
- 
- 
--     template <class T>
--    class SortedList<T>::NodeIterator {
--        /**
--         * the class should support the following public interface:
--         * if needed, use =defualt / =delete
--         *
--         * constructors and destructor:
--         * 1. a ctor(or ctors) your implementation needs
--         * 2. copy constructor
--         * 3. operator= - assignment operator
--         * 4. ~ConstIterator() - destructor
--         *
--         * operators:
--         * 5. operator* - returns the element the iterator points to
--         * 6. operator++ - advances the iterator to the next element
--         * 7. operator!= - returns true if the iterator points to a different element
--         *
--         */
--        private:
--        SortedListNode* current;
--        int index;
--        public:
--
--        NodeIterator() = delete;
--        NodeIterator(SortedListNode* current) : current(current) {}
--
--        bool operator==(const NodeIterator& other) const {
--            return this->current == other.current;
--        }
--
--        bool operator!=(const NodeIterator& other) const {
--            return !(this == other);
--        }
--
--        bool operator<(const NodeIterator& other) const {
--            return this->index < other.index;
--        }
--
--        bool operator>(const NodeIterator& other) const {
--            return (this != other) && (!(this < other));
--        }
--
--        bool operator<=(const NodeIterator& other) const {
--            return !(*this > other);
--        }
--
--        bool operator>=(const NodeIterator& other) const {
--            return !(*this < other);
--        }
--
--        T operator*() const {
--            return this->current;
--        }
--
--    };
-+    // template <class T>
-+    // class SortedList<T>::NodeIterator {
-+    //     /**
-+    //      * the class should support the following public interface:
-+    //      * if needed, use =defualt / =delete
-+    //      *
-+    //      * constructors and destructor:
-+    //      * 1. a ctor(or ctors) your implementation needs
-+    //      * 2. copy constructor
-+    //      * 3. operator= - assignment operator
-+    //      * 4. ~ConstIterator() - destructor
-+    //      *
-+    //      * operators:
-+    //      * 5. operator* - returns the element the iterator points to
-+    //      * 6. operator++ - advances the iterator to the next element
-+    //      * 7. operator!= - returns true if the iterator points to a different element
-+    //      *
-+    //      */
-+    //     private:
-+    //     SortedListNode* current;
-+    //     int index;
-+    //     public:
-+
-+    //     NodeIterator() = delete;
-+    //     NodeIterator(SortedListNode* current) : current(current) {}
-+
-+    //     bool operator==(const NodeIterator& other) const {
-+    //         return this->current == other.current;
-+    //     }
-+
-+    //     bool operator!=(const NodeIterator& other) const {
-+    //         return !(this == other);
-+    //     }
-+
-+    //     bool operator<(const NodeIterator& other) const {
-+    //         return this->index < other.index;
-+    //     }
-+
-+    //     bool operator>(const NodeIterator& other) const {
-+    //         return (this != other) && (!(this < other));
-+    //     }
-+
-+    //     bool operator<=(const NodeIterator& other) const {
-+    //         return !(*this > other);
-+    //     }
-+
-+    //     bool operator>=(const NodeIterator& other) const {
-+    //         return !(*this < other);
-+    //     }
-+
-+    //     T operator*() const {
-+    //         return this->current;
-+    //     }
-+
-+    // };
- };
-\ No newline at end of file
-
-commit 0739a79536eb5b6b964c33a3e762344f497133af
-Merge: 5fa2b37 0cee188
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 20:42:12 2025 +0200
-
-    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3
-
-commit 5fa2b3725ac3931239928a0db2788fe23eb6bd7a
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 20:29:11 2025 +0200
-
-    moving  SortedListNode class back to private, removing <T>,
-
-diff --git a/SortedList.h b/SortedList.h
-index dcac80f..bd0711a 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -14,7 +14,145 @@ namespace mtm {
-         //provides the de-facto interface for interacting with SortedListNode,
-         //wrapping function provides flexibility with static like parameters such as
-         //head and tail, without forcing a single instance of the list class.
--        class SortedListNode;
-+        class SortedListNode {
-+            //TODO maybe delete these comment lines
-+            //the members of this class are only accessible by SortedList class
-+        private:
-+            friend class SortedList<T>;
-+            SortedListNode* prev;
-+            SortedListNode* next;
-+            T* data;
-+
-+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-+
-+            SortedListNode(T data): prev(nullptr), next(nullptr) {
-+                this->data = new T(data);
-+            }
-+
-+            //FIXME might be redundant
-+            SortedListNode(SortedListNode* other) {
-+                this();
-+                this->data = new T(other->data);
-+            }
-+
-+            ~SortedListNode() {
-+                this->prev = nullptr;
-+                this->next = nullptr;
-+                delete this->data;
-+            }
-+
-+            void deleteNode() {
-+                this->prev->next = this->next;
-+                this->next->prev = this->prev;
-+                this->next = nullptr;
-+                this->prev = nullptr;
-+                delete this;
-+            }
-+
-+            void addImmediate(SortedListNode* newNode) {
-+                assert(!this->isTail());
-+                this->next->prev = newNode;
-+                newNode->next = this->next;
-+                this->next = newNode;
-+                newNode->prev = this;
-+            }
-+
-+            void add(SortedListNode* newNode) {
-+                //if we arrived at the end of the chain
-+                if (!this->hasNext()) {
-+                    assert(this->next->isTail());
-+                    this->addImmediate(newNode);
-+                    assert(this->isSorted());
-+                    return;
-+                }
-+                //if we arrived at the orderly place of the new node
-+                if (newNode < this->next) {
-+                    assert(!this->next->isTail());
-+                    this->addImmediate(newNode);
-+                    assert(this->isSorted());
-+                    return;
-+                }
-+                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-+                this->next->add(newNode);
-+                assert(this->isSorted());
-+            }
-+
-+            // SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
-+            // prev(prev), next(next), data(data) {}
-+
-+            /**
-+             * overload of the isSorted function, to differentiate calls between
-+             * the head and the rest of the chain
-+             *
-+             * @return if the list is sorted
-+             */
-+            bool isSorted(int) const {
-+                if (this->isTail()){
-+                    return true;
-+                }
-+                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-+            }
-+
-+        public:
-+
-+            inline bool isTail() const {
-+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-+            }
-+
-+            inline bool isHead() const {
-+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-+            }
-+
-+            inline bool hasNext()   const {
-+                return !(this->next->isTail());
-+            }
-+
-+            void insert(const T& data) {
-+                // if (data == nullptr) {
-+                //     //TODO invalid argument
-+                // }
-+                SortedListNode * newNode = new SortedListNode(data);
-+                this->add(newNode);
-+                assert(this->isSorted());
-+            }
-+
-+            /**
-+             *check if the list is sorted
-+             *
-+             * @return if the list is sorted
-+             */
-+            bool isSorted() const {
-+                //the head breaks the sorted logic, if it is the head- skip it.
-+                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-+            }
-+
-+            //FIXME CORRECT FOR SYNTAX
-+            bool operator==(SortedListNode* other) const {
-+                return (this->data == other->data);
-+            }
-+
-+            bool operator!=(SortedListNode* other) const {
-+                return !(*this == *other);
-+            }
-+
-+            bool operator>(SortedListNode* other) const {
-+                return (this->data > other->data);
-+            }
-+
-+            bool operator<(SortedListNode* other) const {
-+                bool equal = *this == *other;
-+                bool greater = *this > *other;
-+                return (!equal) && (!greater);
-+            }
-+
-+            bool operator<=(SortedListNode* other) const {
-+                return !(*this > *other);
-+            }
-+
-+            bool operator>=(const SortedListNode* other) const {
-+                return !(*this < *other);
-+            }
-+        };
-         private:
-         int listLength;
-         SortedListNode* head;
-@@ -43,7 +181,7 @@ namespace mtm {
-             return this->listLength == 0;
-         }
- 
--        void deleteNode(SortedListNode<T>* node) {
-+        void deleteNode(SortedListNode* node) {
-             if (node == nullptr) {
-                 return;
-             }
-@@ -53,13 +191,21 @@ namespace mtm {
-         }
- 
-     public:
--        class NodeIterator;
-+        //class NodeIterator;
-         class ConstIterator;
- 
--        SortedList<T>() : listLength(0){
-+        ConstIterator begin() const {
-+            return ConstIterator(this->head->next);
-+        }
-+
-+        ConstIterator end() const {
-+            return ConstIterator(this->tail);
-+        }
-+
-+        SortedList() : listLength(0){
-             try {
--                this->head = new SortedListNode<T>();
--                this->tail = new SortedListNode<T>();
-+                this->head = new SortedListNode();
-+                this->tail = new SortedListNode();
-             } catch (std::bad_alloc& e) {
-                 delete this->head;
-                 delete this->tail;
-@@ -68,32 +214,40 @@ namespace mtm {
-             this->tail->prev = this->head;
-         }
- 
--        SortedList<T>(const SortedList& other): SortedList(){
--            for(T& currentData : other) {
-+        SortedList(const SortedList<T>& other): SortedList<T>(){
-+            for(const T& currentData : other) {
-                 this->insert(currentData);
-             }
-             assert(this->verifyList());
-         }
- 
--        SortedList<T>& operator=(const SortedList& other) {
-+        SortedList<T>& operator=(const SortedList<T>& other) {
-             if(this == &other) {
-                 return *this;
-             }
-             
--            for(SortedList<T> current : *this) {
--                this->remove(current);
--            }
--            // SortedListNode<T>* current = this->head->next;
--            // while(current != this->tail) {
--            //     SortedListNode<T>* next = current->next;
--            //     delete current;
--            //     current = next;
-+            // for(ConstIterator iter : *this) {
-+            //     this->remove(*iter);
-             // }
-+            SortedListNode* current = this->head->next;
-+            while(current != this->tail) {
-+                SortedListNode* next = current->next;
-+                delete current;
-+                current = next;
-+            }
-            this->listLength = 0;
-             if(other.head == nullptr) {
-                 return *this;
-             }
--            for(T& currentData : other) { //TODO create iterator for SortedListNodes
-+            // for(ConstIterator iter : other) {
-+            //     this->insert(*iter);
-+            // }
-+            // ConstIterator otherCurrent = other.begin();
-+            // while(otherCurrent != other.end()) {
-+            //     this->insert(*otherCurrent);
-+            //     ++otherCurrent;
-+            // }
-+            for(const T& currentData : other) { //TODO create iterator for SortedListNodes
-                 this->insert(currentData);
-             }
-             return *this;
-@@ -107,6 +261,26 @@ namespace mtm {
-             }
-         }
- 
-+        // void insert(const T& newElement) {
-+        //     ConstIterator iter = this->begin();
-+        //     while( newElement < *iter && iter != this->end()) {
-+        //         ++iter;
-+        //     }
-+        //     if(iter == this->end()) {
-+        //         SortedListNode* newNode = new SortedListNode(newElement);
-+        //         this->tail->prev = newNode;
-+        //         newNode->next = this->tail;
-+        //         ++(this->listLength);
-+        //         return;
-+        //     }
-+        //     SortedListNode* newNode = new SortedListNode(newElement);
-+        //     newNode->prev = iter.current;
-+        //     newNode->next = iter.current->next;
-+        //     iter.current->next->prev = newNode;
-+        //     iter.current->next = newNode;
-+        //     ++(this->listLength);
-+        // }
-+
-         void insert(const T& newElement) {
-             this->head->insert(newElement);
-             ++(this->listLength);
-@@ -137,7 +311,7 @@ namespace mtm {
- 
-         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-         
--        void remove(ConstIterator<T>& iter){
-+        void remove(ConstIterator iter){
-             if(iter == this->end()) {
-                 return;
-             }
-@@ -145,19 +319,19 @@ namespace mtm {
-                 this->head = this->head->next;
-             }
-             else{
--                SortedListNode* nextNode = iter->next;
--                SortedListNode* prevNode = iter->prev;
-+                SortedListNode* nextNode = iter.current->next;
-+                SortedListNode* prevNode = iter.current->prev;
-                 prevNode->next = nextNode;
-                 nextNode->prev = prevNode;
-             }
--            delete iter;
-+            delete iter.current;
-             (this->listLength)--;
-         }
--
-+        
-         template <class Condition>
-         SortedList<T> filter(Condition condition) const{
-             SortedList<T> filteredList;
--            for(T& val : this){
-+            for(const T& val : *this){
-                 if(condition(val)) {
-                     filteredList.insert(val);
-                 }
-@@ -168,19 +342,11 @@ namespace mtm {
-         template <class Function>
-         SortedList<T> apply(Function function) const{
-             SortedList<T> appliedList;
--            for(T& val : this){
-+            for(const T& val : *this){
-                 appliedList.insert(function(val));
-             }
-             return appliedList;
-         }
--
--        ConstIterator begin() const {
--            return ConstIterator(this->head->next);
--        }
--
--        ConstIterator end() const {
--            return ConstIterator(this->tail);
--        }
-         /**
-          *
-          * the class should support the following public interface:
-@@ -206,12 +372,12 @@ namespace mtm {
-          */
-     };
- 
--    template <class T>
-+    template <typename T>
-     class SortedList<T>::ConstIterator {
-         private:
-             friend class SortedList<T>;
--            SortedListNode<T>* current;
--            ConstIterator(SortedListNode<T>* current) : current(current) {}
-+            SortedListNode* current;
-+            ConstIterator(SortedListNode* current) : current(current) {}
-         public:
-             ConstIterator(ConstIterator& other) = default;
-             ConstIterator& operator=(const ConstIterator& other) = default;
-@@ -236,6 +402,14 @@ namespace mtm {
-             bool operator>(const ConstIterator& other) const{
-                 return current->data > other.current->data;
-             }
-+            bool operator==(const ConstIterator& other) const{
-+                return current == other.current;
-+            }
-+            ConstIterator operator++(int){
-+                ConstIterator temp = *this;
-+                ++(*this);
-+                return temp;
-+            }
- 
-     /**
-      * the class should support the following public interface:
-@@ -255,203 +429,63 @@ namespace mtm {
-      */
-     };
- 
--    template <class T>
--    class SortedList<T>::SortedListNode {
--            //TODO maybe delete these comment lines
--            //the members of this class are only accessible by SortedList class
--        private:
--            friend class SortedList<T>;
--            SortedListNode * prev;
--            SortedListNode * next;
--            T* data;
--
--            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
--
--            SortedListNode(T data): prev(nullptr), next(nullptr) {
--                this->data = new T(data);
--            }
--
--            //FIXME might be redundant
--            SortedListNode(SortedListNode<T>* other) {
--                this();
--                this->data = new T(other->data);
--            }
--
--            ~SortedListNode() {
--                this->prev = nullptr;
--                this->next = nullptr;
--                delete this->data;
--            }
--
--            void deleteNode() {
--                this->prev->next = this->next;
--                this->next->prev = this->prev;
--                this->next = nullptr;
--                this->prev = nullptr;
--                delete this;
--            }
--
--            void addImmediate(SortedListNode<T>* newNode) {
--                assert(!this->isTail());
--                this->next->prev = newNode;
--                newNode->next = this->next;
--                this->next = newNode;
--                newNode->prev = this;
--            }
--
--            void add(SortedListNode<T>* newNode) {
--                //if we arrived at the end of the chain
--                if (!this->hasNext()) {
--                    assert(this->next->isTail());
--                    this->addImmediate(newNode);
--                    assert(this->isSorted());
--                    return;
--                }
--                //if we arrived at the orderly place of the new node
--                if (newNode > this->next) {
--                    assert(!this->next->isTail());
--                    this->addImmediate(newNode);
--                    assert(this->isSorted());
--                    return;
--                }
--                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
--                this->next->add(newNode);
--                assert(this->isSorted());
--            }
--
--            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
--            prev(prev), next(next), data(data) {}
--
--            /**
--             * overload of the isSorted function, to differentiate calls between
--             * the head and the rest of the chain
--             *
--             * @return if the list is sorted
--             */
--            bool isSorted(int) const {
--                if (this->isTail()){
--                    return true;
--                }
--                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
--            }
--
--        public:
--
--            inline bool isTail() const {
--                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
--            }
--
--            inline bool isHead() const {
--                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
--            }
--
--            inline bool hasNext()   const {
--                return !(this->next->isTail());
--            }
--
--            void insert(T const& const data) {
--                if (data == nullptr) {
--                    //TODO invalid argument
--                }
--                SortedListNode * newNode = new SortedListNode(data);
--                this->add(newNode);
--                assert(this->isSorted());
--            }
--
--            /**
--             *check if the list is sorted
--             *
--             * @return if the list is sorted
--             */
--            bool isSorted() const {
--                //the head breaks the sorted logic, if it is the head- skip it.
--                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
--            }
--
--            //FIXME CORRECT FOR SYNTAX
--            bool operator==(SortedListNode<T>* other) const {
--                return (this->data == other->data);
--            }
--
--            bool operator!=(SortedListNode<T>* other) const {
--                return !(*this == *other);
--            }
--
--            bool operator>(SortedListNode<T>* other) const {
--                return (this->data > other->data);
--            }
--
--            bool operator<(SortedListNode<T>* other) const {
--                bool equal = *this == *other;
--                bool greater = *this > *other;
--                return (!equal) && (!greater);
--            }
- 
--            bool operator<=(SortedListNode<T>* other) const {
--                return !(*this > *other);
--            }
--
--            bool operator>=(const SortedListNode<T>* other) const {
--                return !(*this < *other);
--            }
--        };
--
--    template <class T>
--    class SortedList<T>::NodeIterator {
--        /**
--         * the class should support the following public interface:
--         * if needed, use =defualt / =delete
--         *
--         * constructors and destructor:
--         * 1. a ctor(or ctors) your implementation needs
--         * 2. copy constructor
--         * 3. operator= - assignment operator
--         * 4. ~ConstIterator() - destructor
--         *
--         * operators:
--         * 5. operator* - returns the element the iterator points to
--         * 6. operator++ - advances the iterator to the next element
--         * 7. operator!= - returns true if the iterator points to a different element
--         *
--         */
--        private:
--        SortedListNode<T>* current;
--        int index;
--        public:
--
--        NodeIterator() = delete;
--
--        NodeIterator(SortedListNode<T>* current) : current(current) {}
--
--        bool operator==(const NodeIterator& other) const {
--            return this->current == other.current;
--        }
--
--        bool operator!=(const NodeIterator& other) const {
--            return !(this == other);
--        }
--
--        bool operator<(const NodeIterator& other) const {
--            return this->index < other.index;
--        }
--
--        bool operator>(const NodeIterator& other) const {
--            return (this != other) && (!(this < other));
--        }
--
--        bool operator<=(const NodeIterator& other) const {
--            return !(*this > other);
--        }
--
--        bool operator>=(const NodeIterator& other) const {
--            return !(*this < other);
--        }
--
--        T operator*() const {
--            return this->current;
--        }
--
--
--
--    };
-+    // template <class T>
-+    // class SortedList<T>::NodeIterator {
-+    //     /**
-+    //      * the class should support the following public interface:
-+    //      * if needed, use =defualt / =delete
-+    //      *
-+    //      * constructors and destructor:
-+    //      * 1. a ctor(or ctors) your implementation needs
-+    //      * 2. copy constructor
-+    //      * 3. operator= - assignment operator
-+    //      * 4. ~ConstIterator() - destructor
-+    //      *
-+    //      * operators:
-+    //      * 5. operator* - returns the element the iterator points to
-+    //      * 6. operator++ - advances the iterator to the next element
-+    //      * 7. operator!= - returns true if the iterator points to a different element
-+    //      *
-+    //      */
-+    //     private:
-+    //     SortedListNode<T>* current;
-+    //     int index;
-+    //     public:
-+
-+    //     NodeIterator() = delete;
-+
-+    //     NodeIterator(SortedListNode<T>* current) : current(current) {}
-+
-+    //     bool operator==(const NodeIterator& other) const {
-+    //         return this->current == other.current;
-+    //     }
-+
-+    //     bool operator!=(const NodeIterator& other) const {
-+    //         return !(this == other);
-+    //     }
-+
-+    //     bool operator<(const NodeIterator& other) const {
-+    //         return this->index < other.index;
-+    //     }
-+
-+    //     bool operator>(const NodeIterator& other) const {
-+    //         return (this != other) && (!(this < other));
-+    //     }
-+
-+    //     bool operator<=(const NodeIterator& other) const {
-+    //         return !(*this > other);
-+    //     }
-+
-+    //     bool operator>=(const NodeIterator& other) const {
-+    //         return !(*this < other);
-+    //     }
-+
-+    //     T operator*() const {
-+    //         return this->current;
-+    //     }
-+
-+
-+
-+    // };
- };
-\ No newline at end of file
-
-commit 1a750c59af64c4fef70ede64ac9fdb9f11bef424
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 20:25:33 2025 +0200
-
-    moving setPriority up, and removing space
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index c0bf6a9..e71e2be 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -24,7 +24,7 @@ void TaskManager::assignTask(const string &personName, const Task &task){
-         employees[numOfEmployees++] = currentEmployee;
-     }
-     Task newTask(task.getPriority(), task.getType(), task.getDescription());
--    newTask.setId(++idCounter);
-+    newTask.setId(idCounter++);
-     currentEmployee->assignTask(newTask);
- }
- 
-@@ -36,6 +36,7 @@ void TaskManager::completeTask(const string &personName){
-     try
-     {
-         currentEmployee->completeTask();
-+        
-     }
-     catch (const std::runtime_error& e)
-     {
-@@ -43,6 +44,15 @@ void TaskManager::completeTask(const string &personName){
-     }
- }
- 
-+Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
-+    if(tasks.getType() == type){
-+        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
-+        resultTasks.setId(tasks.getId());
-+        return resultTasks;
-+    }
-+    return tasks;
-+}
-+
- void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     if(priority <= 0){
-         return;
-@@ -55,19 +65,10 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
- 
- }
- 
--Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
--    if(tasks.getType() == type){
--        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
--        resultTasks.setId(tasks.getId());
--        return resultTasks;
--    }
--    return tasks;
--}
- 
- void TaskManager::printAllEmployees() const{
-     for(int i = 0; i < numOfEmployees; i++){
-         std::cout << *employees[i] << std::endl;
--        std::cout << std::endl;
-     }
- }
- 
-@@ -81,8 +82,8 @@ void TaskManager::printAllTasks() const{
- 
- void TaskManager::printTasksByType(TaskType type) const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
--    SortedList<Task> tasksByType = allTasks.filter([type]( Task task) { return (task.getType() == type);});
--    for(const Task& currentTask : tasksByType){
-+    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-+    for(auto currentTask : tasksByType){
-         std::cout << currentTask << std::endl;
-     }
-     std::cout << std::endl;
-
-commit 0cee1886b116f0b80546cff060398b8df95ef168
-Merge: db897c4 b24e030
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 20:08:57 2025 +0200
-
-    Merge remote-tracking branch 'origin/main'
-
-commit db897c42533e394ea27e05d8f0fb0e4745fe2c82
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 20:08:05 2025 +0200
-
-    refresh code
-
-diff --git a/SortedList.h b/SortedList.h
-index dcac80f..9636528 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -43,7 +43,7 @@ namespace mtm {
-             return this->listLength == 0;
-         }
- 
--        void deleteNode(SortedListNode<T>* node) {
-+        void deleteNode(SortedListNode* node) {
-             if (node == nullptr) {
-                 return;
-             }
-@@ -56,10 +56,10 @@ namespace mtm {
-         class NodeIterator;
-         class ConstIterator;
- 
--        SortedList<T>() : listLength(0){
-+        SortedList<T>() : listLength(0), head(nullptr), tail(nullptr) {
-             try {
--                this->head = new SortedListNode<T>();
--                this->tail = new SortedListNode<T>();
-+                this->head = new SortedListNode();
-+                this->tail = new SortedListNode();
-             } catch (std::bad_alloc& e) {
-                 delete this->head;
-                 delete this->tail;
-@@ -98,6 +98,7 @@ namespace mtm {
-             }
-             return *this;
-         }
-+
-         ~SortedList() {
-             SortedListNode* current = this->head;
-             while(current != nullptr) {
-@@ -137,7 +138,7 @@ namespace mtm {
- 
-         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-         
--        void remove(ConstIterator<T>& iter){
-+        void remove(ConstIterator& iter){
-             if(iter == this->end()) {
-                 return;
-             }
-@@ -150,8 +151,8 @@ namespace mtm {
-                 prevNode->next = nextNode;
-                 nextNode->prev = prevNode;
-             }
--            delete iter;
--            (this->listLength)--;
-+            //delete iter;
-+            --(this->listLength);
-         }
- 
-         template <class Condition>
-@@ -210,8 +211,8 @@ namespace mtm {
-     class SortedList<T>::ConstIterator {
-         private:
-             friend class SortedList<T>;
--            SortedListNode<T>* current;
--            ConstIterator(SortedListNode<T>* current) : current(current) {}
-+            SortedListNode* current;
-+            ConstIterator(SortedListNode* current) : current(current) {}
-         public:
-             ConstIterator(ConstIterator& other) = default;
-             ConstIterator& operator=(const ConstIterator& other) = default;
-@@ -267,15 +268,16 @@ namespace mtm {
- 
-             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
- 
--            SortedListNode(T data): prev(nullptr), next(nullptr) {
--                this->data = new T(data);
-+            SortedListNode(T& data): SortedListNode() {
-+                try {
-+                    this->data = new T(data);
-+                } catch (std::bad_alloc& e) {
-+                    delete this;
-+                }
-             }
- 
-             //FIXME might be redundant
--            SortedListNode(SortedListNode<T>* other) {
--                this();
--                this->data = new T(other->data);
--            }
-+            SortedListNode(SortedListNode* other) : SortedListNode(other->data) {}
- 
-             ~SortedListNode() {
-                 this->prev = nullptr;
-@@ -291,7 +293,7 @@ namespace mtm {
-                 delete this;
-             }
- 
--            void addImmediate(SortedListNode<T>* newNode) {
-+            void addImmediate(SortedListNode* newNode) {
-                 assert(!this->isTail());
-                 this->next->prev = newNode;
-                 newNode->next = this->next;
-@@ -299,7 +301,7 @@ namespace mtm {
-                 newNode->prev = this;
-             }
- 
--            void add(SortedListNode<T>* newNode) {
-+            void add(SortedListNode* newNode) {
-                 //if we arrived at the end of the chain
-                 if (!this->hasNext()) {
-                     assert(this->next->isTail());
-@@ -319,7 +321,7 @@ namespace mtm {
-                 assert(this->isSorted());
-             }
- 
--            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
-+            SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
-             prev(prev), next(next), data(data) {}
- 
-             /**
-@@ -349,7 +351,7 @@ namespace mtm {
-                 return !(this->next->isTail());
-             }
- 
--            void insert(T const& const data) {
-+            void insert(T const& data) {
-                 if (data == nullptr) {
-                     //TODO invalid argument
-                 }
-@@ -369,29 +371,29 @@ namespace mtm {
-             }
- 
-             //FIXME CORRECT FOR SYNTAX
--            bool operator==(SortedListNode<T>* other) const {
-+            bool operator==(SortedListNode* other) const {
-                 return (this->data == other->data);
-             }
- 
--            bool operator!=(SortedListNode<T>* other) const {
-+            bool operator!=(SortedListNode* other) const {
-                 return !(*this == *other);
-             }
- 
--            bool operator>(SortedListNode<T>* other) const {
-+            bool operator>(SortedListNode* other) const {
-                 return (this->data > other->data);
-             }
- 
--            bool operator<(SortedListNode<T>* other) const {
-+            bool operator<(SortedListNode* other) const {
-                 bool equal = *this == *other;
-                 bool greater = *this > *other;
-                 return (!equal) && (!greater);
-             }
- 
--            bool operator<=(SortedListNode<T>* other) const {
-+            bool operator<=(SortedListNode* other) const {
-                 return !(*this > *other);
-             }
- 
--            bool operator>=(const SortedListNode<T>* other) const {
-+            bool operator>=(const SortedListNode* other) const {
-                 return !(*this < *other);
-             }
-         };
-@@ -415,13 +417,13 @@ namespace mtm {
-          *
-          */
-         private:
--        SortedListNode<T>* current;
-+        SortedListNode* current;
-         int index;
-         public:
- 
-         NodeIterator() = delete;
- 
--        NodeIterator(SortedListNode<T>* current) : current(current) {}
-+        NodeIterator(SortedListNode* current) : current(current) {}
- 
-         bool operator==(const NodeIterator& other) const {
-             return this->current == other.current;
-
-commit b24e030499a7cd2ec419e9220647920f6aca9492
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 18:42:43 2025 +0200
-
-    fixing TaskManager print funcs
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index f134e46..c0bf6a9 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -49,17 +49,16 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     }
-     for(int i = 0; i < numOfEmployees; i++){
-         SortedList<Task> oldTasks = this->employees[i]->getTasks();
--        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
-+        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
-         this->employees[i]->setTasks(newTasks);
-     }
- 
- }
- 
--SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
--    if(tasks.begin()->getType() == type){
--        SortedList<Task> resultTasks;
--        Task newTask = Task(tasks.begin()->getPriority() + priority, tasks.begin()->getType(), tasks.begin()->getDescription());
--        resultTasks.insert(newTask);
-+Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
-+    if(tasks.getType() == type){
-+        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
-+        resultTasks.setId(tasks.getId());
-         return resultTasks;
-     }
-     return tasks;
-@@ -74,17 +73,17 @@ void TaskManager::printAllEmployees() const{
- 
- void TaskManager::printAllTasks() const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
--    for(SortedList<Task> currentTask : allTasks){
--        std::cout << *currentTask.begin().data << std::endl;
-+    for(auto currentTask : allTasks){
-+        std::cout << currentTask << std::endl;
-     }
-     std::cout << std::endl;
- }
- 
- void TaskManager::printTasksByType(TaskType type) const{
-     SortedList<Task> allTasks = getAllEmployeesTasks();
--    SortedList<Task> tasksByType = allTasks.filter([type](SortedList<Task> sortedListTask) { return (sortedListTask.begin().getType() == type); });
--    for(SortedList<Task> currentTask : tasksByType){
--        std::cout << *currentTask.begin().data << std::endl;
-+    SortedList<Task> tasksByType = allTasks.filter([type]( Task task) { return (task.getType() == type);});
-+    for(const Task& currentTask : tasksByType){
-+        std::cout << currentTask << std::endl;
-     }
-     std::cout << std::endl;
-    
-@@ -92,9 +91,9 @@ void TaskManager::printTasksByType(TaskType type) const{
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-     SortedList<Task> allTasks;
-     for(int i = 0; i < this->numOfEmployees; i++){
--        SortedList<Task> tasks = this->employees[i]->getTasks();
--        for(SortedList<Task> currentTask : tasks){
--            allTasks.insert(currentTask.begin().data);
-+        SortedList<Task> tasks(this->employees[i]->getTasks());
-+        for(auto currentTask : tasks){
-+            allTasks.insert(currentTask);
-         }
-     }
-     return allTasks;
-diff --git a/TaskManager.h b/TaskManager.h
-index f8ca722..d06a25f 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -20,7 +20,7 @@ private:
-     int numOfEmployees = 0;
-     Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName);
--    SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
-+    Task setPriority(Task tasks, TaskType type, int priority);
-     SortedList<Task> getAllEmployeesTasks() const;
- 
-     // Note - Additional private fields and methods can be added if needed.
-
-commit c713a8026667efb7613161343ec0e66c333164e4
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 15:06:32 2025 +0200
-
-    Update SortedList.h
-
-diff --git a/SortedList.h b/SortedList.h
-index 06122d5..dcac80f 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -99,9 +99,9 @@ namespace mtm {
-             return *this;
-         }
-         ~SortedList() {
--            SortedListNode<T>* current = this->head;
-+            SortedListNode* current = this->head;
-             while(current != nullptr) {
--                SortedListNode<T>* next = current->next;
-+                SortedListNode* next = current->next;
-                 delete current;
-                 current = next;
-             }
-@@ -145,8 +145,8 @@ namespace mtm {
-                 this->head = this->head->next;
-             }
-             else{
--                SortedListNode<T>* nextNode = iter->next;
--                SortedListNode<T>* prevNode = iter->prev;
-+                SortedListNode* nextNode = iter->next;
-+                SortedListNode* prevNode = iter->prev;
-                 prevNode->next = nextNode;
-                 nextNode->prev = prevNode;
-             }
-
-commit 6ba105fa188ad39ed34c3aaa73a57df718251142
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 15:03:57 2025 +0200
-
-    add bad alloc  catch
-
-diff --git a/SortedList.h b/SortedList.h
-index 9fbca6b..06122d5 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -4,6 +4,7 @@
- #include <stdexcept>
- #include <cassert>
- #include <functional>
-+#include <new>
- 
- namespace mtm {
-     template <typename T>
-@@ -19,31 +20,6 @@ namespace mtm {
-         SortedListNode* head;
-         SortedListNode* tail;
- 
--        /**
--         * //maybe can delete this function
--        void addInitial(SortedListNode<T>* addThis){
--            assert(this->isEmpty());
--            this->head->add(addThis);
--        }
--         */
--
--
--        /** //maybe can delete this function
--        void add(SortedListNode<T>* addThis){
--            if(this->isEmpty()){
--                this->head->addImmediate(addThis);
--                return;
--            }
--            for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
--                if (addThis > node){
--                    node->addPrevious(addThis); //TODO add addprevious method to nodes
--                    return;
--                }
--            }
--        }
--         *
--         */
--
-         bool isSorted() const {
-             if (this->isEmpty()){
-                 return true;
-@@ -73,7 +49,7 @@ namespace mtm {
-             }
-             node->deleteNode();
-             --(this->listLength);
--            assert(this->isSorted());
-+            assert(this->verifyList());
-         }
- 
-     public:
-@@ -81,19 +57,22 @@ namespace mtm {
-         class ConstIterator;
- 
-         SortedList<T>() : listLength(0){
--            this->head = new SortedListNode<T>();
--            this->tail = new SortedListNode<T>();
-+            try {
-+                this->head = new SortedListNode<T>();
-+                this->tail = new SortedListNode<T>();
-+            } catch (std::bad_alloc& e) {
-+                delete this->head;
-+                delete this->tail;
-+            }
-             this->head->next = this->tail;
-             this->tail->prev = this->head;
-         }
- 
--        SortedList<T>(const SortedList& other){
--            this();
--            if(other.head != nullptr){
--                for(T& currentData : other) { //TODO create iterator for SortedListNodes
--                    this->insert(currentData);
--                }
-+        SortedList<T>(const SortedList& other): SortedList(){
-+            for(T& currentData : other) {
-+                this->insert(currentData);
-             }
-+            assert(this->verifyList());
-         }
- 
-         SortedList<T>& operator=(const SortedList& other) {
-@@ -374,7 +353,7 @@ namespace mtm {
-                 if (data == nullptr) {
-                     //TODO invalid argument
-                 }
--                SortedListNode<T> * newNode = new SortedListNode<T>(data);
-+                SortedListNode * newNode = new SortedListNode(data);
-                 this->add(newNode);
-                 assert(this->isSorted());
-             }
-
-commit bced35e6545f6f007b737b89b1612d3f89eddfe7
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 15:03:10 2025 +0200
-
-    removing <T> from nodes
-
-diff --git a/SortedList.h b/SortedList.h
-index 3157a14..9fbca6b 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -14,10 +14,10 @@ namespace mtm {
-         //wrapping function provides flexibility with static like parameters such as
-         //head and tail, without forcing a single instance of the list class.
-         class SortedListNode;
--    private:
-+        private:
-         int listLength;
--        SortedListNode<T>* head;
--        SortedListNode<T>* tail;
-+        SortedListNode* head;
-+        SortedListNode* tail;
- 
-         /**
-          * //maybe can delete this function
-@@ -276,14 +276,14 @@ namespace mtm {
-      */
-     };
- 
--    template <typename T>
-+    template <class T>
-     class SortedList<T>::SortedListNode {
-             //TODO maybe delete these comment lines
-             //the members of this class are only accessible by SortedList class
-         private:
-             friend class SortedList<T>;
--            SortedListNode<T> * prev;
--            SortedListNode<T> * next;
-+            SortedListNode * prev;
-+            SortedListNode * next;
-             T* data;
- 
-             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-
-commit f542a6ec1127d79172a165c882f71ee52f8a65b6
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 14:50:28 2025 +0200
-
-    Update SortedList.h
-
-diff --git a/SortedList.h b/SortedList.h
-index 3301a25..3157a14 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -53,7 +53,7 @@ namespace mtm {
- 
-         bool verifyLength() const {
-             int actualLength = 0;
--            for (SortedListNode<T>* node : this) {
-+            for (T& data : this) {
-                 ++actualLength;
-             }
-             return actualLength == this->listLength;
-
-commit 9d518098f47b8134ede99944956a3187f4ab0a0d
-Merge: 6b8d1fb 8e9d98e
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 14:49:32 2025 +0200
-
-    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3
-
-commit 6b8d1fbf99b5c4c1586785d116d094c562e086e6
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 14:49:25 2025 +0200
-
-    edding scope to SortedList<T>::SortedListNode
-
-diff --git a/SortedList.h b/SortedList.h
-index 0a37def..f61b011 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -280,7 +280,7 @@ namespace mtm {
-     };
- 
-     template <typename T>
--    class SortedListNode {
-+    class SortedList<T>::SortedListNode {
-             //TODO maybe delete these comment lines
-             //the members of this class are only accessible by SortedList class
-         private:
-
-commit 8e9d98e7899747a140954b0acb2cfae097754e35
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 14:46:14 2025 +0200
-
-    update copy constructor
-
-diff --git a/SortedList.h b/SortedList.h
-index 0a37def..c7513cf 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -87,14 +87,11 @@ namespace mtm {
-             this->tail->prev = this->head;
-         }
- 
--        SortedList<T>(const SortedList& other) : listLength(0){
--            this->head = new SortedListNode<T>();
--            this->tail = new SortedListNode<T>();
--            this->head->next = this->tail;
--            this->tail->prev = this->head;
-+        SortedList<T>(const SortedList& other){
-+            this();
-             if(other.head != nullptr){
--                for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
--                    this->insert(currentOther.data);
-+                for(T& currentData : other) { //TODO create iterator for SortedListNodes
-+                    this->insert(currentData);
-                 }
-             }
-         }
-@@ -117,8 +114,8 @@ namespace mtm {
-             if(other.head == nullptr) {
-                 return *this;
-             }
--            for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
--                this->insert(currentOther.data);
-+            for(T& currentData : other) { //TODO create iterator for SortedListNodes
-+                this->insert(currentData);
-             }
-             return *this;
-         }
-
-commit 0c42c335a9961c705e47ce704eff8bc9b9236b9b
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 14:45:13 2025 +0200
-
-    moving SortedListNode class outside of SortedList
-
-diff --git a/SortedList.h b/SortedList.h
-index 3c6af70..0a37def 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -13,148 +13,7 @@ namespace mtm {
-         //provides the de-facto interface for interacting with SortedListNode,
-         //wrapping function provides flexibility with static like parameters such as
-         //head and tail, without forcing a single instance of the list class.
--        template <typename T>
--        class SortedListNode {
--            //TODO maybe delete these comment lines
--            //the members of this class are only accessible by SortedList class
--        private:
--            friend class SortedList<T>;
--            SortedListNode<T> * prev;
--            SortedListNode<T> * next;
--            T* data;
--
--            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
--
--            SortedListNode(T data): prev(nullptr), next(nullptr) {
--                this->data = new T(data);
--            }
--
--            //FIXME might be redundant
--            SortedListNode(SortedListNode<T>* other) {
--                this();
--                this->data = new T(other->data);
--            }
--
--            ~SortedListNode() {
--                this->prev = nullptr;
--                this->next = nullptr;
--                delete this->data;
--            }
--
--            void deleteNode() {
--                this->prev->next = this->next;
--                this->next->prev = this->prev;
--                this->next = nullptr;
--                this->prev = nullptr;
--                delete this;
--            }
--
--
--
--            void addImmediate(SortedListNode<T>* newNode) {
--                assert(!this->isTail());
--                this->next->prev = newNode;
--                newNode->next = this->next;
--                this->next = newNode;
--                newNode->prev = this;
--            }
--
--            void add(SortedListNode<T>* newNode) {
--                //if we arrived at the end of the chain
--                if (!this->hasNext()) {
--                    assert(this->next->isTail());
--                    this->addImmediate(newNode);
--                    assert(this->isSorted());
--                    return;
--                }
--                //if we arrived at the orderly place of the new node
--                if (newNode > this->next) {
--                    assert(!this->next->isTail());
--                    this->addImmediate(newNode);
--                    assert(this->isSorted());
--                    return;
--                }
--                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
--                this->next->add(newNode);
--                assert(this->isSorted());
--            }
--
--            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
--            prev(prev), next(next), data(data) {}
--
--            /**
--             * overload of the isSorted function, to differentiate calls between
--             * the head and the rest of the chain
--             *
--             * @return if the list is sorted
--             */
--            bool isSorted(int) const {
--                if (this->isTail()){
--                    return true;
--                }
--                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
--            }
--
--        public:
--
--            inline bool isTail() const {
--                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
--            }
--
--            inline bool isHead() const {
--                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
--            }
--
--            inline bool hasNext()   const {
--                return !(this->next->isTail());
--            }
--
--            void insert(T const& const data) {
--                if (data == nullptr) {
--                    //TODO invalid argument
--                }
--                SortedListNode<T> * newNode = new SortedListNode<T>(data);
--                this->add(newNode);
--                assert(this->isSorted());
--            }
--
--            /**
--             *check if the list is sorted
--             *
--             * @return if the list is sorted
--             */
--            bool isSorted() const {
--                //the head breaks the sorted logic, if it is the head- skip it.
--                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
--            }
--
--            //FIXME CORRECT FOR SYNTAX
--            bool operator==(SortedListNode<T>* other) const {
--                return (this->data == other->data);
--            }
--
--            bool operator!=(SortedListNode<T>* other) const {
--                return !(*this == *other);
--            }
--
--            bool operator>(SortedListNode<T>* other) const {
--                return (this->data > other->data);
--            }
--
--            bool operator<(SortedListNode<T>* other) const {
--                bool equal = *this == *other;
--                bool greater = *this > *other;
--                return (!equal) && (!greater);
--            }
--
--            bool operator<=(SortedListNode<T>* other) const {
--                return !(*this > *other);
--            }
--
--            bool operator>=(const SortedListNode<T>* other) const {
--                return !(*this < *other);
--            }
--        };
-+        class SortedListNode;
-     private:
-         int listLength;
-         SortedListNode<T>* head;
-@@ -420,6 +279,147 @@ namespace mtm {
-      */
-     };
- 
-+    template <typename T>
-+    class SortedListNode {
-+            //TODO maybe delete these comment lines
-+            //the members of this class are only accessible by SortedList class
-+        private:
-+            friend class SortedList<T>;
-+            SortedListNode<T> * prev;
-+            SortedListNode<T> * next;
-+            T* data;
-+
-+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-+
-+            SortedListNode(T data): prev(nullptr), next(nullptr) {
-+                this->data = new T(data);
-+            }
-+
-+            //FIXME might be redundant
-+            SortedListNode(SortedListNode<T>* other) {
-+                this();
-+                this->data = new T(other->data);
-+            }
-+
-+            ~SortedListNode() {
-+                this->prev = nullptr;
-+                this->next = nullptr;
-+                delete this->data;
-+            }
-+
-+            void deleteNode() {
-+                this->prev->next = this->next;
-+                this->next->prev = this->prev;
-+                this->next = nullptr;
-+                this->prev = nullptr;
-+                delete this;
-+            }
-+
-+            void addImmediate(SortedListNode<T>* newNode) {
-+                assert(!this->isTail());
-+                this->next->prev = newNode;
-+                newNode->next = this->next;
-+                this->next = newNode;
-+                newNode->prev = this;
-+            }
-+
-+            void add(SortedListNode<T>* newNode) {
-+                //if we arrived at the end of the chain
-+                if (!this->hasNext()) {
-+                    assert(this->next->isTail());
-+                    this->addImmediate(newNode);
-+                    assert(this->isSorted());
-+                    return;
-+                }
-+                //if we arrived at the orderly place of the new node
-+                if (newNode > this->next) {
-+                    assert(!this->next->isTail());
-+                    this->addImmediate(newNode);
-+                    assert(this->isSorted());
-+                    return;
-+                }
-+                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-+                this->next->add(newNode);
-+                assert(this->isSorted());
-+            }
-+
-+            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
-+            prev(prev), next(next), data(data) {}
-+
-+            /**
-+             * overload of the isSorted function, to differentiate calls between
-+             * the head and the rest of the chain
-+             *
-+             * @return if the list is sorted
-+             */
-+            bool isSorted(int) const {
-+                if (this->isTail()){
-+                    return true;
-+                }
-+                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-+            }
-+
-+        public:
-+
-+            inline bool isTail() const {
-+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-+            }
-+
-+            inline bool isHead() const {
-+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-+            }
-+
-+            inline bool hasNext()   const {
-+                return !(this->next->isTail());
-+            }
-+
-+            void insert(T const& const data) {
-+                if (data == nullptr) {
-+                    //TODO invalid argument
-+                }
-+                SortedListNode<T> * newNode = new SortedListNode<T>(data);
-+                this->add(newNode);
-+                assert(this->isSorted());
-+            }
-+
-+            /**
-+             *check if the list is sorted
-+             *
-+             * @return if the list is sorted
-+             */
-+            bool isSorted() const {
-+                //the head breaks the sorted logic, if it is the head- skip it.
-+                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-+            }
-+
-+            //FIXME CORRECT FOR SYNTAX
-+            bool operator==(SortedListNode<T>* other) const {
-+                return (this->data == other->data);
-+            }
-+
-+            bool operator!=(SortedListNode<T>* other) const {
-+                return !(*this == *other);
-+            }
-+
-+            bool operator>(SortedListNode<T>* other) const {
-+                return (this->data > other->data);
-+            }
-+
-+            bool operator<(SortedListNode<T>* other) const {
-+                bool equal = *this == *other;
-+                bool greater = *this > *other;
-+                return (!equal) && (!greater);
-+            }
-+
-+            bool operator<=(SortedListNode<T>* other) const {
-+                return !(*this > *other);
-+            }
-+
-+            bool operator>=(const SortedListNode<T>* other) const {
-+                return !(*this < *other);
-+            }
-+        };
-+
-     template <class T>
-     class SortedList<T>::NodeIterator {
-         /**
-
-commit 499a688d37e7b71e864021e5140d75b59d4d643f
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 14:38:02 2025 +0200
-
-    moving class decleration to public
-
-diff --git a/SortedList.h b/SortedList.h
-index b791850..3c6af70 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -9,8 +9,6 @@ namespace mtm {
-     template <typename T>
-     class SortedList {
-         //class SortedListNode; //TODO fix dependencies
--        class ConstIterator;
--        class NodeIterator;
-         //TODO maybe delete these comment lines
-         //provides the de-facto interface for interacting with SortedListNode,
-         //wrapping function provides flexibility with static like parameters such as
-@@ -220,6 +218,8 @@ namespace mtm {
-         }
- 
-     public:
-+        class NodeIterator;
-+        class ConstIterator;
- 
-         SortedList<T>() : listLength(0){
-             this->head = new SortedListNode<T>();
-@@ -369,7 +369,6 @@ namespace mtm {
-          * 11. filter - returns a new list with elements that satisfy a given condition V?
-          * 12. apply - returns a new list with elements that were modified by an operation V?
-          */
--         class ConstIterator;
-     };
- 
-     template <class T>
-
-commit 5454659792d9f569cccb83916cef97d83481d2df
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 14:32:46 2025 +0200
-
-    update to reuse existing code
-
-diff --git a/SortedList.h b/SortedList.h
-index 6ddbb86..b791850 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -383,13 +383,14 @@ namespace mtm {
-             ConstIterator& operator=(const ConstIterator& other) = default;
-             ~ConstIterator() = default;
-             const T& operator*() const{
--                if(current == this->end()) {
-+                assert(!current->isHead());
-+                if(current->isTail()) {
-                     throw std::out_of_range("Iterator is out of range");
-                 }
-                 return *(current->data);
-             }
-             ConstIterator& operator++(){
--                if(current == this->end()){
-+                if(current->isTail()){
-                     throw std::out_of_range("Iterator is out of range");                
-                 }
-                 current = current->next;
-
-commit 927e3785eea6b1a8d57d238c4eb87e5794f71d06
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 14:28:14 2025 +0200
-
-    Update SortedList.h
-
-diff --git a/SortedList.h b/SortedList.h
-index 884fcae..6ddbb86 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -43,17 +43,15 @@ namespace mtm {
-                 delete this->data;
-             }
- 
--            inline bool isTail() const {
--                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-+            void deleteNode() {
-+                this->prev->next = this->next;
-+                this->next->prev = this->prev;
-+                this->next = nullptr;
-+                this->prev = nullptr;
-+                delete this;
-             }
- 
--            inline bool isHead() const {
--                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
--            }
- 
--            inline bool hasNext()   const {
--                return !(this->next->isTail());
--            }
- 
-             void addImmediate(SortedListNode<T>* newNode) {
-                 assert(!this->isTail());
-@@ -100,6 +98,19 @@ namespace mtm {
-             }
- 
-         public:
-+
-+            inline bool isTail() const {
-+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-+            }
-+
-+            inline bool isHead() const {
-+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-+            }
-+
-+            inline bool hasNext()   const {
-+                return !(this->next->isTail());
-+            }
-+
-             void insert(T const& const data) {
-                 if (data == nullptr) {
-                     //TODO invalid argument
-@@ -199,6 +210,15 @@ namespace mtm {
-             return this->listLength == 0;
-         }
- 
-+        void deleteNode(SortedListNode<T>* node) {
-+            if (node == nullptr) {
-+                return;
-+            }
-+            node->deleteNode();
-+            --(this->listLength);
-+            assert(this->isSorted());
-+        }
-+
-     public:
- 
-         SortedList<T>() : listLength(0){
-
-commit a4e202438cf033dd89268d31e6d29b6c103b1ece
-Merge: 66c4305 099e4ac
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 14:19:07 2025 +0200
-
-    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3
-
-commit 66c43053e99417fee6c4a99998399ae718e33a7f
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 14:09:36 2025 +0200
-
-    creating ConstIterator class
-
-diff --git a/SortedList.h b/SortedList.h
-index 5a0ca82..6fa951a 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -138,7 +138,6 @@ namespace mtm {
-          *
-          */
- 
--
-         bool isSorted() const {
-             if (this->isEmpty()){
-                 return true;
-@@ -164,20 +163,20 @@ namespace mtm {
- 
-     public:
- 
--        SortedList<T>() : length(0){
-+        SortedList() : length(0){
-             this->head = new SortedListNode<T>();
-             this->tail = new SortedListNode<T>();
-             this->head->next = this->tail;
-             this->tail->prev = this->head;
-         }
- 
--        SortedList<T>(const SortedList& other) : length(0){
-+        SortedList(const SortedList& other) : length(0){
-             this->head = new SortedListNode<T>();
-             this->tail = new SortedListNode<T>();
-             this->head->next = this->tail;
-             this->tail->prev = this->head;
-             if(other.head != nullptr){
--                for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-+                for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-                     this->insert(currentOther.data);
-                 }
-             }
-@@ -187,18 +186,20 @@ namespace mtm {
-             if(this == &other) {
-                 return *this;
-             }
--            
--            SortedListNode<T>* current = this->head->next;
--            while(current != this->tail) {
--                SortedListNode<T>* next = current->next;
--                delete current;
--                current = next;
-+            for(SortedList<T> current : *this) {
-+                this->remove(current);
-             }
-+            // SortedListNode<T>* current = this->head->next;
-+            // while(current != this->tail) {
-+            //     SortedListNode<T>* next = current->next;
-+            //     delete current;
-+            //     current = next;
-+            // }
-             this->length = 0;
-             if(other.head == nullptr) {
-                 return *this;
-             }
--            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-+            for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-                 this->insert(currentOther.data);
-             }
-             return *this;
-@@ -307,27 +308,54 @@ namespace mtm {
-          * 11. filter - returns a new list with elements that satisfy a given condition V?
-          * 12. apply - returns a new list with elements that were modified by an operation V?
-          */
--
-+         class ConstIterator;
-     };
- 
-     template <class T>
-     class SortedList<T>::ConstIterator {
-+        private:
-+            friend class SortedList<T>;
-+            SortedListNode<T>* current;
-+            ConstIterator(SortedListNode<T>* current) : current(current) {}
-+        public:
-+            ConstIterator(ConstIterator& other) = default;
-+            ConstIterator& operator=(const ConstIterator& other) = default;
-+            ~ConstIterator() = default;
-+            const T& operator*() const{
-+                if(current == this->end()) {
-+                    throw std::out_of_range("Iterator is out of range");
-+                }
-+                return *(current->data);
-+            }
-+            ConstIterator& operator++(){
-+                if(current == this->end()){
-+                    throw std::out_of_range("Iterator is out of range");                
-+                }
-+                current = current->next;
-+                return *this;
-+            }
-+            bool operator!=(const ConstIterator& other) const{
-+                return current != other.current;
-+            }
-+            bool operator>(const ConstIterator& other) const{
-+                return current->data > other.current->data;
-+            }
-+
-     /**
-      * the class should support the following public interface:
-      * if needed, use =defualt / =delete
-      *
-      * constructors and destructor:
--     * 1. a ctor(or ctors) your implementation needs
--     * 2. copy constructor
--     * 3. operator= - assignment operator
--     * 4. ~ConstIterator() - destructor
-+     * 1. a ctor(or ctors) your implementation needs V?
-+     * 2. copy constructor V?
-+     * 3. operator= - assignment operator V?
-+     * 4. ~ConstIterator() - destructor V?
-      *
-      * operators:
--     * 5. operator* - returns the element the iterator points to
--     * 6. operator++ - advances the iterator to the next element
--     * 7. operator!= - returns true if the iterator points to a different element
-+     * 5. operator* - returns the element the iterator points to V?
-+     * 6. operator++ - advances the iterator to the next element V?
-+     * 7. operator!= - returns true if the iterator points to a different element V?
-      *
-      */
-     };
--    }
- };
-\ No newline at end of file
-
-commit 099e4ac09c104eb5e51318fee812f590772876b3
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Sat Jan 4 14:04:32 2025 +0200
-
-    add nodeiterator
-    add node operators
-
-diff --git a/SortedList.h b/SortedList.h
-index 5a0ca82..d5603ee 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -3,11 +3,14 @@
- #include <iostream>
- #include <stdexcept>
- #include <cassert>
-+#include <functional>
- 
- namespace mtm {
--
-     template <typename T>
-     class SortedList {
-+        //class SortedListNode; //TODO fix dependencies
-+        class ConstIterator;
-+        class NodeIterator;
-         //TODO maybe delete these comment lines
-         //provides the de-facto interface for interacting with SortedListNode,
-         //wrapping function provides flexibility with static like parameters such as
-@@ -28,6 +31,12 @@ namespace mtm {
-                 this->data = new T(data);
-             }
- 
-+            //FIXME might be redundant
-+            SortedListNode(SortedListNode<T>* other) {
-+                this();
-+                this->data = new T(other->data);
-+            }
-+
-             ~SortedListNode() {
-                 this->prev = nullptr;
-                 this->next = nullptr;
-@@ -57,12 +66,14 @@ namespace mtm {
-             void add(SortedListNode<T>* newNode) {
-                 //if we arrived at the end of the chain
-                 if (!this->hasNext()) {
-+                    assert(this->next->isTail());
-                     this->addImmediate(newNode);
-                     assert(this->isSorted());
-                     return;
-                 }
-                 //if we arrived at the orderly place of the new node
-                 if (newNode > this->next) {
-+                    assert(!this->next->isTail());
-                     this->addImmediate(newNode);
-                     assert(this->isSorted());
-                     return;
-@@ -107,9 +118,36 @@ namespace mtm {
-                 //the head breaks the sorted logic, if it is the head- skip it.
-                 return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-             }
-+
-+            //FIXME CORRECT FOR SYNTAX
-+            bool operator==(SortedListNode<T>* other) const {
-+                return (this->data == other->data);
-+            }
-+
-+            bool operator!=(SortedListNode<T>* other) const {
-+                return !(*this == *other);
-+            }
-+
-+            bool operator>(SortedListNode<T>* other) const {
-+                return (this->data > other->data);
-+            }
-+
-+            bool operator<(SortedListNode<T>* other) const {
-+                bool equal = *this == *other;
-+                bool greater = *this > *other;
-+                return (!equal) && (!greater);
-+            }
-+
-+            bool operator<=(SortedListNode<T>* other) const {
-+                return !(*this > *other);
-+            }
-+
-+            bool operator>=(const SortedListNode<T>* other) const {
-+                return !(*this < *other);
-+            }
-         };
-     private:
--        int length;
-+        int listLength;
-         SortedListNode<T>* head;
-         SortedListNode<T>* tail;
- 
-@@ -151,7 +189,7 @@ namespace mtm {
-             for (SortedListNode<T>* node : this) {
-                 ++actualLength;
-             }
--            return actualLength == this->length;
-+            return actualLength == this->listLength;
-         }
- 
-         bool verifyList() const {
-@@ -159,19 +197,19 @@ namespace mtm {
-         }
- 
-         inline bool isEmpty(){
--            return this->length == 0;
-+            return this->listLength == 0;
-         }
- 
-     public:
- 
--        SortedList<T>() : length(0){
-+        SortedList<T>() : listLength(0){
-             this->head = new SortedListNode<T>();
-             this->tail = new SortedListNode<T>();
-             this->head->next = this->tail;
-             this->tail->prev = this->head;
-         }
- 
--        SortedList<T>(const SortedList& other) : length(0){
-+        SortedList<T>(const SortedList& other) : listLength(0){
-             this->head = new SortedListNode<T>();
-             this->tail = new SortedListNode<T>();
-             this->head->next = this->tail;
-@@ -194,7 +232,7 @@ namespace mtm {
-                 delete current;
-                 current = next;
-             }
--            this->length = 0;
-+            this->listLength = 0;
-             if(other.head == nullptr) {
-                 return *this;
-             }
-@@ -214,7 +252,7 @@ namespace mtm {
- 
-         void insert(const T& newElement) {
-             this->head->insert(newElement);
--            ++this->length;
-+            ++(this->listLength);
-             assert(this->verifyList());
-         }
- 
-@@ -237,8 +275,10 @@ namespace mtm {
- 
- 
-         int length() const {
--            return this->length;
-+            return this->listLength;
-         }
-+
-+        //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-         
-         void remove(ConstIterator<T>& iter){
-             if(iter == this->end()) {
-@@ -254,15 +294,15 @@ namespace mtm {
-                 nextNode->prev = prevNode;
-             }
-             delete iter;
--            this->length--;
-+            (this->listLength)--;
-         }
- 
-         template <class Condition>
-         SortedList<T> filter(Condition condition) const{
-             SortedList<T> filteredList;
--            for(const SortedListNode<T>& current : *this){
--                if(condition(current.data)) {
--                    filteredList.insert(current.data);
-+            for(T& val : this){
-+                if(condition(val)) {
-+                    filteredList.insert(val);
-                 }
-             }
-             return filteredList;
-@@ -271,8 +311,8 @@ namespace mtm {
-         template <class Function>
-         SortedList<T> apply(Function function) const{
-             SortedList<T> appliedList;
--            for(const SortedListNode<T>& current : *this){
--                appliedList.insert((function(current)).data);
-+            for(T& val : this){
-+                appliedList.insert(function(val));
-             }
-             return appliedList;
-         }
-@@ -329,5 +369,63 @@ namespace mtm {
-      *
-      */
-     };
--    }
-+
-+    template <class T>
-+    class SortedList<T>::NodeIterator {
-+        /**
-+         * the class should support the following public interface:
-+         * if needed, use =defualt / =delete
-+         *
-+         * constructors and destructor:
-+         * 1. a ctor(or ctors) your implementation needs
-+         * 2. copy constructor
-+         * 3. operator= - assignment operator
-+         * 4. ~ConstIterator() - destructor
-+         *
-+         * operators:
-+         * 5. operator* - returns the element the iterator points to
-+         * 6. operator++ - advances the iterator to the next element
-+         * 7. operator!= - returns true if the iterator points to a different element
-+         *
-+         */
-+        private:
-+        SortedListNode<T>* current;
-+        int index;
-+        public:
-+
-+        NodeIterator() = delete;
-+
-+        NodeIterator(SortedListNode<T>* current) : current(current) {}
-+
-+        bool operator==(const NodeIterator& other) const {
-+            return this->current == other.current;
-+        }
-+
-+        bool operator!=(const NodeIterator& other) const {
-+            return !(this == other);
-+        }
-+
-+        bool operator<(const NodeIterator& other) const {
-+            return this->index < other.index;
-+        }
-+
-+        bool operator>(const NodeIterator& other) const {
-+            return (this != other) && (!(this < other));
-+        }
-+
-+        bool operator<=(const NodeIterator& other) const {
-+            return !(*this > other);
-+        }
-+
-+        bool operator>=(const NodeIterator& other) const {
-+            return !(*this < other);
-+        }
-+
-+        T operator*() const {
-+            return this->current;
-+        }
-+
-+
-+
-+    };
- };
-\ No newline at end of file
-
-commit d08cf9576c9f5b7c1c662d75873a69a876a96dee
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 11:32:43 2025 +0200
-
-    fixing CC and operator=()
-
-diff --git a/.vscode/settings.json b/.vscode/settings.json
-new file mode 100644
-index 0000000..352ce2f
---- /dev/null
-+++ b/.vscode/settings.json
-@@ -0,0 +1,53 @@
-+{
-+    "files.associations": {
-+        "iostream": "cpp",
-+        "atomic": "cpp",
-+        "bit": "cpp",
-+        "cctype": "cpp",
-+        "charconv": "cpp",
-+        "clocale": "cpp",
-+        "cmath": "cpp",
-+        "compare": "cpp",
-+        "concepts": "cpp",
-+        "cstddef": "cpp",
-+        "cstdint": "cpp",
-+        "cstdio": "cpp",
-+        "cstdlib": "cpp",
-+        "cstring": "cpp",
-+        "ctime": "cpp",
-+        "cwchar": "cpp",
-+        "exception": "cpp",
-+        "format": "cpp",
-+        "initializer_list": "cpp",
-+        "ios": "cpp",
-+        "iosfwd": "cpp",
-+        "istream": "cpp",
-+        "iterator": "cpp",
-+        "limits": "cpp",
-+        "locale": "cpp",
-+        "memory": "cpp",
-+        "new": "cpp",
-+        "ostream": "cpp",
-+        "stdexcept": "cpp",
-+        "streambuf": "cpp",
-+        "string": "cpp",
-+        "system_error": "cpp",
-+        "tuple": "cpp",
-+        "type_traits": "cpp",
-+        "typeinfo": "cpp",
-+        "utility": "cpp",
-+        "xfacet": "cpp",
-+        "xiosbase": "cpp",
-+        "xlocale": "cpp",
-+        "xlocbuf": "cpp",
-+        "xlocinfo": "cpp",
-+        "xlocmes": "cpp",
-+        "xlocmon": "cpp",
-+        "xlocnum": "cpp",
-+        "xloctime": "cpp",
-+        "xmemory": "cpp",
-+        "xstring": "cpp",
-+        "xtr1common": "cpp",
-+        "xutility": "cpp"
-+    }
-+}
-\ No newline at end of file
-diff --git a/SortedList.h b/SortedList.h
-index 6cbc440..5a0ca82 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -172,29 +172,15 @@ namespace mtm {
-         }
- 
-         SortedList<T>(const SortedList& other) : length(0){
--            if(other.head == nullptr) {
--                this->head = nullptr;
--                this->tail = nullptr;
--                return;
--            }
--            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
--                this->insert(currentOther.data);
-+            this->head = new SortedListNode<T>();
-+            this->tail = new SortedListNode<T>();
-+            this->head->next = this->tail;
-+            this->tail->prev = this->head;
-+            if(other.head != nullptr){
-+                for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-+                    this->insert(currentOther.data);
-+                }
-             }
--            
--            // SortedListNode<T>* currentOther = other.head;
--            // SortedListNode<T>* currentNode = this->head;
--            //  SortedListNode<T>* previousNode = nullptr;
--            // while(currentOther != nullptr) {
--            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
--            //     if(previousNode == nullptr) {
--            //         this->head = currentNode;
--            //     }
--            //     if(previousNode != nullptr) {
--            //         previousNode->next = currentNode;
--            //     }
--            //     this->tail = currentNode;
--            //     previousNode = currentNode;
--            //     currentOther = currentOther->next;
-         }
- 
-         SortedList<T>& operator=(const SortedList& other) {
-@@ -202,14 +188,12 @@ namespace mtm {
-                 return *this;
-             }
-             
--            SortedListNode<T>* current = this->head;
--            while(current != nullptr) {
-+            SortedListNode<T>* current = this->head->next;
-+            while(current != this->tail) {
-                 SortedListNode<T>* next = current->next;
-                 delete current;
-                 current = next;
-             }
--            this->head = nullptr;
--            this->tail = nullptr;
-             this->length = 0;
-             if(other.head == nullptr) {
-                 return *this;
-@@ -217,21 +201,6 @@ namespace mtm {
-             for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-                 this->insert(currentOther.data);
-             }
--            // SortedListNode<T>* currentOther = other.head;
--            // SortedListNode<T>* currentNode = this->head;
--            // SortedListNode<T>* previousNode = nullptr;
--            // while(currentOther != nullptr) {
--            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
--            //     if(previousNode == nullptr) {
--            //         this->head = currentNode;
--            //     }
--            //     if(previousNode != nullptr) {
--            //         previousNode->next = currentNode;
--            //     }
--            //     this->tail = currentNode;
--            //     previousNode = currentNode;
--            //     currentOther = currentOther->next;
--            // }
-             return *this;
-         }
-         ~SortedList() {
-@@ -309,7 +278,7 @@ namespace mtm {
-         }
- 
-         ConstIterator begin() const {
--            return ConstIterator(this->head);
-+            return ConstIterator(this->head->next);
-         }
- 
-         ConstIterator end() const {
-
-commit 2c68bdf8b69731a12d5d4b4e302f3abb4ea95aea
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Sat Jan 4 11:14:42 2025 +0200
-
-    fixing end() it
-
-diff --git a/SortedList.h b/SortedList.h
-index e378942..6cbc440 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -313,7 +313,7 @@ namespace mtm {
-         }
- 
-         ConstIterator end() const {
--            return ConstIterator(nullptr);
-+            return ConstIterator(this->tail);
-         }
-         /**
-          *
-
-commit cc2da7994d41dd0195f8f1d7585ca17b0fdf5bcd
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Fri Jan 3 12:45:29 2025 +0200
-
-    add comments
-
-diff --git a/.idea/editor.xml b/.idea/editor.xml
-index 95d51a7..8434d3b 100644
---- a/.idea/editor.xml
-+++ b/.idea/editor.xml
-@@ -2,483 +2,244 @@
- <project version="4">
-   <component name="BackendCodeEditorSettings">
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
-     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
--    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
-     <option name="/Default/CodeStyle/CodeFormatting/CppClangFormat/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
-     <option name="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
-     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue" value="true" type="bool" />
-@@ -576,5 +337,244 @@
-     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_SIZE/@EntryValue" value="4" type="int" />
-     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CONTINUOUS_LINE_INDENT/@EntryValue" value="Double" type="string" />
-     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TAB_WIDTH/@EntryValue" value="4" type="int" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
-   </component>
- </project>
-\ No newline at end of file
-diff --git a/SortedList.h b/SortedList.h
-index bc3b36f..e378942 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -8,59 +8,125 @@ namespace mtm {
- 
-     template <typename T>
-     class SortedList {
-+        //TODO maybe delete these comment lines
-+        //provides the de-facto interface for interacting with SortedListNode,
-+        //wrapping function provides flexibility with static like parameters such as
-+        //head and tail, without forcing a single instance of the list class.
-         template <typename T>
-         class SortedListNode {
--            private:
-+            //TODO maybe delete these comment lines
-+            //the members of this class are only accessible by SortedList class
-+        private:
-             friend class SortedList<T>;
-             SortedListNode<T> * prev;
-             SortedListNode<T> * next;
-             T* data;
--            void add(SortedListNode<T> * newNode) {
--                if (newNode > this->next){ //TODO create > operator, make null node smallest;
--                    this->next->add(newNode);
--                    return;
--                }
-+
-+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-+
-+            SortedListNode(T data): prev(nullptr), next(nullptr) {
-+                this->data = new T(data);
-+            }
-+
-+            ~SortedListNode() {
-+                this->prev = nullptr;
-+                this->next = nullptr;
-+                delete this->data;
-+            }
-+
-+            inline bool isTail() const {
-+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-+            }
-+
-+            inline bool isHead() const {
-+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-+            }
-+
-+            inline bool hasNext()   const {
-+                return !(this->next->isTail());
-+            }
-+
-+            void addImmediate(SortedListNode<T>* newNode) {
-+                assert(!this->isTail());
-                 this->next->prev = newNode;
-                 newNode->next = this->next;
-                 this->next = newNode;
-                 newNode->prev = this;
-             }
--            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) : prev(prev), next(next), data(data) {}
--            public:
--            void add(T const& const data) {
-+
-+            void add(SortedListNode<T>* newNode) {
-+                //if we arrived at the end of the chain
-+                if (!this->hasNext()) {
-+                    this->addImmediate(newNode);
-+                    assert(this->isSorted());
-+                    return;
-+                }
-+                //if we arrived at the orderly place of the new node
-+                if (newNode > this->next) {
-+                    this->addImmediate(newNode);
-+                    assert(this->isSorted());
-+                    return;
-+                }
-+                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-+                this->next->add(newNode);
-+                assert(this->isSorted());
-+            }
-+
-+            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
-+            prev(prev), next(next), data(data) {}
-+
-+            /**
-+             * overload of the isSorted function, to differentiate calls between
-+             * the head and the rest of the chain
-+             *
-+             * @return if the list is sorted
-+             */
-+            bool isSorted(int) const {
-+                if (this->isTail()){
-+                    return true;
-+                }
-+                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-+            }
-+
-+        public:
-+            void insert(T const& const data) {
-                 if (data == nullptr) {
-                     //TODO invalid argument
-                 }
-                 SortedListNode<T> * newNode = new SortedListNode<T>(data);
-                 this->add(newNode);
--            }
--            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
--            ~SortedListNode() {
--                this->prev = nullptr;
--                this->next = nullptr;
--                delete this->data;
-+                assert(this->isSorted());
-             }
- 
--            bool isSorted(){ //FIXME make it so the head itself wont call this function, because otherwise it would break the logic
--                if (this->next == nullptr){
--                    return true;
--                }
--                return (this >= this->next) && (this->next->isSorted()); //TODO create >= operator
-+            /**
-+             *check if the list is sorted
-+             *
-+             * @return if the list is sorted
-+             */
-+            bool isSorted() const {
-+                //the head breaks the sorted logic, if it is the head- skip it.
-+                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-             }
-         };
--        private:
-+    private:
-         int length;
-         SortedListNode<T>* head;
-         SortedListNode<T>* tail;
- 
-+        /**
-+         * //maybe can delete this function
-         void addInitial(SortedListNode<T>* addThis){
-             assert(this->isEmpty());
-             this->head->add(addThis);
-         }
-+         */
- 
-+
-+        /** //maybe can delete this function
-         void add(SortedListNode<T>* addThis){
-             if(this->isEmpty()){
--                this->addInitial(addThis);
-+                this->head->addImmediate(addThis);
-+                return;
-             }
-             for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
-                 if (addThis > node){
-@@ -69,22 +135,43 @@ namespace mtm {
-                 }
-             }
-         }
-+         *
-+         */
-+
- 
--        bool isSorted(){
-+        bool isSorted() const {
-             if (this->isEmpty()){
-                 return true;
-             }
-             return head->isSorted();
-         }
- 
-+        bool verifyLength() const {
-+            int actualLength = 0;
-+            for (SortedListNode<T>* node : this) {
-+                ++actualLength;
-+            }
-+            return actualLength == this->length;
-+        }
-+
-+        bool verifyList() const {
-+            return (this->isSorted())&&(this->verifyLength());
-+        }
-+
-+        inline bool isEmpty(){
-+            return this->length == 0;
-+        }
-+
-     public:
--        SortedList() : length(0){
-+
-+        SortedList<T>() : length(0){
-             this->head = new SortedListNode<T>();
-             this->tail = new SortedListNode<T>();
-             this->head->next = this->tail;
-             this->tail->prev = this->head;
-         }
--        SortedList(const SortedList& other) : length(0){
-+
-+        SortedList<T>(const SortedList& other) : length(0){
-             if(other.head == nullptr) {
-                 this->head = nullptr;
-                 this->tail = nullptr;
-@@ -109,13 +196,6 @@ namespace mtm {
-             //     previousNode = currentNode;
-             //     currentOther = currentOther->next;
-         }
--        
--        /**
--         * no need to keep such basic utility private
--         */
--        inline bool isEmpty(){
--            return this->length == 0;
--        }
- 
-         SortedList<T>& operator=(const SortedList& other) {
-             if(this == &other) {
-@@ -163,6 +243,13 @@ namespace mtm {
-             }
-         }
- 
-+        void insert(const T& newElement) {
-+            this->head->insert(newElement);
-+            ++this->length;
-+            assert(this->verifyList());
-+        }
-+
-+        /**
-         void insert(const T& newElement){
-             if (newElement == nullptr) {
-                     //TODO invalid argument
-@@ -172,10 +259,13 @@ namespace mtm {
-                 this->tail = this->head;
-                 this->length = 1;
-                 return;
--            }  
-+            }
-             this->head->add(newElement);
-             this->length++;
-         }
-+         */
-+
-+
- 
-         int length() const {
-             return this->length;
-diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
-index 2dd1bfe..e15ca9a 100644
---- a/cmake-build-debug/Testing/Temporary/LastTest.log
-+++ b/cmake-build-debug/Testing/Temporary/LastTest.log
-@@ -1,3 +1,3 @@
--Start testing: Dec 31 08:10 IST
-+Start testing: Jan 03 11:09 IST
- ----------------------------------------------------------
--End testing: Dec 31 08:10 IST
-+End testing: Jan 03 11:09 IST
-
-commit 98938d5bebc6842979a36b6a471586cb958a2784
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Fri Jan 3 11:07:33 2025 +0200
-
-    add linkedlist assertion functions
-
-diff --git a/SortedList.h b/SortedList.h
-index 1e29b25..bc3b36f 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -34,11 +34,19 @@ namespace mtm {
-                 SortedListNode<T> * newNode = new SortedListNode<T>(data);
-                 this->add(newNode);
-             }
-+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-             ~SortedListNode() {
-                 this->prev = nullptr;
-                 this->next = nullptr;
-                 delete this->data;
-             }
-+
-+            bool isSorted(){ //FIXME make it so the head itself wont call this function, because otherwise it would break the logic
-+                if (this->next == nullptr){
-+                    return true;
-+                }
-+                return (this >= this->next) && (this->next->isSorted()); //TODO create >= operator
-+            }
-         };
-         private:
-         int length;
-@@ -57,13 +65,25 @@ namespace mtm {
-             for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
-                 if (addThis > node){
-                     node->addPrevious(addThis); //TODO add addprevious method to nodes
--                    break;
-+                    return;
-                 }
-             }
-         }
- 
-+        bool isSorted(){
-+            if (this->isEmpty()){
-+                return true;
-+            }
-+            return head->isSorted();
-+        }
-+
-     public:
--        SortedList() : length(0), head(nullptr), tail(nullptr) {}
-+        SortedList() : length(0){
-+            this->head = new SortedListNode<T>();
-+            this->tail = new SortedListNode<T>();
-+            this->head->next = this->tail;
-+            this->tail->prev = this->head;
-+        }
-         SortedList(const SortedList& other) : length(0){
-             if(other.head == nullptr) {
-                 this->head = nullptr;
-@@ -90,6 +110,9 @@ namespace mtm {
-             //     currentOther = currentOther->next;
-         }
-         
-+        /**
-+         * no need to keep such basic utility private
-+         */
-         inline bool isEmpty(){
-             return this->length == 0;
-         }
-
-commit fc286dc81fb3b2d0159659ff4c29a74b9c4fe66b
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Fri Jan 3 09:38:14 2025 +0200
-
-    add linkedlist code
-
-diff --git a/SortedList.h b/SortedList.h
-index 145286d..1e29b25 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -2,6 +2,7 @@
- 
- #include <iostream>
- #include <stdexcept>
-+#include <cassert>
- 
- namespace mtm {
- 
-@@ -15,7 +16,7 @@ namespace mtm {
-             SortedListNode<T> * next;
-             T* data;
-             void add(SortedListNode<T> * newNode) {
--                if (newNode <= this->next){ //TODO create > operator, make null node smallest;
-+                if (newNode > this->next){ //TODO create > operator, make null node smallest;
-                     this->next->add(newNode);
-                     return;
-                 }
-@@ -44,6 +45,23 @@ namespace mtm {
-         SortedListNode<T>* head;
-         SortedListNode<T>* tail;
- 
-+        void addInitial(SortedListNode<T>* addThis){
-+            assert(this->isEmpty());
-+            this->head->add(addThis);
-+        }
-+
-+        void add(SortedListNode<T>* addThis){
-+            if(this->isEmpty()){
-+                this->addInitial(addThis);
-+            }
-+            for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
-+                if (addThis > node){
-+                    node->addPrevious(addThis); //TODO add addprevious method to nodes
-+                    break;
-+                }
-+            }
-+        }
-+
-     public:
-         SortedList() : length(0), head(nullptr), tail(nullptr) {}
-         SortedList(const SortedList& other) : length(0){
-@@ -71,6 +89,10 @@ namespace mtm {
-             //     previousNode = currentNode;
-             //     currentOther = currentOther->next;
-         }
-+        
-+        inline bool isEmpty(){
-+            return this->length == 0;
-+        }
- 
-         SortedList<T>& operator=(const SortedList& other) {
-             if(this == &other) {
-
-commit 24e6da1e72d0ed05efd28275ce3c586d73a4a0de
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Fri Jan 3 08:56:34 2025 +0200
-
-    add json configurations
-
-diff --git a/.idea/.gitignore b/.idea/.gitignore
-new file mode 100644
-index 0000000..13566b8
---- /dev/null
-+++ b/.idea/.gitignore
-@@ -0,0 +1,8 @@
-+# Default ignored files
-+/shelf/
-+/workspace.xml
-+# Editor-based HTTP Client requests
-+/httpRequests/
-+# Datasource local storage ignored files
-+/dataSources/
-+/dataSources.local.xml
-diff --git a/.idea/Matam_HW3.iml b/.idea/Matam_HW3.iml
-new file mode 100644
-index 0000000..f08604b
---- /dev/null
-+++ b/.idea/Matam_HW3.iml
-@@ -0,0 +1,2 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<module classpath="CMake" type="CPP_MODULE" version="4" />
-\ No newline at end of file
-diff --git a/.idea/editor.xml b/.idea/editor.xml
-new file mode 100644
-index 0000000..95d51a7
---- /dev/null
-+++ b/.idea/editor.xml
-@@ -0,0 +1,580 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="BackendCodeEditorSettings">
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppClangFormat/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_EXPRESSION/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_FOR_STMT/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_TERNARY/@EntryValue" value="ALIGN_ALL" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_CLASS_DEFINITION/@EntryValue" value="1" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue" value="2" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_CODE/@EntryValue" value="2" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_USER_LINEBREAKS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CASE_FROM_SWITCH/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_COMMENT/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INT_ALIGN_EQ/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SIMPLE_BLOCK_STYLE/@EntryValue" value="DO_NOT_CHANGE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COMMA_IN_TEMPLATE_ARGS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COMMA_IN_TEMPLATE_PARAMS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_FOR_SEMICOLON/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_FOR_SEMICOLON/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_UNARY_OPERATOR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_ARRAY_ACCESS_BRACKETS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_CAST_EXPRESSION_PARENTHESES/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_INITIALIZER_BRACES/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_METHOD_PARENTHESES/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_INITIALIZER_BRACES/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPECIAL_ELSE_IF_TREATMENT/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_CAST_EXPRESSION_PARENTHESES/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_BINARY_OPSIGN/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_TERNARY_OPSIGNS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TYPE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/OTHER_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CASE_BLOCK_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DECLARATION/@EntryValue" value="1" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DEFINITION/@EntryValue" value="1" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_WHILE_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_ELSE_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_CATCH_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/NAMESPACE_INDENTATION/@EntryValue" value="All" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_ARGUMENT/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_PARAMETER/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_TYPE_ARGUMENT/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_TYPE_PARAMETER/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_DECLARATIONS/@EntryValue" value="0" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_ACCESS_SPECIFIERS_FROM_CLASS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CLASS_MEMBERS_FROM_ACCESS_SPECIFIERS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/LINE_BREAK_AFTER_COLON_IN_MEMBER_INITIALIZER_LISTS/@EntryValue" value="ON_SINGLE_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/MEMBER_INITIALIZER_LIST_STYLE/@EntryValue" value="DO_NOT_CHANGE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_NAMESPACE_DEFINITIONS_ON_SAME_LINE/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COLON_IN_BITFIELD_DECLARATOR/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_COLON_IN_BITFIELD_DECLARATOR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_EXTENDS_COLON/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_EXTENDS_COLON/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_FOR_COLON/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_FOR_COLON/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_DATA_MEMBER/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_DATA_MEMBERS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_METHOD/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_NESTED_DECLARATOR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_DATA_MEMBER/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_DATA_MEMBERS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_METHOD/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_ABSTRACT_DECL/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_DATA_MEMBER/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_DATA_MEMBERS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_METHOD/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_ABSTRACT_DECL/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_DATA_MEMBER/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_DATA_MEMBERS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_METHOD/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_TEMPLATE_ARGS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BETWEEN_CLOSING_ANGLE_BRACKETS_IN_TEMPLATE_ARGS/@EntryValue" value="true" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_TEMPLATE_ARGS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_DECLARATION_PARENTHESES/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_BLOCKS/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_INVOCATION_LPAR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_INVOCATION_LPAR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_INVOCATION_RPAR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_DECLARATION_LPAR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_DECLARATION_LPAR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_DECLARATION_RPAR/@EntryValue" value="false" type="bool" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_ARGUMENTS_STYLE/@EntryValue" value="WRAP_IF_LONG" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_PARAMETERS_STYLE/@EntryValue" value="WRAP_IF_LONG" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BREAK_TEMPLATE_DECLARATION/@EntryValue" value="LINE_BREAK" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/NAMESPACE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/FREE_BLOCK_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INVOCABLE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INITIALIZER_BRACES/@EntryValue" value="END_OF_LINE_NO_SPACE" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_STYLE/@EntryValue" value="Space" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_SIZE/@EntryValue" value="4" type="int" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CONTINUOUS_LINE_INDENT/@EntryValue" value="Double" type="string" />
-+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TAB_WIDTH/@EntryValue" value="4" type="int" />
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/.idea/misc.xml b/.idea/misc.xml
-new file mode 100644
-index 0000000..0b76fe5
---- /dev/null
-+++ b/.idea/misc.xml
-@@ -0,0 +1,7 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="CMakePythonSetting">
-+    <option name="pythonIntegrationState" value="YES" />
-+  </component>
-+  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
-+</project>
-\ No newline at end of file
-diff --git a/.idea/modules.xml b/.idea/modules.xml
-new file mode 100644
-index 0000000..2f869e5
---- /dev/null
-+++ b/.idea/modules.xml
-@@ -0,0 +1,8 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="ProjectModuleManager">
-+    <modules>
-+      <module fileurl="file://$PROJECT_DIR$/.idea/Matam_HW3.iml" filepath="$PROJECT_DIR$/.idea/Matam_HW3.iml" />
-+    </modules>
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/.idea/vcs.xml b/.idea/vcs.xml
-new file mode 100644
-index 0000000..35eb1dd
---- /dev/null
-+++ b/.idea/vcs.xml
-@@ -0,0 +1,6 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="VcsDirectoryMappings">
-+    <mapping directory="" vcs="Git" />
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/CMakeLists.txt b/CMakeLists.txt
-new file mode 100644
-index 0000000..01c2f22
---- /dev/null
-+++ b/CMakeLists.txt
-@@ -0,0 +1,15 @@
-+cmake_minimum_required(VERSION 3.29)
-+project(Matam_HW3)
-+
-+set(CMAKE_CXX_STANDARD 14)
-+
-+include_directories(.)
-+
-+add_executable(Matam_HW3
-+    main.cpp
-+    Person.cpp
-+    Person.h
-+    SortedList.h
-+    Task.cpp
-+    Task.h
-+    TaskManager.h)
-diff --git a/cmake-build-debug/.cmake/api/v1/query/cache-v2 b/cmake-build-debug/.cmake/api/v1/query/cache-v2
-new file mode 100644
-index 0000000..e69de29
-diff --git a/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1 b/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1
-new file mode 100644
-index 0000000..e69de29
-diff --git a/cmake-build-debug/.cmake/api/v1/query/codemodel-v2 b/cmake-build-debug/.cmake/api/v1/query/codemodel-v2
-new file mode 100644
-index 0000000..e69de29
-diff --git a/cmake-build-debug/.cmake/api/v1/query/toolchains-v1 b/cmake-build-debug/.cmake/api/v1/query/toolchains-v1
-new file mode 100644
-index 0000000..e69de29
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json
-new file mode 100644
-index 0000000..3340ebc
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json
-@@ -0,0 +1,1163 @@
-+{
-+	"entries" : 
-+	[
-+		{
-+			"name" : "CMAKE_ADDR2LINE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "CMAKE_ADDR2LINE-NOTFOUND"
-+		},
-+		{
-+			"name" : "CMAKE_AR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/ar"
-+		},
-+		{
-+			"name" : "CMAKE_BUILD_TYPE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ..."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "Debug"
-+		},
-+		{
-+			"name" : "CMAKE_CACHEFILE_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "This is the directory where this CMakeCache.txt was created"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug"
-+		},
-+		{
-+			"name" : "CMAKE_CACHE_MAJOR_VERSION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Major version of cmake used to create the current loaded cache"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "3"
-+		},
-+		{
-+			"name" : "CMAKE_CACHE_MINOR_VERSION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Minor version of cmake used to create the current loaded cache"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "29"
-+		},
-+		{
-+			"name" : "CMAKE_CACHE_PATCH_VERSION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Patch version of cmake used to create the current loaded cache"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "6"
-+		},
-+		{
-+			"name" : "CMAKE_COLOR_DIAGNOSTICS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Enable colored diagnostics throughout."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "ON"
-+		},
-+		{
-+			"name" : "CMAKE_COMMAND",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to CMake executable."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake"
-+		},
-+		{
-+			"name" : "CMAKE_CPACK_COMMAND",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to cpack program executable."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack"
-+		},
-+		{
-+			"name" : "CMAKE_CTEST_COMMAND",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to ctest program executable."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_COMPILER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "CXX compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/c++"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-g"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-Os -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O3 -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_CXX_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the CXX compiler during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O2 -g -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_C_COMPILER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "C compiler"
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/cc"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-g"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-Os -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O3 -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_C_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the C compiler during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : "-O2 -g -DNDEBUG"
-+		},
-+		{
-+			"name" : "CMAKE_DLLTOOL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "CMAKE_DLLTOOL-NOTFOUND"
-+		},
-+		{
-+			"name" : "CMAKE_EXECUTABLE_FORMAT",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Executable file format"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "MACHO"
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXPORT_COMPILE_COMMANDS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Enable/Disable output of compile commands during generation."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_EXTRA_GENERATOR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of external makefile project generator."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_FIND_PACKAGE_REDIRECTS_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake."
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/pkgRedirects"
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of generator."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "Ninja"
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR_INSTANCE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Generator instance identifier."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR_PLATFORM",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of generator platform."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_GENERATOR_TOOLSET",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Name of generator toolset."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_HOME_DIRECTORY",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Source directory with the top level CMakeLists.txt file for this project"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
-+		},
-+		{
-+			"name" : "CMAKE_INSTALL_NAME_TOOL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/usr/bin/install_name_tool"
-+		},
-+		{
-+			"name" : "CMAKE_INSTALL_PREFIX",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Install path prefix, prepended onto install directories."
-+				}
-+			],
-+			"type" : "PATH",
-+			"value" : "/usr/local"
-+		},
-+		{
-+			"name" : "CMAKE_LINKER",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/ld"
-+		},
-+		{
-+			"name" : "CMAKE_MAKE_PROGRAM",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "No help, variable specified on the command line."
-+				}
-+			],
-+			"type" : "UNINITIALIZED",
-+			"value" : "/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja"
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_NM",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/nm"
-+		},
-+		{
-+			"name" : "CMAKE_NUMBER_OF_MAKEFILES",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "number of local generators"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "1"
-+		},
-+		{
-+			"name" : "CMAKE_OBJCOPY",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "CMAKE_OBJCOPY-NOTFOUND"
-+		},
-+		{
-+			"name" : "CMAKE_OBJDUMP",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/objdump"
-+		},
-+		{
-+			"name" : "CMAKE_OSX_ARCHITECTURES",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Build architectures for OSX"
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_OSX_DEPLOYMENT_TARGET",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Minimum OS X version to target for deployment (at runtime); newer APIs weak linked. Set to empty string for default value."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_OSX_SYSROOT",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "The product will be built against the headers and libraries located inside the indicated SDK."
-+				}
-+			],
-+			"type" : "PATH",
-+			"value" : "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
-+		},
-+		{
-+			"name" : "CMAKE_PLATFORM_INFO_INITIALIZED",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Platform information initialized"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "1"
-+		},
-+		{
-+			"name" : "CMAKE_PROJECT_DESCRIPTION",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_PROJECT_HOMEPAGE_URL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_PROJECT_NAME",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "Matam_HW3"
-+		},
-+		{
-+			"name" : "CMAKE_RANLIB",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/ranlib"
-+		},
-+		{
-+			"name" : "CMAKE_READELF",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "CMAKE_READELF-NOTFOUND"
-+		},
-+		{
-+			"name" : "CMAKE_ROOT",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to CMake installation."
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29"
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_SKIP_INSTALL_RPATH",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "If set, runtime paths are not added when installing shared libraries, but are added when building."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "NO"
-+		},
-+		{
-+			"name" : "CMAKE_SKIP_RPATH",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "If set, runtime paths are not added when using shared libraries."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "NO"
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during all build types."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_DEBUG",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during DEBUG builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during MINSIZEREL builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELEASE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during RELEASE builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds."
-+				}
-+			],
-+			"type" : "STRING",
-+			"value" : ""
-+		},
-+		{
-+			"name" : "CMAKE_STRIP",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/strip"
-+		},
-+		{
-+			"name" : "CMAKE_TAPI",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Path to a program."
-+				}
-+			],
-+			"type" : "FILEPATH",
-+			"value" : "/Library/Developer/CommandLineTools/usr/bin/tapi"
-+		},
-+		{
-+			"name" : "CMAKE_UNAME",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "uname command"
-+				}
-+			],
-+			"type" : "INTERNAL",
-+			"value" : "/usr/bin/uname"
-+		},
-+		{
-+			"name" : "CMAKE_VERBOSE_MAKEFILE",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "ADVANCED",
-+					"value" : "1"
-+				},
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo."
-+				}
-+			],
-+			"type" : "BOOL",
-+			"value" : "FALSE"
-+		},
-+		{
-+			"name" : "Matam_HW3_BINARY_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug"
-+		},
-+		{
-+			"name" : "Matam_HW3_IS_TOP_LEVEL",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "ON"
-+		},
-+		{
-+			"name" : "Matam_HW3_SOURCE_DIR",
-+			"properties" : 
-+			[
-+				{
-+					"name" : "HELPSTRING",
-+					"value" : "Value Computed by CMake"
-+				}
-+			],
-+			"type" : "STATIC",
-+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
-+		}
-+	],
-+	"kind" : "cache",
-+	"version" : 
-+	{
-+		"major" : 2,
-+		"minor" : 0
-+	}
-+}
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json
-new file mode 100644
-index 0000000..fe72958
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json
-@@ -0,0 +1,1234 @@
-+{
-+	"inputs" : 
-+	[
-+		{
-+			"path" : "CMakeLists.txt"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake"
-+		},
-+		{
-+			"isCMake" : true,
-+			"isExternal" : true,
-+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in"
-+		},
-+		{
-+			"isGenerated" : true,
-+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake"
-+		}
-+	],
-+	"kind" : "cmakeFiles",
-+	"paths" : 
-+	{
-+		"build" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug",
-+		"source" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
-+	},
-+	"version" : 
-+	{
-+		"major" : 1,
-+		"minor" : 0
-+	}
-+}
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json
-new file mode 100644
-index 0000000..4a41589
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json
-@@ -0,0 +1,60 @@
-+{
-+	"configurations" : 
-+	[
-+		{
-+			"directories" : 
-+			[
-+				{
-+					"build" : ".",
-+					"jsonFile" : "directory-.-Debug-f5ebdc15457944623624.json",
-+					"minimumCMakeVersion" : 
-+					{
-+						"string" : "3.29"
-+					},
-+					"projectIndex" : 0,
-+					"source" : ".",
-+					"targetIndexes" : 
-+					[
-+						0
-+					]
-+				}
-+			],
-+			"name" : "Debug",
-+			"projects" : 
-+			[
-+				{
-+					"directoryIndexes" : 
-+					[
-+						0
-+					],
-+					"name" : "Matam_HW3",
-+					"targetIndexes" : 
-+					[
-+						0
-+					]
-+				}
-+			],
-+			"targets" : 
-+			[
-+				{
-+					"directoryIndex" : 0,
-+					"id" : "Matam_HW3::@6890427a1f51a3e7e1df",
-+					"jsonFile" : "target-Matam_HW3-Debug-44b1d4437c129c88259c.json",
-+					"name" : "Matam_HW3",
-+					"projectIndex" : 0
-+				}
-+			]
-+		}
-+	],
-+	"kind" : "codemodel",
-+	"paths" : 
-+	{
-+		"build" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug",
-+		"source" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
-+	},
-+	"version" : 
-+	{
-+		"major" : 2,
-+		"minor" : 7
-+	}
-+}
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json
-new file mode 100644
-index 0000000..3a67af9
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json
-@@ -0,0 +1,14 @@
-+{
-+	"backtraceGraph" : 
-+	{
-+		"commands" : [],
-+		"files" : [],
-+		"nodes" : []
-+	},
-+	"installers" : [],
-+	"paths" : 
-+	{
-+		"build" : ".",
-+		"source" : "."
-+	}
-+}
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json b/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json
-new file mode 100644
-index 0000000..19b68c3
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json
-@@ -0,0 +1,108 @@
-+{
-+	"cmake" : 
-+	{
-+		"generator" : 
-+		{
-+			"multiConfig" : false,
-+			"name" : "Ninja"
-+		},
-+		"paths" : 
-+		{
-+			"cmake" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake",
-+			"cpack" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack",
-+			"ctest" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest",
-+			"root" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29"
-+		},
-+		"version" : 
-+		{
-+			"isDirty" : false,
-+			"major" : 3,
-+			"minor" : 29,
-+			"patch" : 6,
-+			"string" : "3.29.6",
-+			"suffix" : ""
-+		}
-+	},
-+	"objects" : 
-+	[
-+		{
-+			"jsonFile" : "codemodel-v2-56ce83c7749e9e427dea.json",
-+			"kind" : "codemodel",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 7
-+			}
-+		},
-+		{
-+			"jsonFile" : "cache-v2-c2b892a1b412afc9a1ef.json",
-+			"kind" : "cache",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 0
-+			}
-+		},
-+		{
-+			"jsonFile" : "cmakeFiles-v1-9ecd9743db4676d4803c.json",
-+			"kind" : "cmakeFiles",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		},
-+		{
-+			"jsonFile" : "toolchains-v1-bb57840159693364638b.json",
-+			"kind" : "toolchains",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		}
-+	],
-+	"reply" : 
-+	{
-+		"cache-v2" : 
-+		{
-+			"jsonFile" : "cache-v2-c2b892a1b412afc9a1ef.json",
-+			"kind" : "cache",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 0
-+			}
-+		},
-+		"cmakeFiles-v1" : 
-+		{
-+			"jsonFile" : "cmakeFiles-v1-9ecd9743db4676d4803c.json",
-+			"kind" : "cmakeFiles",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		},
-+		"codemodel-v2" : 
-+		{
-+			"jsonFile" : "codemodel-v2-56ce83c7749e9e427dea.json",
-+			"kind" : "codemodel",
-+			"version" : 
-+			{
-+				"major" : 2,
-+				"minor" : 7
-+			}
-+		},
-+		"toolchains-v1" : 
-+		{
-+			"jsonFile" : "toolchains-v1-bb57840159693364638b.json",
-+			"kind" : "toolchains",
-+			"version" : 
-+			{
-+				"major" : 1,
-+				"minor" : 0
-+			}
-+		}
-+	}
-+}
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json b/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json
-new file mode 100644
-index 0000000..00af0e1
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json
-@@ -0,0 +1,159 @@
-+{
-+	"artifacts" : 
-+	[
-+		{
-+			"path" : "Matam_HW3"
-+		}
-+	],
-+	"backtrace" : 1,
-+	"backtraceGraph" : 
-+	{
-+		"commands" : 
-+		[
-+			"add_executable",
-+			"include_directories"
-+		],
-+		"files" : 
-+		[
-+			"CMakeLists.txt"
-+		],
-+		"nodes" : 
-+		[
-+			{
-+				"file" : 0
-+			},
-+			{
-+				"command" : 0,
-+				"file" : 0,
-+				"line" : 8,
-+				"parent" : 0
-+			},
-+			{
-+				"command" : 1,
-+				"file" : 0,
-+				"line" : 6,
-+				"parent" : 0
-+			}
-+		]
-+	},
-+	"compileGroups" : 
-+	[
-+		{
-+			"compileCommandFragments" : 
-+			[
-+				{
-+					"fragment" : "-g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics"
-+				}
-+			],
-+			"includes" : 
-+			[
-+				{
-+					"backtrace" : 2,
-+					"path" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/."
-+				}
-+			],
-+			"language" : "CXX",
-+			"languageStandard" : 
-+			{
-+				"backtraces" : 
-+				[
-+					1
-+				],
-+				"standard" : "14"
-+			},
-+			"sourceIndexes" : 
-+			[
-+				0,
-+				1,
-+				4
-+			]
-+		}
-+	],
-+	"id" : "Matam_HW3::@6890427a1f51a3e7e1df",
-+	"link" : 
-+	{
-+		"commandFragments" : 
-+		[
-+			{
-+				"fragment" : "-g",
-+				"role" : "flags"
-+			},
-+			{
-+				"fragment" : "",
-+				"role" : "flags"
-+			}
-+		],
-+		"language" : "CXX"
-+	},
-+	"name" : "Matam_HW3",
-+	"nameOnDisk" : "Matam_HW3",
-+	"paths" : 
-+	{
-+		"build" : ".",
-+		"source" : "."
-+	},
-+	"sourceGroups" : 
-+	[
-+		{
-+			"name" : "Source Files",
-+			"sourceIndexes" : 
-+			[
-+				0,
-+				1,
-+				4
-+			]
-+		},
-+		{
-+			"name" : "Header Files",
-+			"sourceIndexes" : 
-+			[
-+				2,
-+				3,
-+				5,
-+				6
-+			]
-+		}
-+	],
-+	"sources" : 
-+	[
-+		{
-+			"backtrace" : 1,
-+			"compileGroupIndex" : 0,
-+			"path" : "main.cpp",
-+			"sourceGroupIndex" : 0
-+		},
-+		{
-+			"backtrace" : 1,
-+			"compileGroupIndex" : 0,
-+			"path" : "Person.cpp",
-+			"sourceGroupIndex" : 0
-+		},
-+		{
-+			"backtrace" : 1,
-+			"path" : "Person.h",
-+			"sourceGroupIndex" : 1
-+		},
-+		{
-+			"backtrace" : 1,
-+			"path" : "SortedList.h",
-+			"sourceGroupIndex" : 1
-+		},
-+		{
-+			"backtrace" : 1,
-+			"compileGroupIndex" : 0,
-+			"path" : "Task.cpp",
-+			"sourceGroupIndex" : 0
-+		},
-+		{
-+			"backtrace" : 1,
-+			"path" : "Task.h",
-+			"sourceGroupIndex" : 1
-+		},
-+		{
-+			"backtrace" : 1,
-+			"path" : "TaskManager.h",
-+			"sourceGroupIndex" : 1
-+		}
-+	],
-+	"type" : "EXECUTABLE"
-+}
-diff --git a/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json
-new file mode 100644
-index 0000000..11da80c
---- /dev/null
-+++ b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json
-@@ -0,0 +1,93 @@
-+{
-+	"kind" : "toolchains",
-+	"toolchains" : 
-+	[
-+		{
-+			"compiler" : 
-+			{
-+				"id" : "AppleClang",
-+				"implicit" : 
-+				{
-+					"includeDirectories" : 
-+					[
-+						"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include",
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include",
-+						"/Library/Developer/CommandLineTools/usr/include"
-+					],
-+					"linkDirectories" : 
-+					[
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib",
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift"
-+					],
-+					"linkFrameworkDirectories" : 
-+					[
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks"
-+					],
-+					"linkLibraries" : []
-+				},
-+				"path" : "/Library/Developer/CommandLineTools/usr/bin/cc",
-+				"version" : "15.0.0.15000309"
-+			},
-+			"language" : "C",
-+			"sourceFileExtensions" : 
-+			[
-+				"c",
-+				"m"
-+			]
-+		},
-+		{
-+			"compiler" : 
-+			{
-+				"id" : "AppleClang",
-+				"implicit" : 
-+				{
-+					"includeDirectories" : 
-+					[
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1",
-+						"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include",
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include",
-+						"/Library/Developer/CommandLineTools/usr/include"
-+					],
-+					"linkDirectories" : 
-+					[
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib",
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift"
-+					],
-+					"linkFrameworkDirectories" : 
-+					[
-+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks"
-+					],
-+					"linkLibraries" : 
-+					[
-+						"c++"
-+					]
-+				},
-+				"path" : "/Library/Developer/CommandLineTools/usr/bin/c++",
-+				"version" : "15.0.0.15000309"
-+			},
-+			"language" : "CXX",
-+			"sourceFileExtensions" : 
-+			[
-+				"C",
-+				"M",
-+				"c++",
-+				"cc",
-+				"cpp",
-+				"cxx",
-+				"mm",
-+				"mpp",
-+				"CPP",
-+				"ixx",
-+				"cppm",
-+				"ccm",
-+				"cxxm",
-+				"c++m"
-+			]
-+		}
-+	],
-+	"version" : 
-+	{
-+		"major" : 1,
-+		"minor" : 0
-+	}
-+}
-diff --git a/cmake-build-debug/CMakeCache.txt b/cmake-build-debug/CMakeCache.txt
-new file mode 100644
-index 0000000..bfa03f3
---- /dev/null
-+++ b/cmake-build-debug/CMakeCache.txt
-@@ -0,0 +1,363 @@
-+# This is the CMakeCache file.
-+# For build in directory: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+# It was generated by CMake: /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake
-+# You can edit this file to change values found and used by cmake.
-+# If you do not want to change any of the values, simply exit the editor.
-+# If you do want to change a value, simply edit, save, and exit the editor.
-+# The syntax for the file is as follows:
-+# KEY:TYPE=VALUE
-+# KEY is the name of a variable in the cache.
-+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
-+# VALUE is the current value for the KEY.
-+
-+########################
-+# EXTERNAL cache entries
-+########################
-+
-+//Path to a program.
-+CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND
-+
-+//Path to a program.
-+CMAKE_AR:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ar
-+
-+//Choose the type of build, options are: None Debug Release RelWithDebInfo
-+// MinSizeRel ...
-+CMAKE_BUILD_TYPE:STRING=Debug
-+
-+//Enable colored diagnostics throughout.
-+CMAKE_COLOR_DIAGNOSTICS:BOOL=ON
-+
-+//CXX compiler
-+CMAKE_CXX_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/c++
-+
-+//Flags used by the CXX compiler during all build types.
-+CMAKE_CXX_FLAGS:STRING=
-+
-+//Flags used by the CXX compiler during DEBUG builds.
-+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
-+
-+//Flags used by the CXX compiler during MINSIZEREL builds.
-+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
-+
-+//Flags used by the CXX compiler during RELEASE builds.
-+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
-+
-+//Flags used by the CXX compiler during RELWITHDEBINFO builds.
-+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
-+
-+//C compiler
-+CMAKE_C_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/cc
-+
-+//Flags used by the C compiler during all build types.
-+CMAKE_C_FLAGS:STRING=
-+
-+//Flags used by the C compiler during DEBUG builds.
-+CMAKE_C_FLAGS_DEBUG:STRING=-g
-+
-+//Flags used by the C compiler during MINSIZEREL builds.
-+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
-+
-+//Flags used by the C compiler during RELEASE builds.
-+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
-+
-+//Flags used by the C compiler during RELWITHDEBINFO builds.
-+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
-+
-+//Path to a program.
-+CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND
-+
-+//Flags used by the linker during all build types.
-+CMAKE_EXE_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during DEBUG builds.
-+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during MINSIZEREL builds.
-+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during RELEASE builds.
-+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during RELWITHDEBINFO builds.
-+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Enable/Disable output of compile commands during generation.
-+CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=
-+
-+//Value Computed by CMake.
-+CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/pkgRedirects
-+
-+//Path to a program.
-+CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool
-+
-+//Install path prefix, prepended onto install directories.
-+CMAKE_INSTALL_PREFIX:PATH=/usr/local
-+
-+//Path to a program.
-+CMAKE_LINKER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ld
-+
-+//No help, variable specified on the command line.
-+CMAKE_MAKE_PROGRAM:UNINITIALIZED=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
-+
-+//Flags used by the linker during the creation of modules during
-+// all build types.
-+CMAKE_MODULE_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// DEBUG builds.
-+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// MINSIZEREL builds.
-+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// RELEASE builds.
-+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// RELWITHDEBINFO builds.
-+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_NM:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/nm
-+
-+//Path to a program.
-+CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND
-+
-+//Path to a program.
-+CMAKE_OBJDUMP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/objdump
-+
-+//Build architectures for OSX
-+CMAKE_OSX_ARCHITECTURES:STRING=
-+
-+//Minimum OS X version to target for deployment (at runtime); newer
-+// APIs weak linked. Set to empty string for default value.
-+CMAKE_OSX_DEPLOYMENT_TARGET:STRING=
-+
-+//The product will be built against the headers and libraries located
-+// inside the indicated SDK.
-+CMAKE_OSX_SYSROOT:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_DESCRIPTION:STATIC=
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_NAME:STATIC=Matam_HW3
-+
-+//Path to a program.
-+CMAKE_RANLIB:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ranlib
-+
-+//Path to a program.
-+CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during all build types.
-+CMAKE_SHARED_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during DEBUG builds.
-+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during MINSIZEREL builds.
-+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during RELEASE builds.
-+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during RELWITHDEBINFO builds.
-+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//If set, runtime paths are not added when installing shared libraries,
-+// but are added when building.
-+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
-+
-+//If set, runtime paths are not added when using shared libraries.
-+CMAKE_SKIP_RPATH:BOOL=NO
-+
-+//Flags used by the linker during the creation of static libraries
-+// during all build types.
-+CMAKE_STATIC_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during DEBUG builds.
-+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during MINSIZEREL builds.
-+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during RELEASE builds.
-+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during RELWITHDEBINFO builds.
-+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_STRIP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/strip
-+
-+//Path to a program.
-+CMAKE_TAPI:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/tapi
-+
-+//If this value is on, makefiles will be generated without the
-+// .SILENT directive, and all commands will be echoed to the console
-+// during the make.  This is useful for debugging only. With Visual
-+// Studio IDE projects all commands are done without /nologo.
-+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
-+
-+//Value Computed by CMake
-+Matam_HW3_BINARY_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+
-+//Value Computed by CMake
-+Matam_HW3_IS_TOP_LEVEL:STATIC=ON
-+
-+//Value Computed by CMake
-+Matam_HW3_SOURCE_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
-+
-+
-+########################
-+# INTERNAL cache entries
-+########################
-+
-+//ADVANCED property for variable: CMAKE_ADDR2LINE
-+CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_AR
-+CMAKE_AR-ADVANCED:INTERNAL=1
-+//This is the directory where this CMakeCache.txt was created
-+CMAKE_CACHEFILE_DIR:INTERNAL=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+//Major version of cmake used to create the current loaded cache
-+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
-+//Minor version of cmake used to create the current loaded cache
-+CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
-+//Patch version of cmake used to create the current loaded cache
-+CMAKE_CACHE_PATCH_VERSION:INTERNAL=6
-+//Path to CMake executable.
-+CMAKE_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake
-+//Path to cpack program executable.
-+CMAKE_CPACK_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack
-+//Path to ctest program executable.
-+CMAKE_CTEST_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER
-+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS
-+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
-+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
-+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
-+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
-+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER
-+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS
-+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
-+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
-+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
-+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
-+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_DLLTOOL
-+CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
-+//Executable file format
-+CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
-+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
-+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
-+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
-+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
-+CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
-+//Name of external makefile project generator.
-+CMAKE_EXTRA_GENERATOR:INTERNAL=
-+//Name of generator.
-+CMAKE_GENERATOR:INTERNAL=Ninja
-+//Generator instance identifier.
-+CMAKE_GENERATOR_INSTANCE:INTERNAL=
-+//Name of generator platform.
-+CMAKE_GENERATOR_PLATFORM:INTERNAL=
-+//Name of generator toolset.
-+CMAKE_GENERATOR_TOOLSET:INTERNAL=
-+//Source directory with the top level CMakeLists.txt file for this
-+// project
-+CMAKE_HOME_DIRECTORY:INTERNAL=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
-+//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
-+CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_LINKER
-+CMAKE_LINKER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
-+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
-+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
-+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
-+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_NM
-+CMAKE_NM-ADVANCED:INTERNAL=1
-+//number of local generators
-+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_OBJCOPY
-+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_OBJDUMP
-+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
-+//Platform information initialized
-+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RANLIB
-+CMAKE_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_READELF
-+CMAKE_READELF-ADVANCED:INTERNAL=1
-+//Path to CMake installation.
-+CMAKE_ROOT:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
-+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
-+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
-+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
-+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
-+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SKIP_RPATH
-+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
-+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
-+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
-+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
-+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STRIP
-+CMAKE_STRIP-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_TAPI
-+CMAKE_TAPI-ADVANCED:INTERNAL=1
-+//uname command
-+CMAKE_UNAME:INTERNAL=/usr/bin/uname
-+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
-+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
-+
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake
-new file mode 100644
-index 0000000..8ce3f9e
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake
-@@ -0,0 +1,80 @@
-+set(CMAKE_C_COMPILER "/Library/Developer/CommandLineTools/usr/bin/cc")
-+set(CMAKE_C_COMPILER_ARG1 "")
-+set(CMAKE_C_COMPILER_ID "AppleClang")
-+set(CMAKE_C_COMPILER_VERSION "15.0.0.15000309")
-+set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
-+set(CMAKE_C_COMPILER_WRAPPER "")
-+set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")
-+set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")
-+set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23")
-+set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
-+set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
-+set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
-+set(CMAKE_C17_COMPILE_FEATURES "c_std_17")
-+set(CMAKE_C23_COMPILE_FEATURES "c_std_23")
-+
-+set(CMAKE_C_PLATFORM_ID "Darwin")
-+set(CMAKE_C_SIMULATE_ID "")
-+set(CMAKE_C_COMPILER_FRONTEND_VARIANT "GNU")
-+set(CMAKE_C_SIMULATE_VERSION "")
-+
-+
-+
-+
-+set(CMAKE_AR "/Library/Developer/CommandLineTools/usr/bin/ar")
-+set(CMAKE_C_COMPILER_AR "")
-+set(CMAKE_RANLIB "/Library/Developer/CommandLineTools/usr/bin/ranlib")
-+set(CMAKE_C_COMPILER_RANLIB "")
-+set(CMAKE_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
-+set(CMAKE_LINKER_LINK "")
-+set(CMAKE_LINKER_LLD "")
-+set(CMAKE_C_COMPILER_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
-+set(CMAKE_C_COMPILER_LINKER_ID "AppleClang")
-+set(CMAKE_C_COMPILER_LINKER_VERSION 1053.12)
-+set(CMAKE_C_COMPILER_LINKER_FRONTEND_VARIANT GNU)
-+set(CMAKE_MT "")
-+set(CMAKE_TAPI "/Library/Developer/CommandLineTools/usr/bin/tapi")
-+set(CMAKE_COMPILER_IS_GNUCC )
-+set(CMAKE_C_COMPILER_LOADED 1)
-+set(CMAKE_C_COMPILER_WORKS TRUE)
-+set(CMAKE_C_ABI_COMPILED TRUE)
-+
-+set(CMAKE_C_COMPILER_ENV_VAR "CC")
-+
-+set(CMAKE_C_COMPILER_ID_RUN 1)
-+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
-+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
-+set(CMAKE_C_LINKER_PREFERENCE 10)
-+set(CMAKE_C_LINKER_DEPFILE_SUPPORTED FALSE)
-+
-+# Save compiler ABI information.
-+set(CMAKE_C_SIZEOF_DATA_PTR "8")
-+set(CMAKE_C_COMPILER_ABI "")
-+set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")
-+set(CMAKE_C_LIBRARY_ARCHITECTURE "")
-+
-+if(CMAKE_C_SIZEOF_DATA_PTR)
-+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
-+endif()
-+
-+if(CMAKE_C_COMPILER_ABI)
-+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
-+endif()
-+
-+if(CMAKE_C_LIBRARY_ARCHITECTURE)
-+  set(CMAKE_LIBRARY_ARCHITECTURE "")
-+endif()
-+
-+set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
-+if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
-+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
-+endif()
-+
-+
-+
-+
-+
-+set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include")
-+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")
-+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift")
-+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks")
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake
-new file mode 100644
-index 0000000..e63d0df
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake
-@@ -0,0 +1,92 @@
-+set(CMAKE_CXX_COMPILER "/Library/Developer/CommandLineTools/usr/bin/c++")
-+set(CMAKE_CXX_COMPILER_ARG1 "")
-+set(CMAKE_CXX_COMPILER_ID "AppleClang")
-+set(CMAKE_CXX_COMPILER_VERSION "15.0.0.15000309")
-+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
-+set(CMAKE_CXX_COMPILER_WRAPPER "")
-+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "98")
-+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
-+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
-+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
-+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
-+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
-+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
-+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
-+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
-+
-+set(CMAKE_CXX_PLATFORM_ID "Darwin")
-+set(CMAKE_CXX_SIMULATE_ID "")
-+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
-+set(CMAKE_CXX_SIMULATE_VERSION "")
-+
-+
-+
-+
-+set(CMAKE_AR "/Library/Developer/CommandLineTools/usr/bin/ar")
-+set(CMAKE_CXX_COMPILER_AR "")
-+set(CMAKE_RANLIB "/Library/Developer/CommandLineTools/usr/bin/ranlib")
-+set(CMAKE_CXX_COMPILER_RANLIB "")
-+set(CMAKE_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
-+set(CMAKE_LINKER_LINK "")
-+set(CMAKE_LINKER_LLD "")
-+set(CMAKE_CXX_COMPILER_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
-+set(CMAKE_CXX_COMPILER_LINKER_ID "AppleClang")
-+set(CMAKE_CXX_COMPILER_LINKER_VERSION 1053.12)
-+set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT GNU)
-+set(CMAKE_MT "")
-+set(CMAKE_TAPI "/Library/Developer/CommandLineTools/usr/bin/tapi")
-+set(CMAKE_COMPILER_IS_GNUCXX )
-+set(CMAKE_CXX_COMPILER_LOADED 1)
-+set(CMAKE_CXX_COMPILER_WORKS TRUE)
-+set(CMAKE_CXX_ABI_COMPILED TRUE)
-+
-+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
-+
-+set(CMAKE_CXX_COMPILER_ID_RUN 1)
-+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m)
-+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
-+
-+foreach (lang IN ITEMS C OBJC OBJCXX)
-+  if (CMAKE_${lang}_COMPILER_ID_RUN)
-+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
-+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
-+    endforeach()
-+  endif()
-+endforeach()
-+
-+set(CMAKE_CXX_LINKER_PREFERENCE 30)
-+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
-+set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED FALSE)
-+
-+# Save compiler ABI information.
-+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
-+set(CMAKE_CXX_COMPILER_ABI "")
-+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
-+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
-+
-+if(CMAKE_CXX_SIZEOF_DATA_PTR)
-+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
-+endif()
-+
-+if(CMAKE_CXX_COMPILER_ABI)
-+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
-+endif()
-+
-+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
-+  set(CMAKE_LIBRARY_ARCHITECTURE "")
-+endif()
-+
-+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
-+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
-+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
-+endif()
-+
-+
-+
-+
-+
-+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include")
-+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++")
-+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift")
-+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks")
-+set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR "")
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin
-new file mode 100755
-index 0000000..d8331b3
-Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin differ
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin
-new file mode 100755
-index 0000000..7659026
-Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin differ
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake
-new file mode 100644
-index 0000000..4ba5c26
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake
-@@ -0,0 +1,15 @@
-+set(CMAKE_HOST_SYSTEM "Darwin-23.6.0")
-+set(CMAKE_HOST_SYSTEM_NAME "Darwin")
-+set(CMAKE_HOST_SYSTEM_VERSION "23.6.0")
-+set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
-+
-+
-+
-+set(CMAKE_SYSTEM "Darwin-23.6.0")
-+set(CMAKE_SYSTEM_NAME "Darwin")
-+set(CMAKE_SYSTEM_VERSION "23.6.0")
-+set(CMAKE_SYSTEM_PROCESSOR "x86_64")
-+
-+set(CMAKE_CROSSCOMPILING "FALSE")
-+
-+set(CMAKE_SYSTEM_LOADED 1)
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c
-new file mode 100644
-index 0000000..508c4cd
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c
-@@ -0,0 +1,895 @@
-+#ifdef __cplusplus
-+# error "A C++ compiler has been selected for C."
-+#endif
-+
-+#if defined(__18CXX)
-+# define ID_VOID_MAIN
-+#endif
-+#if defined(__CLASSIC_C__)
-+/* cv-qualifiers did not exist in K&R C */
-+# define const
-+# define volatile
-+#endif
-+
-+#if !defined(__has_include)
-+/* If the compiler does not have __has_include, pretend the answer is
-+   always no.  */
-+#  define __has_include(x) 0
-+#endif
-+
-+
-+/* Version number components: V=Version, R=Revision, P=Patch
-+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
-+
-+#if defined(__INTEL_COMPILER) || defined(__ICC)
-+# define COMPILER_ID "Intel"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_ID "GNU"
-+# endif
-+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
-+     except that a few beta releases use the old format with V=2021.  */
-+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
-+#  if defined(__INTEL_COMPILER_UPDATE)
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
-+#  else
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
-+#  endif
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
-+   /* The third version component from --version is an update index,
-+      but no macro is provided for it.  */
-+#  define COMPILER_VERSION_PATCH DEC(0)
-+# endif
-+# if defined(__INTEL_COMPILER_BUILD_DATE)
-+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
-+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
-+# endif
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+# elif defined(__GNUG__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
-+# define COMPILER_ID "IntelLLVM"
-+#if defined(_MSC_VER)
-+# define SIMULATE_ID "MSVC"
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_ID "GNU"
-+#endif
-+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
-+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
-+ * VVVV is no smaller than the current year when a version is released.
-+ */
-+#if __INTEL_LLVM_COMPILER < 1000000L
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
-+#else
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
-+#endif
-+#if defined(_MSC_VER)
-+  /* _MSC_VER = VVRR */
-+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#elif defined(__GNUG__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+#endif
-+#if defined(__GNUC_MINOR__)
-+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#endif
-+#if defined(__GNUC_PATCHLEVEL__)
-+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#endif
-+
-+#elif defined(__PATHCC__)
-+# define COMPILER_ID "PathScale"
-+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
-+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
-+# if defined(__PATHCC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
-+# define COMPILER_ID "Embarcadero"
-+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
-+
-+#elif defined(__BORLANDC__)
-+# define COMPILER_ID "Borland"
-+  /* __BORLANDC__ = 0xVRR */
-+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
-+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
-+
-+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
-+# define COMPILER_ID "Watcom"
-+   /* __WATCOMC__ = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# define COMPILER_ID "OpenWatcom"
-+   /* __WATCOMC__ = VVRP + 1100 */
-+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__SUNPRO_C)
-+# define COMPILER_ID "SunPro"
-+# if __SUNPRO_C >= 0x5100
-+   /* __SUNPRO_C = 0xVRRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
-+# else
-+   /* __SUNPRO_CC = 0xVRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
-+# endif
-+
-+#elif defined(__HP_cc)
-+# define COMPILER_ID "HP"
-+  /* __HP_cc = VVRRPP */
-+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
-+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
-+
-+#elif defined(__DECC)
-+# define COMPILER_ID "Compaq"
-+  /* __DECC_VER = VVRRTPPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
-+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
-+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
-+
-+#elif defined(__IBMC__) && defined(__COMPILER_VER__)
-+# define COMPILER_ID "zOS"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__open_xl__) && defined(__clang__)
-+# define COMPILER_ID "IBMClang"
-+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
-+
-+
-+#elif defined(__ibmxl__) && defined(__clang__)
-+# define COMPILER_ID "XLClang"
-+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-+
-+
-+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
-+# define COMPILER_ID "XL"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
-+# define COMPILER_ID "VisualAge"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__NVCOMPILER)
-+# define COMPILER_ID "NVHPC"
-+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
-+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
-+# if defined(__NVCOMPILER_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__PGI)
-+# define COMPILER_ID "PGI"
-+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
-+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
-+# if defined(__PGIC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__clang__) && defined(__cray__)
-+# define COMPILER_ID "CrayClang"
-+# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
-+# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
-+
-+
-+#elif defined(_CRAYC)
-+# define COMPILER_ID "Cray"
-+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
-+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# define COMPILER_ID "TI"
-+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
-+
-+#elif defined(__CLANG_FUJITSU)
-+# define COMPILER_ID "FujitsuClang"
-+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
-+
-+
-+#elif defined(__FUJITSU)
-+# define COMPILER_ID "Fujitsu"
-+# if defined(__FCC_version__)
-+#   define COMPILER_VERSION __FCC_version__
-+# elif defined(__FCC_major__)
-+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# endif
-+# if defined(__fcc_version)
-+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
-+# elif defined(__FCC_VERSION)
-+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
-+# endif
-+
-+
-+#elif defined(__ghs__)
-+# define COMPILER_ID "GHS"
-+/* __GHS_VERSION_NUMBER = VVVVRP */
-+# ifdef __GHS_VERSION_NUMBER
-+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-+# endif
-+
-+#elif defined(__TASKING__)
-+# define COMPILER_ID "Tasking"
-+  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
-+  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
-+# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
-+
-+#elif defined(__ORANGEC__)
-+# define COMPILER_ID "OrangeC"
-+# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
-+# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
-+# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
-+
-+#elif defined(__TINYC__)
-+# define COMPILER_ID "TinyCC"
-+
-+#elif defined(__BCC__)
-+# define COMPILER_ID "Bruce"
-+
-+#elif defined(__SCO_VERSION__)
-+# define COMPILER_ID "SCO"
-+
-+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-+# define COMPILER_ID "ARMCC"
-+#if __ARMCC_VERSION >= 1000000
-+  /* __ARMCC_VERSION = VRRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-+#else
-+  /* __ARMCC_VERSION = VRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-+#endif
-+
-+
-+#elif defined(__clang__) && defined(__apple_build_version__)
-+# define COMPILER_ID "AppleClang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
-+
-+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-+# define COMPILER_ID "ARMClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
-+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-+
-+#elif defined(__clang__) && defined(__ti__)
-+# define COMPILER_ID "TIClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
-+  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
-+  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
-+
-+#elif defined(__clang__)
-+# define COMPILER_ID "Clang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+
-+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
-+# define COMPILER_ID "LCC"
-+# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
-+# if defined(__LCC_MINOR__)
-+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
-+# endif
-+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
-+#  define SIMULATE_ID "GNU"
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#  if defined(__GNUC_PATCHLEVEL__)
-+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#  endif
-+# endif
-+
-+#elif defined(__GNUC__)
-+# define COMPILER_ID "GNU"
-+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
-+# if defined(__GNUC_MINOR__)
-+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_MSC_VER)
-+# define COMPILER_ID "MSVC"
-+  /* _MSC_VER = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
-+# if defined(_MSC_FULL_VER)
-+#  if _MSC_VER >= 1400
-+    /* _MSC_FULL_VER = VVRRPPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
-+#  else
-+    /* _MSC_FULL_VER = VVRRPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
-+#  endif
-+# endif
-+# if defined(_MSC_BUILD)
-+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
-+# endif
-+
-+#elif defined(_ADI_COMPILER)
-+# define COMPILER_ID "ADSP"
-+#if defined(__VERSIONNUM__)
-+  /* __VERSIONNUM__ = 0xVVRRPPTT */
-+#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
-+#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
-+#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
-+#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
-+#endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# define COMPILER_ID "IAR"
-+# if defined(__VER__) && defined(__ICCARM__)
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
-+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
-+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# endif
-+
-+#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
-+# define COMPILER_ID "SDCC"
-+# if defined(__SDCC_VERSION_MAJOR)
-+#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
-+#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
-+#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
-+# else
-+  /* SDCC = VRP */
-+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
-+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
-+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
-+# endif
-+
-+
-+/* These compilers are either not known or too old to define an
-+  identification macro.  Try to identify the platform and guess that
-+  it is the native compiler.  */
-+#elif defined(__hpux) || defined(__hpua)
-+# define COMPILER_ID "HP"
-+
-+#else /* unknown compiler */
-+# define COMPILER_ID ""
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
-+#ifdef SIMULATE_ID
-+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
-+#endif
-+
-+#ifdef __QNXNTO__
-+char const* qnxnto = "INFO" ":" "qnxnto[]";
-+#endif
-+
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
-+#endif
-+
-+#define STRINGIFY_HELPER(X) #X
-+#define STRINGIFY(X) STRINGIFY_HELPER(X)
-+
-+/* Identify known platforms by name.  */
-+#if defined(__linux) || defined(__linux__) || defined(linux)
-+# define PLATFORM_ID "Linux"
-+
-+#elif defined(__MSYS__)
-+# define PLATFORM_ID "MSYS"
-+
-+#elif defined(__CYGWIN__)
-+# define PLATFORM_ID "Cygwin"
-+
-+#elif defined(__MINGW32__)
-+# define PLATFORM_ID "MinGW"
-+
-+#elif defined(__APPLE__)
-+# define PLATFORM_ID "Darwin"
-+
-+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-+# define PLATFORM_ID "Windows"
-+
-+#elif defined(__FreeBSD__) || defined(__FreeBSD)
-+# define PLATFORM_ID "FreeBSD"
-+
-+#elif defined(__NetBSD__) || defined(__NetBSD)
-+# define PLATFORM_ID "NetBSD"
-+
-+#elif defined(__OpenBSD__) || defined(__OPENBSD)
-+# define PLATFORM_ID "OpenBSD"
-+
-+#elif defined(__sun) || defined(sun)
-+# define PLATFORM_ID "SunOS"
-+
-+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
-+# define PLATFORM_ID "AIX"
-+
-+#elif defined(__hpux) || defined(__hpux__)
-+# define PLATFORM_ID "HP-UX"
-+
-+#elif defined(__HAIKU__)
-+# define PLATFORM_ID "Haiku"
-+
-+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
-+# define PLATFORM_ID "BeOS"
-+
-+#elif defined(__QNX__) || defined(__QNXNTO__)
-+# define PLATFORM_ID "QNX"
-+
-+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
-+# define PLATFORM_ID "Tru64"
-+
-+#elif defined(__riscos) || defined(__riscos__)
-+# define PLATFORM_ID "RISCos"
-+
-+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
-+# define PLATFORM_ID "SINIX"
-+
-+#elif defined(__UNIX_SV__)
-+# define PLATFORM_ID "UNIX_SV"
-+
-+#elif defined(__bsdos__)
-+# define PLATFORM_ID "BSDOS"
-+
-+#elif defined(_MPRAS) || defined(MPRAS)
-+# define PLATFORM_ID "MP-RAS"
-+
-+#elif defined(__osf) || defined(__osf__)
-+# define PLATFORM_ID "OSF1"
-+
-+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
-+# define PLATFORM_ID "SCO_SV"
-+
-+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
-+# define PLATFORM_ID "ULTRIX"
-+
-+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
-+# define PLATFORM_ID "Xenix"
-+
-+#elif defined(__WATCOMC__)
-+# if defined(__LINUX__)
-+#  define PLATFORM_ID "Linux"
-+
-+# elif defined(__DOS__)
-+#  define PLATFORM_ID "DOS"
-+
-+# elif defined(__OS2__)
-+#  define PLATFORM_ID "OS2"
-+
-+# elif defined(__WINDOWS__)
-+#  define PLATFORM_ID "Windows3x"
-+
-+# elif defined(__VXWORKS__)
-+#  define PLATFORM_ID "VxWorks"
-+
-+# else /* unknown platform */
-+#  define PLATFORM_ID
-+# endif
-+
-+#elif defined(__INTEGRITY)
-+# if defined(INT_178B)
-+#  define PLATFORM_ID "Integrity178"
-+
-+# else /* regular Integrity */
-+#  define PLATFORM_ID "Integrity"
-+# endif
-+
-+# elif defined(_ADI_COMPILER)
-+#  define PLATFORM_ID "ADSP"
-+
-+#else /* unknown platform */
-+# define PLATFORM_ID
-+
-+#endif
-+
-+/* For windows compilers MSVC and Intel we can determine
-+   the architecture of the compiler being used.  This is because
-+   the compilers do not have flags that can change the architecture,
-+   but rather depend on which compiler is being used
-+*/
-+#if defined(_WIN32) && defined(_MSC_VER)
-+# if defined(_M_IA64)
-+#  define ARCHITECTURE_ID "IA64"
-+
-+# elif defined(_M_ARM64EC)
-+#  define ARCHITECTURE_ID "ARM64EC"
-+
-+# elif defined(_M_X64) || defined(_M_AMD64)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# elif defined(_M_ARM64)
-+#  define ARCHITECTURE_ID "ARM64"
-+
-+# elif defined(_M_ARM)
-+#  if _M_ARM == 4
-+#   define ARCHITECTURE_ID "ARMV4I"
-+#  elif _M_ARM == 5
-+#   define ARCHITECTURE_ID "ARMV5I"
-+#  else
-+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
-+#  endif
-+
-+# elif defined(_M_MIPS)
-+#  define ARCHITECTURE_ID "MIPS"
-+
-+# elif defined(_M_SH)
-+#  define ARCHITECTURE_ID "SHx"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# if defined(_M_I86)
-+#  define ARCHITECTURE_ID "I86"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# if defined(__ICCARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__ICCRX__)
-+#  define ARCHITECTURE_ID "RX"
-+
-+# elif defined(__ICCRH850__)
-+#  define ARCHITECTURE_ID "RH850"
-+
-+# elif defined(__ICCRL78__)
-+#  define ARCHITECTURE_ID "RL78"
-+
-+# elif defined(__ICCRISCV__)
-+#  define ARCHITECTURE_ID "RISCV"
-+
-+# elif defined(__ICCAVR__)
-+#  define ARCHITECTURE_ID "AVR"
-+
-+# elif defined(__ICC430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__ICCV850__)
-+#  define ARCHITECTURE_ID "V850"
-+
-+# elif defined(__ICC8051__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# elif defined(__ICCSTM8__)
-+#  define ARCHITECTURE_ID "STM8"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__ghs__)
-+# if defined(__PPC64__)
-+#  define ARCHITECTURE_ID "PPC64"
-+
-+# elif defined(__ppc__)
-+#  define ARCHITECTURE_ID "PPC"
-+
-+# elif defined(__ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__x86_64__)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(__i386__)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__clang__) && defined(__ti__)
-+# if defined(__ARM_ARCH)
-+#  define ARCHITECTURE_ID "Arm"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# if defined(__TI_ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__MSP430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__TMS320C28XX__)
-+#  define ARCHITECTURE_ID "TMS320C28x"
-+
-+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
-+#  define ARCHITECTURE_ID "TMS320C6x"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+# elif defined(__ADSPSHARC__)
-+#  define ARCHITECTURE_ID "SHARC"
-+
-+# elif defined(__ADSPBLACKFIN__)
-+#  define ARCHITECTURE_ID "Blackfin"
-+
-+#elif defined(__TASKING__)
-+
-+# if defined(__CTC__) || defined(__CPTC__)
-+#  define ARCHITECTURE_ID "TriCore"
-+
-+# elif defined(__CMCS__)
-+#  define ARCHITECTURE_ID "MCS"
-+
-+# elif defined(__CARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__CARC__)
-+#  define ARCHITECTURE_ID "ARC"
-+
-+# elif defined(__C51__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# elif defined(__CPCP__)
-+#  define ARCHITECTURE_ID "PCP"
-+
-+# else
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#else
-+#  define ARCHITECTURE_ID
-+#endif
-+
-+/* Convert integer to decimal digit literals.  */
-+#define DEC(n)                   \
-+  ('0' + (((n) / 10000000)%10)), \
-+  ('0' + (((n) / 1000000)%10)),  \
-+  ('0' + (((n) / 100000)%10)),   \
-+  ('0' + (((n) / 10000)%10)),    \
-+  ('0' + (((n) / 1000)%10)),     \
-+  ('0' + (((n) / 100)%10)),      \
-+  ('0' + (((n) / 10)%10)),       \
-+  ('0' +  ((n) % 10))
-+
-+/* Convert integer to hex digit literals.  */
-+#define HEX(n)             \
-+  ('0' + ((n)>>28 & 0xF)), \
-+  ('0' + ((n)>>24 & 0xF)), \
-+  ('0' + ((n)>>20 & 0xF)), \
-+  ('0' + ((n)>>16 & 0xF)), \
-+  ('0' + ((n)>>12 & 0xF)), \
-+  ('0' + ((n)>>8  & 0xF)), \
-+  ('0' + ((n)>>4  & 0xF)), \
-+  ('0' + ((n)     & 0xF))
-+
-+/* Construct a string literal encoding the version number. */
-+#ifdef COMPILER_VERSION
-+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
-+
-+/* Construct a string literal encoding the version number components. */
-+#elif defined(COMPILER_VERSION_MAJOR)
-+char const info_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
-+  COMPILER_VERSION_MAJOR,
-+# ifdef COMPILER_VERSION_MINOR
-+  '.', COMPILER_VERSION_MINOR,
-+#  ifdef COMPILER_VERSION_PATCH
-+   '.', COMPILER_VERSION_PATCH,
-+#   ifdef COMPILER_VERSION_TWEAK
-+    '.', COMPILER_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the internal version number. */
-+#ifdef COMPILER_VERSION_INTERNAL
-+char const info_version_internal[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-+  'i','n','t','e','r','n','a','l','[',
-+  COMPILER_VERSION_INTERNAL,']','\0'};
-+#elif defined(COMPILER_VERSION_INTERNAL_STR)
-+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
-+#endif
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef SIMULATE_VERSION_MAJOR
-+char const info_simulate_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
-+  SIMULATE_VERSION_MAJOR,
-+# ifdef SIMULATE_VERSION_MINOR
-+  '.', SIMULATE_VERSION_MINOR,
-+#  ifdef SIMULATE_VERSION_PATCH
-+   '.', SIMULATE_VERSION_PATCH,
-+#   ifdef SIMULATE_VERSION_TWEAK
-+    '.', SIMULATE_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-+
-+
-+
-+#if !defined(__STDC__) && !defined(__clang__)
-+# if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)
-+#  define C_VERSION "90"
-+# else
-+#  define C_VERSION
-+# endif
-+#elif __STDC_VERSION__ > 201710L
-+# define C_VERSION "23"
-+#elif __STDC_VERSION__ >= 201710L
-+# define C_VERSION "17"
-+#elif __STDC_VERSION__ >= 201000L
-+# define C_VERSION "11"
-+#elif __STDC_VERSION__ >= 199901L
-+# define C_VERSION "99"
-+#else
-+# define C_VERSION "90"
-+#endif
-+const char* info_language_standard_default =
-+  "INFO" ":" "standard_default[" C_VERSION "]";
-+
-+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
-+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
-+     defined(__TI_COMPILER_VERSION__)) &&                                     \
-+  !defined(__STRICT_ANSI__)
-+  "ON"
-+#else
-+  "OFF"
-+#endif
-+"]";
-+
-+/*--------------------------------------------------------------------------*/
-+
-+#ifdef ID_VOID_MAIN
-+void main() {}
-+#else
-+# if defined(__CLASSIC_C__)
-+int main(argc, argv) int argc; char *argv[];
-+# else
-+int main(int argc, char* argv[])
-+# endif
-+{
-+  int require = 0;
-+  require += info_compiler[argc];
-+  require += info_platform[argc];
-+  require += info_arch[argc];
-+#ifdef COMPILER_VERSION_MAJOR
-+  require += info_version[argc];
-+#endif
-+#ifdef COMPILER_VERSION_INTERNAL
-+  require += info_version_internal[argc];
-+#endif
-+#ifdef SIMULATE_ID
-+  require += info_simulate[argc];
-+#endif
-+#ifdef SIMULATE_VERSION_MAJOR
-+  require += info_simulate_version[argc];
-+#endif
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+  require += info_cray[argc];
-+#endif
-+  require += info_language_standard_default[argc];
-+  require += info_language_extensions_default[argc];
-+  (void)argv;
-+  return require;
-+}
-+#endif
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o
-new file mode 100644
-index 0000000..12edb26
-Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o differ
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp
-new file mode 100644
-index 0000000..9a5e8f8
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp
-@@ -0,0 +1,878 @@
-+/* This source file must have a .cpp extension so that all C++ compilers
-+   recognize the extension without flags.  Borland does not know .cxx for
-+   example.  */
-+#ifndef __cplusplus
-+# error "A C compiler has been selected for C++."
-+#endif
-+
-+#if !defined(__has_include)
-+/* If the compiler does not have __has_include, pretend the answer is
-+   always no.  */
-+#  define __has_include(x) 0
-+#endif
-+
-+
-+/* Version number components: V=Version, R=Revision, P=Patch
-+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
-+
-+#if defined(__INTEL_COMPILER) || defined(__ICC)
-+# define COMPILER_ID "Intel"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_ID "GNU"
-+# endif
-+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
-+     except that a few beta releases use the old format with V=2021.  */
-+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
-+#  if defined(__INTEL_COMPILER_UPDATE)
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
-+#  else
-+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
-+#  endif
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
-+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
-+   /* The third version component from --version is an update index,
-+      but no macro is provided for it.  */
-+#  define COMPILER_VERSION_PATCH DEC(0)
-+# endif
-+# if defined(__INTEL_COMPILER_BUILD_DATE)
-+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
-+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
-+# endif
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+# elif defined(__GNUG__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
-+# define COMPILER_ID "IntelLLVM"
-+#if defined(_MSC_VER)
-+# define SIMULATE_ID "MSVC"
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_ID "GNU"
-+#endif
-+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
-+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
-+ * VVVV is no smaller than the current year when a version is released.
-+ */
-+#if __INTEL_LLVM_COMPILER < 1000000L
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
-+#else
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
-+#endif
-+#if defined(_MSC_VER)
-+  /* _MSC_VER = VVRR */
-+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+#endif
-+#if defined(__GNUC__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#elif defined(__GNUG__)
-+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+#endif
-+#if defined(__GNUC_MINOR__)
-+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#endif
-+#if defined(__GNUC_PATCHLEVEL__)
-+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#endif
-+
-+#elif defined(__PATHCC__)
-+# define COMPILER_ID "PathScale"
-+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
-+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
-+# if defined(__PATHCC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
-+# define COMPILER_ID "Embarcadero"
-+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
-+
-+#elif defined(__BORLANDC__)
-+# define COMPILER_ID "Borland"
-+  /* __BORLANDC__ = 0xVRR */
-+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
-+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
-+
-+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
-+# define COMPILER_ID "Watcom"
-+   /* __WATCOMC__ = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# define COMPILER_ID "OpenWatcom"
-+   /* __WATCOMC__ = VVRP + 1100 */
-+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__SUNPRO_CC)
-+# define COMPILER_ID "SunPro"
-+# if __SUNPRO_CC >= 0x5100
-+   /* __SUNPRO_CC = 0xVRRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
-+# else
-+   /* __SUNPRO_CC = 0xVRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
-+# endif
-+
-+#elif defined(__HP_aCC)
-+# define COMPILER_ID "HP"
-+  /* __HP_aCC = VVRRPP */
-+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
-+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
-+
-+#elif defined(__DECCXX)
-+# define COMPILER_ID "Compaq"
-+  /* __DECCXX_VER = VVRRTPPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
-+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
-+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
-+
-+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
-+# define COMPILER_ID "zOS"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__open_xl__) && defined(__clang__)
-+# define COMPILER_ID "IBMClang"
-+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
-+
-+
-+#elif defined(__ibmxl__) && defined(__clang__)
-+# define COMPILER_ID "XLClang"
-+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-+
-+
-+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
-+# define COMPILER_ID "XL"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
-+# define COMPILER_ID "VisualAge"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__NVCOMPILER)
-+# define COMPILER_ID "NVHPC"
-+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
-+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
-+# if defined(__NVCOMPILER_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__PGI)
-+# define COMPILER_ID "PGI"
-+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
-+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
-+# if defined(__PGIC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__clang__) && defined(__cray__)
-+# define COMPILER_ID "CrayClang"
-+# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
-+# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
-+
-+
-+#elif defined(_CRAYC)
-+# define COMPILER_ID "Cray"
-+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
-+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# define COMPILER_ID "TI"
-+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
-+
-+#elif defined(__CLANG_FUJITSU)
-+# define COMPILER_ID "FujitsuClang"
-+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
-+
-+
-+#elif defined(__FUJITSU)
-+# define COMPILER_ID "Fujitsu"
-+# if defined(__FCC_version__)
-+#   define COMPILER_VERSION __FCC_version__
-+# elif defined(__FCC_major__)
-+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
-+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
-+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
-+# endif
-+# if defined(__fcc_version)
-+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
-+# elif defined(__FCC_VERSION)
-+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
-+# endif
-+
-+
-+#elif defined(__ghs__)
-+# define COMPILER_ID "GHS"
-+/* __GHS_VERSION_NUMBER = VVVVRP */
-+# ifdef __GHS_VERSION_NUMBER
-+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-+# endif
-+
-+#elif defined(__TASKING__)
-+# define COMPILER_ID "Tasking"
-+  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
-+  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
-+# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
-+
-+#elif defined(__ORANGEC__)
-+# define COMPILER_ID "OrangeC"
-+# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
-+# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
-+# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
-+
-+#elif defined(__SCO_VERSION__)
-+# define COMPILER_ID "SCO"
-+
-+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-+# define COMPILER_ID "ARMCC"
-+#if __ARMCC_VERSION >= 1000000
-+  /* __ARMCC_VERSION = VRRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-+#else
-+  /* __ARMCC_VERSION = VRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-+#endif
-+
-+
-+#elif defined(__clang__) && defined(__apple_build_version__)
-+# define COMPILER_ID "AppleClang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
-+
-+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-+# define COMPILER_ID "ARMClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
-+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-+
-+#elif defined(__clang__) && defined(__ti__)
-+# define COMPILER_ID "TIClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
-+  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
-+  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
-+# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
-+
-+#elif defined(__clang__)
-+# define COMPILER_ID "Clang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+
-+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
-+# define COMPILER_ID "LCC"
-+# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
-+# if defined(__LCC_MINOR__)
-+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
-+# endif
-+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
-+#  define SIMULATE_ID "GNU"
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+#  if defined(__GNUC_PATCHLEVEL__)
-+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+#  endif
-+# endif
-+
-+#elif defined(__GNUC__) || defined(__GNUG__)
-+# define COMPILER_ID "GNU"
-+# if defined(__GNUC__)
-+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_MSC_VER)
-+# define COMPILER_ID "MSVC"
-+  /* _MSC_VER = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
-+# if defined(_MSC_FULL_VER)
-+#  if _MSC_VER >= 1400
-+    /* _MSC_FULL_VER = VVRRPPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
-+#  else
-+    /* _MSC_FULL_VER = VVRRPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
-+#  endif
-+# endif
-+# if defined(_MSC_BUILD)
-+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
-+# endif
-+
-+#elif defined(_ADI_COMPILER)
-+# define COMPILER_ID "ADSP"
-+#if defined(__VERSIONNUM__)
-+  /* __VERSIONNUM__ = 0xVVRRPPTT */
-+#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
-+#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
-+#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
-+#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
-+#endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# define COMPILER_ID "IAR"
-+# if defined(__VER__) && defined(__ICCARM__)
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
-+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
-+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# endif
-+
-+
-+/* These compilers are either not known or too old to define an
-+  identification macro.  Try to identify the platform and guess that
-+  it is the native compiler.  */
-+#elif defined(__hpux) || defined(__hpua)
-+# define COMPILER_ID "HP"
-+
-+#else /* unknown compiler */
-+# define COMPILER_ID ""
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
-+#ifdef SIMULATE_ID
-+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
-+#endif
-+
-+#ifdef __QNXNTO__
-+char const* qnxnto = "INFO" ":" "qnxnto[]";
-+#endif
-+
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
-+#endif
-+
-+#define STRINGIFY_HELPER(X) #X
-+#define STRINGIFY(X) STRINGIFY_HELPER(X)
-+
-+/* Identify known platforms by name.  */
-+#if defined(__linux) || defined(__linux__) || defined(linux)
-+# define PLATFORM_ID "Linux"
-+
-+#elif defined(__MSYS__)
-+# define PLATFORM_ID "MSYS"
-+
-+#elif defined(__CYGWIN__)
-+# define PLATFORM_ID "Cygwin"
-+
-+#elif defined(__MINGW32__)
-+# define PLATFORM_ID "MinGW"
-+
-+#elif defined(__APPLE__)
-+# define PLATFORM_ID "Darwin"
-+
-+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-+# define PLATFORM_ID "Windows"
-+
-+#elif defined(__FreeBSD__) || defined(__FreeBSD)
-+# define PLATFORM_ID "FreeBSD"
-+
-+#elif defined(__NetBSD__) || defined(__NetBSD)
-+# define PLATFORM_ID "NetBSD"
-+
-+#elif defined(__OpenBSD__) || defined(__OPENBSD)
-+# define PLATFORM_ID "OpenBSD"
-+
-+#elif defined(__sun) || defined(sun)
-+# define PLATFORM_ID "SunOS"
-+
-+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
-+# define PLATFORM_ID "AIX"
-+
-+#elif defined(__hpux) || defined(__hpux__)
-+# define PLATFORM_ID "HP-UX"
-+
-+#elif defined(__HAIKU__)
-+# define PLATFORM_ID "Haiku"
-+
-+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
-+# define PLATFORM_ID "BeOS"
-+
-+#elif defined(__QNX__) || defined(__QNXNTO__)
-+# define PLATFORM_ID "QNX"
-+
-+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
-+# define PLATFORM_ID "Tru64"
-+
-+#elif defined(__riscos) || defined(__riscos__)
-+# define PLATFORM_ID "RISCos"
-+
-+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
-+# define PLATFORM_ID "SINIX"
-+
-+#elif defined(__UNIX_SV__)
-+# define PLATFORM_ID "UNIX_SV"
-+
-+#elif defined(__bsdos__)
-+# define PLATFORM_ID "BSDOS"
-+
-+#elif defined(_MPRAS) || defined(MPRAS)
-+# define PLATFORM_ID "MP-RAS"
-+
-+#elif defined(__osf) || defined(__osf__)
-+# define PLATFORM_ID "OSF1"
-+
-+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
-+# define PLATFORM_ID "SCO_SV"
-+
-+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
-+# define PLATFORM_ID "ULTRIX"
-+
-+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
-+# define PLATFORM_ID "Xenix"
-+
-+#elif defined(__WATCOMC__)
-+# if defined(__LINUX__)
-+#  define PLATFORM_ID "Linux"
-+
-+# elif defined(__DOS__)
-+#  define PLATFORM_ID "DOS"
-+
-+# elif defined(__OS2__)
-+#  define PLATFORM_ID "OS2"
-+
-+# elif defined(__WINDOWS__)
-+#  define PLATFORM_ID "Windows3x"
-+
-+# elif defined(__VXWORKS__)
-+#  define PLATFORM_ID "VxWorks"
-+
-+# else /* unknown platform */
-+#  define PLATFORM_ID
-+# endif
-+
-+#elif defined(__INTEGRITY)
-+# if defined(INT_178B)
-+#  define PLATFORM_ID "Integrity178"
-+
-+# else /* regular Integrity */
-+#  define PLATFORM_ID "Integrity"
-+# endif
-+
-+# elif defined(_ADI_COMPILER)
-+#  define PLATFORM_ID "ADSP"
-+
-+#else /* unknown platform */
-+# define PLATFORM_ID
-+
-+#endif
-+
-+/* For windows compilers MSVC and Intel we can determine
-+   the architecture of the compiler being used.  This is because
-+   the compilers do not have flags that can change the architecture,
-+   but rather depend on which compiler is being used
-+*/
-+#if defined(_WIN32) && defined(_MSC_VER)
-+# if defined(_M_IA64)
-+#  define ARCHITECTURE_ID "IA64"
-+
-+# elif defined(_M_ARM64EC)
-+#  define ARCHITECTURE_ID "ARM64EC"
-+
-+# elif defined(_M_X64) || defined(_M_AMD64)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# elif defined(_M_ARM64)
-+#  define ARCHITECTURE_ID "ARM64"
-+
-+# elif defined(_M_ARM)
-+#  if _M_ARM == 4
-+#   define ARCHITECTURE_ID "ARMV4I"
-+#  elif _M_ARM == 5
-+#   define ARCHITECTURE_ID "ARMV5I"
-+#  else
-+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
-+#  endif
-+
-+# elif defined(_M_MIPS)
-+#  define ARCHITECTURE_ID "MIPS"
-+
-+# elif defined(_M_SH)
-+#  define ARCHITECTURE_ID "SHx"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# if defined(_M_I86)
-+#  define ARCHITECTURE_ID "I86"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# if defined(__ICCARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__ICCRX__)
-+#  define ARCHITECTURE_ID "RX"
-+
-+# elif defined(__ICCRH850__)
-+#  define ARCHITECTURE_ID "RH850"
-+
-+# elif defined(__ICCRL78__)
-+#  define ARCHITECTURE_ID "RL78"
-+
-+# elif defined(__ICCRISCV__)
-+#  define ARCHITECTURE_ID "RISCV"
-+
-+# elif defined(__ICCAVR__)
-+#  define ARCHITECTURE_ID "AVR"
-+
-+# elif defined(__ICC430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__ICCV850__)
-+#  define ARCHITECTURE_ID "V850"
-+
-+# elif defined(__ICC8051__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# elif defined(__ICCSTM8__)
-+#  define ARCHITECTURE_ID "STM8"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__ghs__)
-+# if defined(__PPC64__)
-+#  define ARCHITECTURE_ID "PPC64"
-+
-+# elif defined(__ppc__)
-+#  define ARCHITECTURE_ID "PPC"
-+
-+# elif defined(__ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__x86_64__)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(__i386__)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__clang__) && defined(__ti__)
-+# if defined(__ARM_ARCH)
-+#  define ARCHITECTURE_ID "Arm"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# if defined(__TI_ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__MSP430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__TMS320C28XX__)
-+#  define ARCHITECTURE_ID "TMS320C28x"
-+
-+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
-+#  define ARCHITECTURE_ID "TMS320C6x"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+# elif defined(__ADSPSHARC__)
-+#  define ARCHITECTURE_ID "SHARC"
-+
-+# elif defined(__ADSPBLACKFIN__)
-+#  define ARCHITECTURE_ID "Blackfin"
-+
-+#elif defined(__TASKING__)
-+
-+# if defined(__CTC__) || defined(__CPTC__)
-+#  define ARCHITECTURE_ID "TriCore"
-+
-+# elif defined(__CMCS__)
-+#  define ARCHITECTURE_ID "MCS"
-+
-+# elif defined(__CARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__CARC__)
-+#  define ARCHITECTURE_ID "ARC"
-+
-+# elif defined(__C51__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# elif defined(__CPCP__)
-+#  define ARCHITECTURE_ID "PCP"
-+
-+# else
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#else
-+#  define ARCHITECTURE_ID
-+#endif
-+
-+/* Convert integer to decimal digit literals.  */
-+#define DEC(n)                   \
-+  ('0' + (((n) / 10000000)%10)), \
-+  ('0' + (((n) / 1000000)%10)),  \
-+  ('0' + (((n) / 100000)%10)),   \
-+  ('0' + (((n) / 10000)%10)),    \
-+  ('0' + (((n) / 1000)%10)),     \
-+  ('0' + (((n) / 100)%10)),      \
-+  ('0' + (((n) / 10)%10)),       \
-+  ('0' +  ((n) % 10))
-+
-+/* Convert integer to hex digit literals.  */
-+#define HEX(n)             \
-+  ('0' + ((n)>>28 & 0xF)), \
-+  ('0' + ((n)>>24 & 0xF)), \
-+  ('0' + ((n)>>20 & 0xF)), \
-+  ('0' + ((n)>>16 & 0xF)), \
-+  ('0' + ((n)>>12 & 0xF)), \
-+  ('0' + ((n)>>8  & 0xF)), \
-+  ('0' + ((n)>>4  & 0xF)), \
-+  ('0' + ((n)     & 0xF))
-+
-+/* Construct a string literal encoding the version number. */
-+#ifdef COMPILER_VERSION
-+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
-+
-+/* Construct a string literal encoding the version number components. */
-+#elif defined(COMPILER_VERSION_MAJOR)
-+char const info_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
-+  COMPILER_VERSION_MAJOR,
-+# ifdef COMPILER_VERSION_MINOR
-+  '.', COMPILER_VERSION_MINOR,
-+#  ifdef COMPILER_VERSION_PATCH
-+   '.', COMPILER_VERSION_PATCH,
-+#   ifdef COMPILER_VERSION_TWEAK
-+    '.', COMPILER_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the internal version number. */
-+#ifdef COMPILER_VERSION_INTERNAL
-+char const info_version_internal[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-+  'i','n','t','e','r','n','a','l','[',
-+  COMPILER_VERSION_INTERNAL,']','\0'};
-+#elif defined(COMPILER_VERSION_INTERNAL_STR)
-+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
-+#endif
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef SIMULATE_VERSION_MAJOR
-+char const info_simulate_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
-+  SIMULATE_VERSION_MAJOR,
-+# ifdef SIMULATE_VERSION_MINOR
-+  '.', SIMULATE_VERSION_MINOR,
-+#  ifdef SIMULATE_VERSION_PATCH
-+   '.', SIMULATE_VERSION_PATCH,
-+#   ifdef SIMULATE_VERSION_TWEAK
-+    '.', SIMULATE_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-+
-+
-+
-+#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
-+#  if defined(__INTEL_CXX11_MODE__)
-+#    if defined(__cpp_aggregate_nsdmi)
-+#      define CXX_STD 201402L
-+#    else
-+#      define CXX_STD 201103L
-+#    endif
-+#  else
-+#    define CXX_STD 199711L
-+#  endif
-+#elif defined(_MSC_VER) && defined(_MSVC_LANG)
-+#  define CXX_STD _MSVC_LANG
-+#else
-+#  define CXX_STD __cplusplus
-+#endif
-+
-+const char* info_language_standard_default = "INFO" ":" "standard_default["
-+#if CXX_STD > 202002L
-+  "23"
-+#elif CXX_STD > 201703L
-+  "20"
-+#elif CXX_STD >= 201703L
-+  "17"
-+#elif CXX_STD >= 201402L
-+  "14"
-+#elif CXX_STD >= 201103L
-+  "11"
-+#else
-+  "98"
-+#endif
-+"]";
-+
-+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
-+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
-+     defined(__TI_COMPILER_VERSION__)) &&                                     \
-+  !defined(__STRICT_ANSI__)
-+  "ON"
-+#else
-+  "OFF"
-+#endif
-+"]";
-+
-+/*--------------------------------------------------------------------------*/
-+
-+int main(int argc, char* argv[])
-+{
-+  int require = 0;
-+  require += info_compiler[argc];
-+  require += info_platform[argc];
-+  require += info_arch[argc];
-+#ifdef COMPILER_VERSION_MAJOR
-+  require += info_version[argc];
-+#endif
-+#ifdef COMPILER_VERSION_INTERNAL
-+  require += info_version_internal[argc];
-+#endif
-+#ifdef SIMULATE_ID
-+  require += info_simulate[argc];
-+#endif
-+#ifdef SIMULATE_VERSION_MAJOR
-+  require += info_simulate_version[argc];
-+#endif
-+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
-+  require += info_cray[argc];
-+#endif
-+  require += info_language_standard_default[argc];
-+  require += info_language_extensions_default[argc];
-+  (void)argv;
-+  return require;
-+}
-diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o
-new file mode 100644
-index 0000000..4678bba
-Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o differ
-diff --git a/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
-new file mode 100644
-index 0000000..23fe12a
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
-@@ -0,0 +1,433 @@
-+
-+---
-+events:
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake:205 (message)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      The system is: Darwin - 23.6.0 - x86_64
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
-+      Compiler: /Library/Developer/CommandLineTools/usr/bin/cc 
-+      Build flags: 
-+      Id flags:  
-+      
-+      The output was:
-+      1
-+      ld: library 'System' not found
-+      clang: error: linker command failed with exit code 1 (use -v to see invocation)
-+      
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
-+      Compiler: /Library/Developer/CommandLineTools/usr/bin/cc 
-+      Build flags: 
-+      Id flags: -c 
-+      
-+      The output was:
-+      0
-+      
-+      
-+      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.o"
-+      
-+      The C compiler identification is AppleClang, found in:
-+        /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
-+      Compiler: /Library/Developer/CommandLineTools/usr/bin/c++ 
-+      Build flags: 
-+      Id flags:  
-+      
-+      The output was:
-+      1
-+      ld: library 'c++' not found
-+      clang: error: linker command failed with exit code 1 (use -v to see invocation)
-+      
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
-+      Compiler: /Library/Developer/CommandLineTools/usr/bin/c++ 
-+      Build flags: 
-+      Id flags: -c 
-+      
-+      The output was:
-+      0
-+      
-+      
-+      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.o"
-+      
-+      The CXX compiler identification is AppleClang, found in:
-+        /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o
-+      
-+  -
-+    kind: "try_compile-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:67 (try_compile)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    checks:
-+      - "Detecting C compiler ABI info"
-+    directories:
-+      source: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy"
-+      binary: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy"
-+    cmakeVariables:
-+      CMAKE_C_FLAGS: ""
-+      CMAKE_C_FLAGS_DEBUG: "-g"
-+      CMAKE_EXE_LINKER_FLAGS: ""
-+      CMAKE_OSX_ARCHITECTURES: ""
-+      CMAKE_OSX_DEPLOYMENT_TARGET: ""
-+      CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
-+    buildResult:
-+      variable: "CMAKE_C_ABI_COMPILED"
-+      cached: true
-+      stdout: |
-+        Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy'
-+        
-+        Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_5df0d
-+        [1/2] /Library/Developer/CommandLineTools/usr/bin/cc   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl,-v -MD -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c
-+        Apple clang version 15.0.0 (clang-1500.3.9.4)
-+        Target: x86_64-apple-darwin23.6.0
-+        Thread model: posix
-+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
-+        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
-+         "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -x c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c
-+        clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0
-+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"
-+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"
-+        #include "..." search starts here:
-+        #include <...> search starts here:
-+         /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include
-+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include
-+         /Library/Developer/CommandLineTools/usr/include
-+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)
-+        End of search list.
-+        [2/2] : && /Library/Developer/CommandLineTools/usr/bin/cc -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -v -Wl,-v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -o cmTC_5df0d   && :
-+        Apple clang version 15.0.0 (clang-1500.3.9.4)
-+        Target: x86_64-apple-darwin23.6.0
-+        Thread model: posix
-+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
-+         "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_5df0d -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a
-+        @(#)PROGRAM:ld PROJECT:ld-1053.12
-+        BUILD 15:44:24 Feb  3 2024
-+        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
-+        will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
-+        LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
-+        TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
-+        Library search paths:
-+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib
-+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift
-+        Framework search paths:
-+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks
-+        
-+      exitCode: 0
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:137 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Parsed C implicit include dir info: rv=done
-+        found start of include info
-+        found start of implicit include info
-+          add: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
-+          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
-+          add: [/Library/Developer/CommandLineTools/usr/include]
-+        end of search list found
-+        collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
-+        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
-+        collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
-+        implicit include dirs: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include]
-+      
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:173 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Parsed C implicit link information:
-+        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
-+        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?))("|,| |$)]
-+        ignore line: [Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy']
-+        ignore line: []
-+        ignore line: [Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_5df0d]
-+        ignore line: [[1/2] /Library/Developer/CommandLineTools/usr/bin/cc   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl -v -MD -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c]
-+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
-+        ignore line: [Target: x86_64-apple-darwin23.6.0]
-+        ignore line: [Thread model: posix]
-+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
-+        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
-+        ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -x c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c]
-+        ignore line: [clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0]
-+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"]
-+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"]
-+        ignore line: [#include "..." search starts here:]
-+        ignore line: [#include <...> search starts here:]
-+        ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
-+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
-+        ignore line: [ /Library/Developer/CommandLineTools/usr/include]
-+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)]
-+        ignore line: [End of search list.]
-+        ignore line: [[2/2] : && /Library/Developer/CommandLineTools/usr/bin/cc -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl -search_paths_first -Wl -headerpad_max_install_names -v -Wl -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -o cmTC_5df0d   && :]
-+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
-+        ignore line: [Target: x86_64-apple-darwin23.6.0]
-+        ignore line: [Thread model: posix]
-+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
-+        link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_5df0d -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
-+          arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
-+          arg [-demangle] ==> ignore
-+          arg [-lto_library] ==> ignore, skip following value
-+          arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
-+          arg [-dynamic] ==> ignore
-+          arg [-arch] ==> ignore
-+          arg [x86_64] ==> ignore
-+          arg [-platform_version] ==> ignore
-+          arg [macos] ==> ignore
-+          arg [14.0.0] ==> ignore
-+          arg [14.4] ==> ignore
-+          arg [-syslibroot] ==> ignore
-+          arg [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk] ==> ignore
-+          arg [-o] ==> ignore
-+          arg [cmTC_5df0d] ==> ignore
-+          arg [-search_paths_first] ==> ignore
-+          arg [-headerpad_max_install_names] ==> ignore
-+          arg [-v] ==> ignore
-+          arg [CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o] ==> ignore
-+          arg [-lSystem] ==> lib [System]
-+          arg [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
-+        linker tool for 'C': /Library/Developer/CommandLineTools/usr/bin/ld
-+        Library search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
-+        Framework search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
-+        remove lib [System]
-+        remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
-+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib]
-+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
-+        collapse framework dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
-+        implicit libs: []
-+        implicit objs: []
-+        implicit dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
-+        implicit fwks: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
-+      
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:210 (cmake_determine_linker_id)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Running the C compiler's linker: "/Library/Developer/CommandLineTools/usr/bin/ld" "-v"
-+      @(#)PROGRAM:ld PROJECT:ld-1053.12
-+      BUILD 15:44:24 Feb  3 2024
-+      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
-+      will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
-+      LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
-+      TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
-+  -
-+    kind: "try_compile-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:67 (try_compile)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    checks:
-+      - "Detecting CXX compiler ABI info"
-+    directories:
-+      source: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP"
-+      binary: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP"
-+    cmakeVariables:
-+      CMAKE_CXX_FLAGS: ""
-+      CMAKE_CXX_FLAGS_DEBUG: "-g"
-+      CMAKE_CXX_SCAN_FOR_MODULES: "OFF"
-+      CMAKE_EXE_LINKER_FLAGS: ""
-+      CMAKE_OSX_ARCHITECTURES: ""
-+      CMAKE_OSX_DEPLOYMENT_TARGET: ""
-+      CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
-+    buildResult:
-+      variable: "CMAKE_CXX_ABI_COMPILED"
-+      cached: true
-+      stdout: |
-+        Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP'
-+        
-+        Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_1e587
-+        [1/2] /Library/Developer/CommandLineTools/usr/bin/c++   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl,-v -MD -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp
-+        Apple clang version 15.0.0 (clang-1500.3.9.4)
-+        Target: x86_64-apple-darwin23.6.0
-+        Thread model: posix
-+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
-+        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
-+         "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp
-+        clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0
-+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"
-+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"
-+        #include "..." search starts here:
-+        #include <...> search starts here:
-+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1
-+         /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include
-+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include
-+         /Library/Developer/CommandLineTools/usr/include
-+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)
-+        End of search list.
-+        [2/2] : && /Library/Developer/CommandLineTools/usr/bin/c++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -v -Wl,-v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_1e587   && :
-+        Apple clang version 15.0.0 (clang-1500.3.9.4)
-+        Target: x86_64-apple-darwin23.6.0
-+        Thread model: posix
-+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
-+         "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_1e587 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a
-+        @(#)PROGRAM:ld PROJECT:ld-1053.12
-+        BUILD 15:44:24 Feb  3 2024
-+        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
-+        will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
-+        LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
-+        TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
-+        Library search paths:
-+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib
-+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift
-+        Framework search paths:
-+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks
-+        
-+      exitCode: 0
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:137 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Parsed CXX implicit include dir info: rv=done
-+        found start of include info
-+        found start of implicit include info
-+          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
-+          add: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
-+          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
-+          add: [/Library/Developer/CommandLineTools/usr/include]
-+        end of search list found
-+        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
-+        collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
-+        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
-+        collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
-+        implicit include dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include]
-+      
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:173 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Parsed CXX implicit link information:
-+        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
-+        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?))("|,| |$)]
-+        ignore line: [Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP']
-+        ignore line: []
-+        ignore line: [Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_1e587]
-+        ignore line: [[1/2] /Library/Developer/CommandLineTools/usr/bin/c++   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl -v -MD -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp]
-+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
-+        ignore line: [Target: x86_64-apple-darwin23.6.0]
-+        ignore line: [Thread model: posix]
-+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
-+        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
-+        ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp]
-+        ignore line: [clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0]
-+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"]
-+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"]
-+        ignore line: [#include "..." search starts here:]
-+        ignore line: [#include <...> search starts here:]
-+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
-+        ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
-+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
-+        ignore line: [ /Library/Developer/CommandLineTools/usr/include]
-+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)]
-+        ignore line: [End of search list.]
-+        ignore line: [[2/2] : && /Library/Developer/CommandLineTools/usr/bin/c++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl -search_paths_first -Wl -headerpad_max_install_names -v -Wl -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_1e587   && :]
-+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
-+        ignore line: [Target: x86_64-apple-darwin23.6.0]
-+        ignore line: [Thread model: posix]
-+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
-+        link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_1e587 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
-+          arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
-+          arg [-demangle] ==> ignore
-+          arg [-lto_library] ==> ignore, skip following value
-+          arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
-+          arg [-dynamic] ==> ignore
-+          arg [-arch] ==> ignore
-+          arg [x86_64] ==> ignore
-+          arg [-platform_version] ==> ignore
-+          arg [macos] ==> ignore
-+          arg [14.0.0] ==> ignore
-+          arg [14.4] ==> ignore
-+          arg [-syslibroot] ==> ignore
-+          arg [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk] ==> ignore
-+          arg [-o] ==> ignore
-+          arg [cmTC_1e587] ==> ignore
-+          arg [-search_paths_first] ==> ignore
-+          arg [-headerpad_max_install_names] ==> ignore
-+          arg [-v] ==> ignore
-+          arg [CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
-+          arg [-lc++] ==> lib [c++]
-+          arg [-lSystem] ==> lib [System]
-+          arg [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
-+        linker tool for 'CXX': /Library/Developer/CommandLineTools/usr/bin/ld
-+        Library search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
-+        Framework search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
-+        remove lib [System]
-+        remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
-+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib]
-+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
-+        collapse framework dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
-+        implicit libs: [c++]
-+        implicit objs: []
-+        implicit dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
-+        implicit fwks: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
-+      
-+      
-+  -
-+    kind: "message-v1"
-+    backtrace:
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:210 (cmake_determine_linker_id)"
-+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
-+      - "CMakeLists.txt:2 (project)"
-+    message: |
-+      Running the CXX compiler's linker: "/Library/Developer/CommandLineTools/usr/bin/ld" "-v"
-+      @(#)PROGRAM:ld PROJECT:ld-1053.12
-+      BUILD 15:44:24 Feb  3 2024
-+      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
-+      will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
-+      LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
-+      TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
-+...
-diff --git a/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
-new file mode 100644
-index 0000000..43977dc
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
-@@ -0,0 +1,3 @@
-+/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/Matam_HW3.dir
-+/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/edit_cache.dir
-+/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/rebuild_cache.dir
-diff --git a/cmake-build-debug/CMakeFiles/clion-Debug-log.txt b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
-new file mode 100644
-index 0000000..f12a101
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
-@@ -0,0 +1,16 @@
-+/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -G Ninja -S /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+-- The C compiler identification is AppleClang 15.0.0.15000309
-+-- The CXX compiler identification is AppleClang 15.0.0.15000309
-+-- Detecting C compiler ABI info
-+-- Detecting C compiler ABI info - done
-+-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc - skipped
-+-- Detecting C compile features
-+-- Detecting C compile features - done
-+-- Detecting CXX compiler ABI info
-+-- Detecting CXX compiler ABI info - done
-+-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ - skipped
-+-- Detecting CXX compile features
-+-- Detecting CXX compile features - done
-+-- Configuring done (2.0s)
-+-- Generating done (0.0s)
-+-- Build files have been written to: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-diff --git a/cmake-build-debug/CMakeFiles/clion-environment.txt b/cmake-build-debug/CMakeFiles/clion-environment.txt
-new file mode 100644
-index 0000000..a84bfe2
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/clion-environment.txt
-@@ -0,0 +1,4 @@
-+ToolSet: 1.0 (local)Ninja: 1.12.0@/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
-+Options: 
-+
-+Options:-DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
-\ No newline at end of file
-diff --git a/cmake-build-debug/CMakeFiles/cmake.check_cache b/cmake-build-debug/CMakeFiles/cmake.check_cache
-new file mode 100644
-index 0000000..3dccd73
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/cmake.check_cache
-@@ -0,0 +1 @@
-+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
-diff --git a/cmake-build-debug/CMakeFiles/rules.ninja b/cmake-build-debug/CMakeFiles/rules.ninja
-new file mode 100644
-index 0000000..20b58b9
---- /dev/null
-+++ b/cmake-build-debug/CMakeFiles/rules.ninja
-@@ -0,0 +1,64 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "Ninja" Generator, CMake Version 3.29
-+
-+# This file contains all the rules used to get the outputs files
-+# built from the input files.
-+# It is included in the main 'build.ninja'.
-+
-+# =============================================================================
-+# Project: Matam_HW3
-+# Configurations: Debug
-+# =============================================================================
-+# =============================================================================
-+
-+#############################################
-+# Rule for compiling CXX files.
-+
-+rule CXX_COMPILER__Matam_HW3_unscanned_Debug
-+  depfile = $DEP_FILE
-+  deps = gcc
-+  command = ${LAUNCHER}${CODE_CHECK}/Library/Developer/CommandLineTools/usr/bin/c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
-+  description = Building CXX object $out
-+
-+
-+#############################################
-+# Rule for linking CXX executable.
-+
-+rule CXX_EXECUTABLE_LINKER__Matam_HW3_Debug
-+  command = $PRE_LINK && /Library/Developer/CommandLineTools/usr/bin/c++ $FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
-+  description = Linking CXX executable $TARGET_FILE
-+  restat = $RESTAT
-+
-+
-+#############################################
-+# Rule for running custom commands.
-+
-+rule CUSTOM_COMMAND
-+  command = $COMMAND
-+  description = $DESC
-+
-+
-+#############################################
-+# Rule for re-running cmake.
-+
-+rule RERUN_CMAKE
-+  command = /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake --regenerate-during-build -S/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+  description = Re-running CMake...
-+  generator = 1
-+
-+
-+#############################################
-+# Rule for cleaning all built files.
-+
-+rule CLEAN
-+  command = /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja $FILE_ARG -t clean $TARGETS
-+  description = Cleaning all built files...
-+
-+
-+#############################################
-+# Rule for printing all primary targets available.
-+
-+rule HELP
-+  command = /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -t targets
-+  description = All primary targets available:
-+
-diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
-new file mode 100644
-index 0000000..2dd1bfe
---- /dev/null
-+++ b/cmake-build-debug/Testing/Temporary/LastTest.log
-@@ -0,0 +1,3 @@
-+Start testing: Dec 31 08:10 IST
-+----------------------------------------------------------
-+End testing: Dec 31 08:10 IST
-diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
-new file mode 100644
-index 0000000..0d90ed2
---- /dev/null
-+++ b/cmake-build-debug/build.ninja
-@@ -0,0 +1,164 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "Ninja" Generator, CMake Version 3.29
-+
-+# This file contains all the build statements describing the
-+# compilation DAG.
-+
-+# =============================================================================
-+# Write statements declared in CMakeLists.txt:
-+# 
-+# Which is the root file.
-+# =============================================================================
-+
-+# =============================================================================
-+# Project: Matam_HW3
-+# Configurations: Debug
-+# =============================================================================
-+
-+#############################################
-+# Minimal version of Ninja required by this file
-+
-+ninja_required_version = 1.5
-+
-+
-+#############################################
-+# Set configuration variable for custom commands.
-+
-+CONFIGURATION = Debug
-+# =============================================================================
-+# Include auxiliary files.
-+
-+
-+#############################################
-+# Include rules file.
-+
-+include CMakeFiles/rules.ninja
-+
-+# =============================================================================
-+
-+#############################################
-+# Logical path to working directory; prefix for absolute paths.
-+
-+cmake_ninja_workdir = /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/
-+# =============================================================================
-+# Object build statements for EXECUTABLE target Matam_HW3
-+
-+
-+#############################################
-+# Order-only phony target for Matam_HW3
-+
-+build cmake_object_order_depends_target_Matam_HW3: phony || .
-+
-+build CMakeFiles/Matam_HW3.dir/main.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/main.cpp || cmake_object_order_depends_target_Matam_HW3
-+  DEP_FILE = CMakeFiles/Matam_HW3.dir/main.cpp.o.d
-+  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
-+  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
-+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
-+  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
-+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
-+  TARGET_PDB = Matam_HW3.pdb
-+
-+build CMakeFiles/Matam_HW3.dir/Person.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/Person.cpp || cmake_object_order_depends_target_Matam_HW3
-+  DEP_FILE = CMakeFiles/Matam_HW3.dir/Person.cpp.o.d
-+  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
-+  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
-+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
-+  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
-+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
-+  TARGET_PDB = Matam_HW3.pdb
-+
-+build CMakeFiles/Matam_HW3.dir/Task.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/Task.cpp || cmake_object_order_depends_target_Matam_HW3
-+  DEP_FILE = CMakeFiles/Matam_HW3.dir/Task.cpp.o.d
-+  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
-+  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
-+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
-+  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
-+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
-+  TARGET_PDB = Matam_HW3.pdb
-+
-+
-+# =============================================================================
-+# Link build statements for EXECUTABLE target Matam_HW3
-+
-+
-+#############################################
-+# Link the executable Matam_HW3
-+
-+build Matam_HW3: CXX_EXECUTABLE_LINKER__Matam_HW3_Debug CMakeFiles/Matam_HW3.dir/main.cpp.o CMakeFiles/Matam_HW3.dir/Person.cpp.o CMakeFiles/Matam_HW3.dir/Task.cpp.o
-+  FLAGS = -g -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk
-+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
-+  POST_BUILD = :
-+  PRE_LINK = :
-+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
-+  TARGET_FILE = Matam_HW3
-+  TARGET_PDB = Matam_HW3.pdb
-+
-+
-+#############################################
-+# Utility command for edit_cache
-+
-+build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
-+  COMMAND = cd /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug && /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
-+  DESC = No interactive CMake dialog available...
-+  restat = 1
-+
-+build edit_cache: phony CMakeFiles/edit_cache.util
-+
-+
-+#############################################
-+# Utility command for rebuild_cache
-+
-+build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
-+  COMMAND = cd /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug && /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake --regenerate-during-build -S/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+  DESC = Running CMake to regenerate build system...
-+  pool = console
-+  restat = 1
-+
-+build rebuild_cache: phony CMakeFiles/rebuild_cache.util
-+
-+# =============================================================================
-+# Target aliases.
-+
-+# =============================================================================
-+# Folder targets.
-+
-+# =============================================================================
-+
-+#############################################
-+# Folder: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
-+
-+build all: phony Matam_HW3
-+
-+# =============================================================================
-+# Built-in targets
-+
-+
-+#############################################
-+# Re-run CMake if any of its inputs changed.
-+
-+build build.ninja: RERUN_CMAKE | /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/CMakeLists.txt CMakeCache.txt CMakeFiles/3.29.6/CMakeCCompiler.cmake CMakeFiles/3.29.6/CMakeCXXCompiler.cmake CMakeFiles/3.29.6/CMakeSystem.cmake
-+  pool = console
-+
-+
-+#############################################
-+# A missing CMake input file is not an error.
-+
-+build /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/CMakeLists.txt CMakeCache.txt CMakeFiles/3.29.6/CMakeCCompiler.cmake CMakeFiles/3.29.6/CMakeCXXCompiler.cmake CMakeFiles/3.29.6/CMakeSystem.cmake: phony
-+
-+
-+#############################################
-+# Clean all the built files.
-+
-+build clean: CLEAN
-+
-+
-+#############################################
-+# Print all primary targets available.
-+
-+build help: HELP
-+
-+
-+#############################################
-+# Make the all target the default.
-+
-+default all
-diff --git a/cmake-build-debug/cmake_install.cmake b/cmake-build-debug/cmake_install.cmake
-new file mode 100644
-index 0000000..0ad05a0
---- /dev/null
-+++ b/cmake-build-debug/cmake_install.cmake
-@@ -0,0 +1,49 @@
-+# Install script for directory: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
-+
-+# Set the install prefix
-+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
-+  set(CMAKE_INSTALL_PREFIX "/usr/local")
-+endif()
-+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
-+
-+# Set the install configuration name.
-+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
-+  if(BUILD_TYPE)
-+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
-+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
-+  else()
-+    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
-+  endif()
-+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
-+endif()
-+
-+# Set the component getting installed.
-+if(NOT CMAKE_INSTALL_COMPONENT)
-+  if(COMPONENT)
-+    message(STATUS "Install component: \"${COMPONENT}\"")
-+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
-+  else()
-+    set(CMAKE_INSTALL_COMPONENT)
-+  endif()
-+endif()
-+
-+# Is this installation the result of a crosscompile?
-+if(NOT DEFINED CMAKE_CROSSCOMPILING)
-+  set(CMAKE_CROSSCOMPILING "FALSE")
-+endif()
-+
-+# Set default install directory permissions.
-+if(NOT DEFINED CMAKE_OBJDUMP)
-+  set(CMAKE_OBJDUMP "/Library/Developer/CommandLineTools/usr/bin/objdump")
-+endif()
-+
-+if(CMAKE_INSTALL_COMPONENT)
-+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
-+else()
-+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
-+endif()
-+
-+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
-+       "${CMAKE_INSTALL_MANIFEST_FILES}")
-+file(WRITE "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
-+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
-
-commit 7da9ff648f3a2b3c5254ded0c1e71cc9ffca223f
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 19:56:01 2025 +0200
-
-    fixing id funcs
-
-diff --git a/SortedList.h b/SortedList.h
-index 4e0fc01..145286d 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -136,7 +136,7 @@ namespace mtm {
-             return this->length;
-         }
-         
--        void remove(ConstIterator& iter){
-+        void remove(ConstIterator<T>& iter){
-             if(iter == this->end()) {
-                 return;
-             }
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 60cc7f2..f134e46 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -2,6 +2,8 @@
- #include "TaskManager.h"
- using namespace mtm;
- 
-+int TaskManager::idCounter = 0;
-+
- Person* TaskManager::isEmployeeExist(const string& personName){
-     Person* currentEmployee = nullptr;
-     for (int i = 0; i < numOfEmployees; i++){
-@@ -21,7 +23,9 @@ void TaskManager::assignTask(const string &personName, const Task &task){
-         currentEmployee = new Person(personName);
-         employees[numOfEmployees++] = currentEmployee;
-     }
--    currentEmployee->assignTask(task);
-+    Task newTask(task.getPriority(), task.getType(), task.getDescription());
-+    newTask.setId(++idCounter);
-+    currentEmployee->assignTask(newTask);
- }
- 
- void TaskManager::completeTask(const string &personName){
-@@ -73,6 +77,7 @@ void TaskManager::printAllTasks() const{
-     for(SortedList<Task> currentTask : allTasks){
-         std::cout << *currentTask.begin().data << std::endl;
-     }
-+    std::cout << std::endl;
- }
- 
- void TaskManager::printTasksByType(TaskType type) const{
-@@ -81,6 +86,7 @@ void TaskManager::printTasksByType(TaskType type) const{
-     for(SortedList<Task> currentTask : tasksByType){
-         std::cout << *currentTask.begin().data << std::endl;
-     }
-+    std::cout << std::endl;
-    
- }
- SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-diff --git a/TaskManager.h b/TaskManager.h
-index 66d8130..f8ca722 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -16,6 +16,7 @@ private:
-      * @brief Maximum number of persons the TaskManager can handle.
-      */
-     static const int MAX_PERSONS = 10;
-+    static int idCounter;
-     int numOfEmployees = 0;
-     Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName);
-@@ -81,4 +82,4 @@ public:
-      * @brief Prints all tasks assigned to all employees.
-      */
-     void printAllTasks() const;
--};
-+};
-\ No newline at end of file
-
-commit 6ebfe623ea0e597fd33e0bec8b0b31ec8aa285de
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 18:14:29 2025 +0200
-
-    fixing vonst and typos
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index c9b9ded..60cc7f2 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -2,35 +2,36 @@
- #include "TaskManager.h"
- using namespace mtm;
- 
--Person* TaskManager::isEmployeeExist(const string& personName) const{
-+Person* TaskManager::isEmployeeExist(const string& personName){
-+    Person* currentEmployee = nullptr;
-     for (int i = 0; i < numOfEmployees; i++){
-         if (employees[i]->getName() == personName){
--            return employees[i];
-+            currentEmployee = employees[i];
-         }
-     }
--    return nullptr;
-+    return currentEmployee;
- }
- 
- void TaskManager::assignTask(const string &personName, const Task &task){
--    Person* cuurentEmployee = isEmployeeExist(personName);
--    if(cuurentEmployee==nullptr){
-+    Person* currentEmployee = isEmployeeExist(personName);
-+    if(currentEmployee == nullptr){
-         if(numOfEmployees == MAX_PERSONS){
-             throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
-         }
--        cuurentEmployee = new Person(personName);
--        employees[numOfEmployees++] = cuurentEmployee;
-+        currentEmployee = new Person(personName);
-+        employees[numOfEmployees++] = currentEmployee;
-     }
--    cuurentEmployee->assignTask(task);
-+    currentEmployee->assignTask(task);
- }
- 
- void TaskManager::completeTask(const string &personName){
--    Person* cuurentEmployee = isEmployeeExist(personName);
--    if(cuurentEmployee == nullptr){
-+    Person* currentEmployee = isEmployeeExist(personName);
-+    if(currentEmployee == nullptr){
-        return;
-     }
-     try
-     {
--        cuurentEmployee->completeTask();
-+        currentEmployee->completeTask();
-     }
-     catch (const std::runtime_error& e)
-     {
-@@ -44,9 +45,10 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
-     }
-     for(int i = 0; i < numOfEmployees; i++){
-         SortedList<Task> oldTasks = this->employees[i]->getTasks();
--
-         SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
-+        this->employees[i]->setTasks(newTasks);
-     }
-+
- }
- 
- SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
-diff --git a/TaskManager.h b/TaskManager.h
-index 6102d16..66d8130 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -18,7 +18,7 @@ private:
-     static const int MAX_PERSONS = 10;
-     int numOfEmployees = 0;
-     Person* employees[MAX_PERSONS];
--    Person* isEmployeeExist(const string& personName) const;
-+    Person* isEmployeeExist(const string& personName);
-     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
-     SortedList<Task> getAllEmployeesTasks() const;
- 
-
-commit 7647d87289720cf326f0c1e01e13965f0f90a8af
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 17:42:03 2025 +0200
-
-    fixing getAllEmployeesTasks
-
-diff --git a/TaskManager.h b/TaskManager.h
-index 322e1fe..6102d16 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -20,7 +20,7 @@ private:
-     Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName) const;
-     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
--    SortedList<Task> getAllEmployeesTasks(const Person* employees, int numOfEmployees);
-+    SortedList<Task> getAllEmployeesTasks() const;
- 
-     // Note - Additional private fields and methods can be added if needed.
- 
-
-commit 19081f0a620e6714609126cc12545ed09b192369
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 17:39:24 2025 +0200
-
-    creating printTasksByType and help func getAllEmployeesTasks
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 18b10a4..c9b9ded 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -67,14 +67,28 @@ void TaskManager::printAllEmployees() const{
- }
- 
- void TaskManager::printAllTasks() const{
-+    SortedList<Task> allTasks = getAllEmployeesTasks();
-+    for(SortedList<Task> currentTask : allTasks){
-+        std::cout << *currentTask.begin().data << std::endl;
-+    }
-+}
-+
-+void TaskManager::printTasksByType(TaskType type) const{
-+    SortedList<Task> allTasks = getAllEmployeesTasks();
-+    SortedList<Task> tasksByType = allTasks.filter([type](SortedList<Task> sortedListTask) { return (sortedListTask.begin().getType() == type); });
-+    for(SortedList<Task> currentTask : tasksByType){
-+        std::cout << *currentTask.begin().data << std::endl;
-+    }
-+   
-+}
-+SortedList<Task> TaskManager::getAllEmployeesTasks() const{
-     SortedList<Task> allTasks;
--    for(int i = 0; i < numOfEmployees; i++){
--        SortedList<Task> tasks = employees[i]->getTasks();
-+    for(int i = 0; i < this->numOfEmployees; i++){
-+        SortedList<Task> tasks = this->employees[i]->getTasks();
-         for(SortedList<Task> currentTask : tasks){
-             allTasks.insert(currentTask.begin().data);
-         }
-     }
--    for(SortedList<Task> currentTask : allTasks){
--        std::cout << *currentTask.begin().data << std::endl;
--    }
-+    return allTasks;
- }
-+
-diff --git a/TaskManager.h b/TaskManager.h
-index 46865a3..322e1fe 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -20,6 +20,7 @@ private:
-     Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName) const;
-     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
-+    SortedList<Task> getAllEmployeesTasks(const Person* employees, int numOfEmployees);
- 
-     // Note - Additional private fields and methods can be added if needed.
- 
-
-commit 92959be25c3aaf09ab210c4d239a49af11820dcf
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 17:26:52 2025 +0200
-
-    creating printAllTasks()
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 9299970..18b10a4 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -62,6 +62,19 @@ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type,
- void TaskManager::printAllEmployees() const{
-     for(int i = 0; i < numOfEmployees; i++){
-         std::cout << *employees[i] << std::endl;
-+        std::cout << std::endl;
-     }
- }
- 
-+void TaskManager::printAllTasks() const{
-+    SortedList<Task> allTasks;
-+    for(int i = 0; i < numOfEmployees; i++){
-+        SortedList<Task> tasks = employees[i]->getTasks();
-+        for(SortedList<Task> currentTask : tasks){
-+            allTasks.insert(currentTask.begin().data);
-+        }
-+    }
-+    for(SortedList<Task> currentTask : allTasks){
-+        std::cout << *currentTask.begin().data << std::endl;
-+    }
-+}
-
-commit e04f3a85ad476f48aa568a5b1fab579cb9487438
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 17:13:07 2025 +0200
-
-    creating printAllEmployees()
-
-diff --git a/SortedList.h b/SortedList.h
-index 2da277c..4e0fc01 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -193,15 +193,15 @@ namespace mtm {
-          *
-          * iterator:
-          * 5. class ConstIterator;
--         * 6. begin method
--         * 7. end method
-+         * 6. begin method V?
-+         * 7. end method V?
-          *
-          * functions:
-          * 8. insert - inserts a new element to the list V
-          * 9. remove - removes an element from the list V
-          * 10. length - returns the number of elements in the list V
--         * 11. filter - returns a new list with elements that satisfy a given condition V
--         * 12. apply - returns a new list with elements that were modified by an operation V
-+         * 11. filter - returns a new list with elements that satisfy a given condition V?
-+         * 12. apply - returns a new list with elements that were modified by an operation V?
-          */
- 
-     };
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 31ad921..9299970 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -59,3 +59,9 @@ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type,
-     return tasks;
- }
- 
-+void TaskManager::printAllEmployees() const{
-+    for(int i = 0; i < numOfEmployees; i++){
-+        std::cout << *employees[i] << std::endl;
-+    }
-+}
-+
-
-commit 76a6228d8515358a8ecc262072c26f6948c0b6ed
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 17:07:45 2025 +0200
-
-    creating bumpPriorityByType func
-
-diff --git a/SortedList.h b/SortedList.h
-index 84e06d4..2da277c 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -168,11 +168,18 @@ namespace mtm {
-         SortedList<T> apply(Function function) const{
-             SortedList<T> appliedList;
-             for(const SortedListNode<T>& current : *this){
--                appliedList.insert(function(current.data));
-+                appliedList.insert((function(current)).data);
-             }
-             return appliedList;
-         }
--        
-+
-+        ConstIterator begin() const {
-+            return ConstIterator(this->head);
-+        }
-+
-+        ConstIterator end() const {
-+            return ConstIterator(nullptr);
-+        }
-         /**
-          *
-          * the class should support the following public interface:
-@@ -193,8 +200,8 @@ namespace mtm {
-          * 8. insert - inserts a new element to the list V
-          * 9. remove - removes an element from the list V
-          * 10. length - returns the number of elements in the list V
--         * 11. filter - returns a new list with elements that satisfy a given condition
--         * 12. apply - returns a new list with elements that were modified by an operation
-+         * 11. filter - returns a new list with elements that satisfy a given condition V
-+         * 12. apply - returns a new list with elements that were modified by an operation V
-          */
- 
-     };
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 7e37fa8..31ad921 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -2,7 +2,7 @@
- #include "TaskManager.h"
- using namespace mtm;
- 
--mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
-+Person* TaskManager::isEmployeeExist(const string& personName) const{
-     for (int i = 0; i < numOfEmployees; i++){
-         if (employees[i]->getName() == personName){
-             return employees[i];
-@@ -11,7 +11,7 @@ mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
-     return nullptr;
- }
- 
--void mtm::TaskManager::assignTask(const string &personName, const Task &task){
-+void TaskManager::assignTask(const string &personName, const Task &task){
-     Person* cuurentEmployee = isEmployeeExist(personName);
-     if(cuurentEmployee==nullptr){
-         if(numOfEmployees == MAX_PERSONS){
-@@ -23,7 +23,7 @@ void mtm::TaskManager::assignTask(const string &personName, const Task &task){
-     cuurentEmployee->assignTask(task);
- }
- 
--void mtm::TaskManager::completeTask(const string &personName){
-+void TaskManager::completeTask(const string &personName){
-     Person* cuurentEmployee = isEmployeeExist(personName);
-     if(cuurentEmployee == nullptr){
-        return;
-@@ -36,4 +36,26 @@ void mtm::TaskManager::completeTask(const string &personName){
-     {
-         std::cout << e.what() << std::endl;
-     }
--}
-\ No newline at end of file
-+}
-+
-+void TaskManager::bumpPriorityByType(TaskType type, int priority){
-+    if(priority <= 0){
-+        return;
-+    }
-+    for(int i = 0; i < numOfEmployees; i++){
-+        SortedList<Task> oldTasks = this->employees[i]->getTasks();
-+
-+        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
-+    }
-+}
-+
-+SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
-+    if(tasks.begin()->getType() == type){
-+        SortedList<Task> resultTasks;
-+        Task newTask = Task(tasks.begin()->getPriority() + priority, tasks.begin()->getType(), tasks.begin()->getDescription());
-+        resultTasks.insert(newTask);
-+        return resultTasks;
-+    }
-+    return tasks;
-+}
-+
-diff --git a/TaskManager.h b/TaskManager.h
-index 90eacdd..46865a3 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -17,9 +17,9 @@ private:
-      */
-     static const int MAX_PERSONS = 10;
-     int numOfEmployees = 0;
--    mtm::Person* employees[MAX_PERSONS];
--
-+    Person* employees[MAX_PERSONS];
-     Person* isEmployeeExist(const string& personName) const;
-+    SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
- 
-     // Note - Additional private fields and methods can be added if needed.
- 
-
-commit 48eb0cd03b24c892900c38e43949646ee701e3de
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 15:04:48 2025 +0200
-
-    creating apply func
-
-diff --git a/SortedList.h b/SortedList.h
-index d849437..84e06d4 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -164,6 +164,15 @@ namespace mtm {
-             return filteredList;
-         }
- 
-+        template <class Function>
-+        SortedList<T> apply(Function function) const{
-+            SortedList<T> appliedList;
-+            for(const SortedListNode<T>& current : *this){
-+                appliedList.insert(function(current.data));
-+            }
-+            return appliedList;
-+        }
-+        
-         /**
-          *
-          * the class should support the following public interface:
-
-commit c793e7f302c5f0d8e4592583d493ce685696638d
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 14:53:07 2025 +0200
-
-    creating filter func
-
-diff --git a/SortedList.h b/SortedList.h
-index 2f154a8..d849437 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -152,6 +152,18 @@ namespace mtm {
-             delete iter;
-             this->length--;
-         }
-+
-+        template <class Condition>
-+        SortedList<T> filter(Condition condition) const{
-+            SortedList<T> filteredList;
-+            for(const SortedListNode<T>& current : *this){
-+                if(condition(current.data)) {
-+                    filteredList.insert(current.data);
-+                }
-+            }
-+            return filteredList;
-+        }
-+
-         /**
-          *
-          * the class should support the following public interface:
-@@ -170,7 +182,7 @@ namespace mtm {
-          *
-          * functions:
-          * 8. insert - inserts a new element to the list V
--         * 9. remove - removes an element from the list
-+         * 9. remove - removes an element from the list V
-          * 10. length - returns the number of elements in the list V
-          * 11. filter - returns a new list with elements that satisfy a given condition
-          * 12. apply - returns a new list with elements that were modified by an operation
-
-commit d298dd0c5f2cd7c6e37a5ea36a06940ae2752fa4
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 14:37:24 2025 +0200
-
-    creating remove func
-
-diff --git a/SortedList.h b/SortedList.h
-index 33f2372..2f154a8 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -46,7 +46,7 @@ namespace mtm {
- 
-     public:
-         SortedList() : length(0), head(nullptr), tail(nullptr) {}
--        SortedList(const SortedList& other) : length(other.length){
-+        SortedList(const SortedList& other) : length(0){
-             if(other.head == nullptr) {
-                 this->head = nullptr;
-                 this->tail = nullptr;
-@@ -85,7 +85,7 @@ namespace mtm {
-             }
-             this->head = nullptr;
-             this->tail = nullptr;
--            this->length = other.length;
-+            this->length = 0;
-             if(other.head == nullptr) {
-                 return *this;
-             }
-@@ -136,6 +136,22 @@ namespace mtm {
-             return this->length;
-         }
-         
-+        void remove(ConstIterator& iter){
-+            if(iter == this->end()) {
-+                return;
-+            }
-+            if(iter == this->begin()) {
-+                this->head = this->head->next;
-+            }
-+            else{
-+                SortedListNode<T>* nextNode = iter->next;
-+                SortedListNode<T>* prevNode = iter->prev;
-+                prevNode->next = nextNode;
-+                nextNode->prev = prevNode;
-+            }
-+            delete iter;
-+            this->length--;
-+        }
-         /**
-          *
-          * the class should support the following public interface:
-@@ -155,7 +171,7 @@ namespace mtm {
-          * functions:
-          * 8. insert - inserts a new element to the list V
-          * 9. remove - removes an element from the list
--         * 10. length - returns the number of elements in the list
-+         * 10. length - returns the number of elements in the list V
-          * 11. filter - returns a new list with elements that satisfy a given condition
-          * 12. apply - returns a new list with elements that were modified by an operation
-          */
-
-commit dcfb97b1a2f8cc4475c01cbcab5ad520aeab402f
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 14:19:59 2025 +0200
-
-    creating sortedList::length()
-
-diff --git a/SortedList.h b/SortedList.h
-index bc8640f..33f2372 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -127,12 +127,14 @@ namespace mtm {
-                 this->tail = this->head;
-                 this->length = 1;
-                 return;
--            }
--            
-+            }  
-             this->head->add(newElement);
-             this->length++;
-         }
- 
-+        int length() const {
-+            return this->length;
-+        }
-         
-         /**
-          *
-@@ -151,7 +153,7 @@ namespace mtm {
-          * 7. end method
-          *
-          * functions:
--         * 8. insert - inserts a new element to the list
-+         * 8. insert - inserts a new element to the list V
-          * 9. remove - removes an element from the list
-          * 10. length - returns the number of elements in the list
-          * 11. filter - returns a new list with elements that satisfy a given condition
-
-commit 307d8808fe0e8718d77846a9fa57b01be789f568
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 14:13:59 2025 +0200
-
-    changing CC and operator= to insert(currentOther.data), and creating insert
-
-diff --git a/SortedList.h b/SortedList.h
-index 1c66bd0..bc8640f 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -47,27 +47,36 @@ namespace mtm {
-     public:
-         SortedList() : length(0), head(nullptr), tail(nullptr) {}
-         SortedList(const SortedList& other) : length(other.length){
--            SortedListNode<T>* currentOther = other.head;
--            SortedListNode<T>* currentNode = this->head;
--             SortedListNode<T>* previousNode = nullptr;
--            while(currentOther != nullptr) {
--                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
--                if(previousNode == nullptr) {
--                    this->head = currentNode;
--                }
--                if(previousNode != nullptr) {
--                    previousNode->next = currentNode;
--                }
--                this->tail = currentNode;
--                previousNode = currentNode;
--                currentOther = currentOther->next;
--        }
-+            if(other.head == nullptr) {
-+                this->head = nullptr;
-+                this->tail = nullptr;
-+                return;
-+            }
-+            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-+                this->insert(currentOther.data);
-+            }
-+            
-+            // SortedListNode<T>* currentOther = other.head;
-+            // SortedListNode<T>* currentNode = this->head;
-+            //  SortedListNode<T>* previousNode = nullptr;
-+            // while(currentOther != nullptr) {
-+            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-+            //     if(previousNode == nullptr) {
-+            //         this->head = currentNode;
-+            //     }
-+            //     if(previousNode != nullptr) {
-+            //         previousNode->next = currentNode;
-+            //     }
-+            //     this->tail = currentNode;
-+            //     previousNode = currentNode;
-+            //     currentOther = currentOther->next;
-         }
- 
-         SortedList<T>& operator=(const SortedList& other) {
-             if(this == &other) {
-                 return *this;
-             }
-+            
-             SortedListNode<T>* current = this->head;
-             while(current != nullptr) {
-                 SortedListNode<T>* next = current->next;
-@@ -77,21 +86,27 @@ namespace mtm {
-             this->head = nullptr;
-             this->tail = nullptr;
-             this->length = other.length;
--            SortedListNode<T>* currentOther = other.head;
--            SortedListNode<T>* currentNode = this->head;
--            SortedListNode<T>* previousNode = nullptr;
--            while(currentOther != nullptr) {
--                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
--                if(previousNode == nullptr) {
--                    this->head = currentNode;
--                }
--                if(previousNode != nullptr) {
--                    previousNode->next = currentNode;
--                }
--                this->tail = currentNode;
--                previousNode = currentNode;
--                currentOther = currentOther->next;
-+            if(other.head == nullptr) {
-+                return *this;
-+            }
-+            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-+                this->insert(currentOther.data);
-             }
-+            // SortedListNode<T>* currentOther = other.head;
-+            // SortedListNode<T>* currentNode = this->head;
-+            // SortedListNode<T>* previousNode = nullptr;
-+            // while(currentOther != nullptr) {
-+            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-+            //     if(previousNode == nullptr) {
-+            //         this->head = currentNode;
-+            //     }
-+            //     if(previousNode != nullptr) {
-+            //         previousNode->next = currentNode;
-+            //     }
-+            //     this->tail = currentNode;
-+            //     previousNode = currentNode;
-+            //     currentOther = currentOther->next;
-+            // }
-             return *this;
-         }
-         ~SortedList() {
-@@ -103,6 +118,20 @@ namespace mtm {
-             }
-         }
- 
-+        void insert(const T& newElement){
-+            if (newElement == nullptr) {
-+                    //TODO invalid argument
-+                }
-+            if(this->head == nullptr) {
-+                this->head = new SortedListNode<T>(nullptr, nullptr, newElement);
-+                this->tail = this->head;
-+                this->length = 1;
-+                return;
-+            }
-+            
-+            this->head->add(newElement);
-+            this->length++;
-+        }
- 
-         
-         /**
-@@ -114,7 +143,7 @@ namespace mtm {
-          * 1. SortedList() - creates an empty list. V
-          * 2. copy constructor V
-          * 3. operator= - assignment operator V
--         * 4. ~SortedList() - destructor
-+         * 4. ~SortedList() - destructor V
-          *
-          * iterator:
-          * 5. class ConstIterator;
-
-commit c5596932a0672936d1c4b13e4ace77120711dc40
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 13:37:12 2025 +0200
-
-    removing class SortedListNode duplication
-
-diff --git a/SortedList.h b/SortedList.h
-index b0cb6ff..1c66bd0 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -24,7 +24,7 @@ namespace mtm {
-                 this->next = newNode;
-                 newNode->prev = this;
-             }
--            SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
-+            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) : prev(prev), next(next), data(data) {}
-             public:
-             void add(T const& const data) {
-                 if (data == nullptr) {
-@@ -43,28 +43,15 @@ namespace mtm {
-         int length;
-         SortedListNode<T>* head;
-         SortedListNode<T>* tail;
--        class SortedListNode { 
--        private:
--            T* data;
--            SortedListNode<T>* next;
--            SortedListNode<T>* previous;
--        public:
--            SortedListNode(T* data = nullptr, SortedListNode<T>* next = nullptr, SortedListNode<T>* previous = nullptr) : data(data), next(next), previous(previous) {}
--            ~SortedListNode() {
--                delete data;
--            }
--        };
--
- 
-     public:
-         SortedList() : length(0), head(nullptr), tail(nullptr) {}
--
-         SortedList(const SortedList& other) : length(other.length){
-             SortedListNode<T>* currentOther = other.head;
-             SortedListNode<T>* currentNode = this->head;
-              SortedListNode<T>* previousNode = nullptr;
-             while(currentOther != nullptr) {
--                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
-+                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-                 if(previousNode == nullptr) {
-                     this->head = currentNode;
-                 }
-@@ -94,7 +81,7 @@ namespace mtm {
-             SortedListNode<T>* currentNode = this->head;
-             SortedListNode<T>* previousNode = nullptr;
-             while(currentOther != nullptr) {
--                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
-+                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-                 if(previousNode == nullptr) {
-                     this->head = currentNode;
-                 }
-
-commit 8eadcb3870edf7cd034a945599defa41f2b687c0
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 12:55:31 2025 +0200
-
-    creating  ~SortedList()
-
-diff --git a/SortedList.h b/SortedList.h
-index debf7a3..b0cb6ff 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -107,6 +107,14 @@ namespace mtm {
-             }
-             return *this;
-         }
-+        ~SortedList() {
-+            SortedListNode<T>* current = this->head;
-+            while(current != nullptr) {
-+                SortedListNode<T>* next = current->next;
-+                delete current;
-+                current = next;
-+            }
-+        }
- 
- 
-         
-@@ -118,7 +126,7 @@ namespace mtm {
-          * constructors and destructor:
-          * 1. SortedList() - creates an empty list. V
-          * 2. copy constructor V
--         * 3. operator= - assignment operator
-+         * 3. operator= - assignment operator V
-          * 4. ~SortedList() - destructor
-          *
-          * iterator:
-
-commit b16f143293cdb6acf1760486e70f0761367b1ee0
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 12:50:03 2025 +0200
-
-    foxing rtype for  operator=
-
-diff --git a/SortedList.h b/SortedList.h
-index 049c7b9..debf7a3 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -77,7 +77,7 @@ namespace mtm {
-         }
-         }
- 
--        SortedList& operator=(const SortedList& other) {
-+        SortedList<T>& operator=(const SortedList& other) {
-             if(this == &other) {
-                 return *this;
-             }
-
-commit 35390b57dcb4a7c6c2fd122da090748a1cd90ea7
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Thu Jan 2 12:49:28 2025 +0200
-
-    creating  operator= for sortedList
-
-diff --git a/SortedList.h b/SortedList.h
-index 31c5ed5..049c7b9 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -75,14 +75,49 @@ namespace mtm {
-                 previousNode = currentNode;
-                 currentOther = currentOther->next;
-         }
-+        }
-+
-+        SortedList& operator=(const SortedList& other) {
-+            if(this == &other) {
-+                return *this;
-+            }
-+            SortedListNode<T>* current = this->head;
-+            while(current != nullptr) {
-+                SortedListNode<T>* next = current->next;
-+                delete current;
-+                current = next;
-+            }
-+            this->head = nullptr;
-+            this->tail = nullptr;
-+            this->length = other.length;
-+            SortedListNode<T>* currentOther = other.head;
-+            SortedListNode<T>* currentNode = this->head;
-+            SortedListNode<T>* previousNode = nullptr;
-+            while(currentOther != nullptr) {
-+                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
-+                if(previousNode == nullptr) {
-+                    this->head = currentNode;
-+                }
-+                if(previousNode != nullptr) {
-+                    previousNode->next = currentNode;
-+                }
-+                this->tail = currentNode;
-+                previousNode = currentNode;
-+                currentOther = currentOther->next;
-+            }
-+            return *this;
-+        }
-+
-+
-+        
-         /**
-          *
-          * the class should support the following public interface:
-          * if needed, use =defualt / =delete
-          *
-          * constructors and destructor:
--         * 1. SortedList() - creates an empty list.
--         * 2. copy constructor
-+         * 1. SortedList() - creates an empty list. V
-+         * 2. copy constructor V
-          * 3. operator= - assignment operator
-          * 4. ~SortedList() - destructor
-          *
-@@ -120,5 +155,5 @@ namespace mtm {
-      *
-      */
-     };
--}
--
-+    }
-+};
-\ No newline at end of file
-
-commit bf8549153b26c883a799ed93163f99b0d56bb963
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Wed Jan 1 19:00:06 2025 +0200
-
-    creating completeTask func
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 752291d..7e37fa8 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -22,3 +22,18 @@ void mtm::TaskManager::assignTask(const string &personName, const Task &task){
-     }
-     cuurentEmployee->assignTask(task);
- }
-+
-+void mtm::TaskManager::completeTask(const string &personName){
-+    Person* cuurentEmployee = isEmployeeExist(personName);
-+    if(cuurentEmployee == nullptr){
-+       return;
-+    }
-+    try
-+    {
-+        cuurentEmployee->completeTask();
-+    }
-+    catch (const std::runtime_error& e)
-+    {
-+        std::cout << e.what() << std::endl;
-+    }
-+}
-\ No newline at end of file
-
-commit 26c8d14dae8fb4f3659f32fec16ca5ede8896541
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Wed Jan 1 18:49:00 2025 +0200
-
-    fixing isEmployeeExist and creating assignTask
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index d5f7dfb..752291d 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -2,11 +2,23 @@
- #include "TaskManager.h"
- using namespace mtm;
- 
--bool TaskManager::isEmployeeExist(const string& personName) const{
-+mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
-     for (int i = 0; i < numOfEmployees; i++){
-         if (employees[i]->getName() == personName){
--            return true;
-+            return employees[i];
-         }
-     }
--    return false;
-+    return nullptr;
-+}
-+
-+void mtm::TaskManager::assignTask(const string &personName, const Task &task){
-+    Person* cuurentEmployee = isEmployeeExist(personName);
-+    if(cuurentEmployee==nullptr){
-+        if(numOfEmployees == MAX_PERSONS){
-+            throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
-+        }
-+        cuurentEmployee = new Person(personName);
-+        employees[numOfEmployees++] = cuurentEmployee;
-+    }
-+    cuurentEmployee->assignTask(task);
- }
-diff --git a/TaskManager.h b/TaskManager.h
-index 6249403..90eacdd 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -17,9 +17,9 @@ private:
-      */
-     static const int MAX_PERSONS = 10;
-     int numOfEmployees = 0;
--    Person* employees[MAX_PERSONS];
-+    mtm::Person* employees[MAX_PERSONS];
- 
--    bool isEmployeeExist(const string& personName) const;
-+    Person* isEmployeeExist(const string& personName) const;
- 
-     // Note - Additional private fields and methods can be added if needed.
- 
-
-commit b00f9441a686498153f3a8bb990d3ef44c333f94
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Wed Jan 1 18:32:52 2025 +0200
-
-    adding private method - isEmployeeExist
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-index 00a59c7..d5f7dfb 100644
---- a/TaskManager.cpp
-+++ b/TaskManager.cpp
-@@ -1,3 +1,12 @@
- #include <iostream>
- #include "TaskManager.h"
--#include "SortedList.h"
-+using namespace mtm;
-+
-+bool TaskManager::isEmployeeExist(const string& personName) const{
-+    for (int i = 0; i < numOfEmployees; i++){
-+        if (employees[i]->getName() == personName){
-+            return true;
-+        }
-+    }
-+    return false;
-+}
-diff --git a/TaskManager.h b/TaskManager.h
-index 6be757b..6249403 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -2,8 +2,9 @@
- #pragma once
- 
- #include "Task.h"
--#include "Person.h" //check if allowed
--#include "SortedList.h" //check if allowed
-+#include "SortedList.h"
-+#include "Person.h"
-+using namespace mtm;
- 
- 
- /**
-@@ -16,7 +17,9 @@ private:
-      */
-     static const int MAX_PERSONS = 10;
-     int numOfEmployees = 0;
--    mtm::Person* employees[MAX_PERSONS];
-+    Person* employees[MAX_PERSONS];
-+
-+    bool isEmployeeExist(const string& personName) const;
- 
-     // Note - Additional private fields and methods can be added if needed.
- 
-
-commit d1ea71d3453e9cd5a280e029dd24431566ad78bd
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Wed Jan 1 18:18:01 2025 +0200
-
-    defining TaskManager c'tor to default
-
-diff --git a/TaskManager.h b/TaskManager.h
-index 3a44f03..6be757b 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -15,7 +15,7 @@ private:
-      * @brief Maximum number of persons the TaskManager can handle.
-      */
-     static const int MAX_PERSONS = 10;
--    int numOfEmployees;
-+    int numOfEmployees = 0;
-     mtm::Person* employees[MAX_PERSONS];
- 
-     // Note - Additional private fields and methods can be added if needed.
-@@ -26,7 +26,7 @@ public:
-      *
-      * Note - you may add =default if needed.
-      */
--    TaskManager();
-+    TaskManager() = default;
- 
-     /**
-      * @brief Deleted copy constructor to prevent copying of TaskManager objects.
-
-commit 2ca9a6df4110f8a224b2eb936ee9e55029096acc
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Wed Jan 1 18:14:52 2025 +0200
-
-    adding private fields to taskManager.h
-
-diff --git a/TaskManager.h b/TaskManager.h
-index f1acc89..3a44f03 100644
---- a/TaskManager.h
-+++ b/TaskManager.h
-@@ -2,6 +2,9 @@
- #pragma once
- 
- #include "Task.h"
-+#include "Person.h" //check if allowed
-+#include "SortedList.h" //check if allowed
-+
- 
- /**
-  * @brief Class managing tasks assigned to multiple persons.
-@@ -12,6 +15,8 @@ private:
-      * @brief Maximum number of persons the TaskManager can handle.
-      */
-     static const int MAX_PERSONS = 10;
-+    int numOfEmployees;
-+    mtm::Person* employees[MAX_PERSONS];
- 
-     // Note - Additional private fields and methods can be added if needed.
- 
-
-commit 7fb158bb718f08b35e811c40c9172be503807e27
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Wed Jan 1 17:47:32 2025 +0200
-
-    creating TaskManager.cpp file
-
-diff --git a/TaskManager.cpp b/TaskManager.cpp
-new file mode 100644
-index 0000000..00a59c7
---- /dev/null
-+++ b/TaskManager.cpp
-@@ -0,0 +1,3 @@
-+#include <iostream>
-+#include "TaskManager.h"
-+#include "SortedList.h"
-
-commit e6a353555de175a882959e6ac3c3c61703715665
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Tue Dec 31 08:43:58 2024 +0200
-
-    add const
-
-diff --git a/SortedList.h b/SortedList.h
-index 4290e9c..31c5ed5 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -26,7 +26,7 @@ namespace mtm {
-             }
-             SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
-             public:
--            void add(T& data) {
-+            void add(T const& const data) {
-                 if (data == nullptr) {
-                     //TODO invalid argument
-                 }
-
-commit daa6df8966b91b05a59f8a46be14f8130a134f2a
-Author: guy friedman <guy.friedman2001@gmail.com>
-Date:   Tue Dec 31 08:35:38 2024 +0200
-
-    add code to SortedListNode
-
-diff --git a/SortedList.h b/SortedList.h
-index 2eb0a1f..4290e9c 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -7,6 +7,38 @@ namespace mtm {
- 
-     template <typename T>
-     class SortedList {
-+        template <typename T>
-+        class SortedListNode {
-+            private:
-+            friend class SortedList<T>;
-+            SortedListNode<T> * prev;
-+            SortedListNode<T> * next;
-+            T* data;
-+            void add(SortedListNode<T> * newNode) {
-+                if (newNode <= this->next){ //TODO create > operator, make null node smallest;
-+                    this->next->add(newNode);
-+                    return;
-+                }
-+                this->next->prev = newNode;
-+                newNode->next = this->next;
-+                this->next = newNode;
-+                newNode->prev = this;
-+            }
-+            SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
-+            public:
-+            void add(T& data) {
-+                if (data == nullptr) {
-+                    //TODO invalid argument
-+                }
-+                SortedListNode<T> * newNode = new SortedListNode<T>(data);
-+                this->add(newNode);
-+            }
-+            ~SortedListNode() {
-+                this->prev = nullptr;
-+                this->next = nullptr;
-+                delete this->data;
-+            }
-+        };
-         private:
-         int length;
-         SortedListNode<T>* head;
-
-commit 10b87fb6f427d4d5a2df42c5ddc84bea358aef69
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Mon Dec 30 18:34:33 2024 +0200
-
-    creating CC
-
-diff --git a/SortedList.h b/SortedList.h
-index e3eabd6..2eb0a1f 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -26,6 +26,23 @@ namespace mtm {
- 
-     public:
-         SortedList() : length(0), head(nullptr), tail(nullptr) {}
-+
-+        SortedList(const SortedList& other) : length(other.length){
-+            SortedListNode<T>* currentOther = other.head;
-+            SortedListNode<T>* currentNode = this->head;
-+             SortedListNode<T>* previousNode = nullptr;
-+            while(currentOther != nullptr) {
-+                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
-+                if(previousNode == nullptr) {
-+                    this->head = currentNode;
-+                }
-+                if(previousNode != nullptr) {
-+                    previousNode->next = currentNode;
-+                }
-+                this->tail = currentNode;
-+                previousNode = currentNode;
-+                currentOther = currentOther->next;
-+        }
-         /**
-          *
-          * the class should support the following public interface:
-
-commit 24862fd70781ac234296c413ce254c955c663f1f
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Mon Dec 30 18:17:38 2024 +0200
-
-    creating SortedList() c'tor
-
-diff --git a/SortedList.h b/SortedList.h
-index e011cce..e3eabd6 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -25,6 +25,7 @@ namespace mtm {
- 
- 
-     public:
-+        SortedList() : length(0), head(nullptr), tail(nullptr) {}
-         /**
-          *
-          * the class should support the following public interface:
-
-commit 8c4be612b0f1ca04da33d029393457f96e7fc7b0
-Author: Ori Elkabetz <orielk2@gmail.com>
-Date:   Mon Dec 30 18:12:11 2024 +0200
-
-    setting SortedList private and creating class SortedListNode
-
-diff --git a/SortedList.h b/SortedList.h
-index ddb0d8e..e011cce 100644
---- a/SortedList.h
-+++ b/SortedList.h
-@@ -7,6 +7,23 @@ namespace mtm {
- 
-     template <typename T>
-     class SortedList {
-+        private:
-+        int length;
-+        SortedListNode<T>* head;
-+        SortedListNode<T>* tail;
-+        class SortedListNode { 
-+        private:
-+            T* data;
-+            SortedListNode<T>* next;
-+            SortedListNode<T>* previous;
-+        public:
-+            SortedListNode(T* data = nullptr, SortedListNode<T>* next = nullptr, SortedListNode<T>* previous = nullptr) : data(data), next(next), previous(previous) {}
-+            ~SortedListNode() {
-+                delete data;
-+            }
-+        };
-+
-+
-     public:
-         /**
-          *
-
-commit a3481f8f37f2fbd59d824d4020f19d434ec6f9a5
-Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
-Date:   Sun Dec 22 10:44:54 2024 +0200
-
-    Update Task.cpp
-
-diff --git a/Task.cpp b/Task.cpp
-index 176989a..b5d3670 100644
---- a/Task.cpp
-+++ b/Task.cpp
-@@ -50,7 +50,10 @@ ostream &operator<<(ostream& os, const Task& task) {
- }
- 
- bool operator>(const Task& lhs, const Task& rhs) {
--    return lhs.m_priority > rhs.m_priority;
-+    if (lhs.m_priority == rhs.m_priority) {
-+            return lhs.m_id < rhs.m_id; 
-+        }
-+        return lhs.m_priority > rhs.m_priority;
- }
- 
- 
-
-commit ef076db7052b54a8918ae43ebe390b6a7a629909
-Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
-Date:   Fri Dec 20 17:02:30 2024 +0200
-
-    Update README.md
-
-diff --git a/README.md b/README.md
-index 22bd23c..8b87dca 100644
---- a/README.md
-+++ b/README.md
-@@ -2,6 +2,5 @@
- 
- This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
- 
--You may find the full instructions for this assignment on the [course's website](https://moodle2324.technion.ac.il/course/view.php?id=3205).
--
--Good luck and have fun!
-+You may find the full instructions for this assignment on the course's website.
-+Good luck, and have fun!
-
-commit ef8a3ce100827ef3fead32a4927a3566fe3d0d5d
-Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
-Date:   Fri Dec 20 17:01:08 2024 +0200
-
-    Add files via upload
-
-diff --git a/Person.cpp b/Person.cpp
-new file mode 100644
-index 0000000..4a6b9aa
---- /dev/null
-+++ b/Person.cpp
-@@ -0,0 +1,51 @@
-+
-+#include "Person.h"
-+using std::endl;
-+
-+// Constructor
-+Person::Person(const string &name) : m_name(name) {}
-+
-+// Getters and setters
-+string Person::getName() const {
-+    return m_name;
-+}
-+
-+const SortedList<Task>& Person::getTasks() const {
-+    return m_tasks;
-+}
-+
-+void Person::setTasks(const SortedList<Task>& tasks) {
-+    m_tasks = tasks;
-+}
-+
-+// Other methods
-+void Person::assignTask(const Task& task) {
-+    m_tasks.insert(task);
-+}
-+
-+
-+int Person::completeTask() {
-+    if (m_tasks.length() == 0) {
-+        throw std::runtime_error("No tasks assigned to this person.");
-+    }
-+    int taskId = (*m_tasks.begin()).getId();
-+    m_tasks.remove(m_tasks.begin());
-+    return taskId;
-+}
-+
-+const Task& Person::getHighestPriorityTask() const {
-+    if (m_tasks.length() == 0) {
-+        throw std::runtime_error("No tasks assigned to this person.");
-+    }
-+    return (*m_tasks.begin());
-+}
-+
-+// Overloaded operators
-+ostream& operator<<(ostream& os, const Person& person) {
-+    os << "Person: " << person.m_name << endl;
-+    // Assuming the SortedList has an appropriate method to list tasks
-+    for (const Task& t: person.m_tasks) {
-+        os << t << endl;
-+    }
-+    return os;
-+}
-diff --git a/Person.h b/Person.h
-new file mode 100644
-index 0000000..aea7f69
---- /dev/null
-+++ b/Person.h
-@@ -0,0 +1,79 @@
-+
-+#pragma once
-+
-+#include <iostream>
-+#include <string>
-+#include "Task.h"
-+#include "SortedList.h"
-+
-+using mtm::SortedList;
-+using std::ostream;
-+using std::string;
-+
-+/**
-+ * @brief Class representing a person who can have tasks assigned.
-+ */
-+class Person {
-+private:
-+    string m_name;
-+    SortedList<Task> m_tasks;
-+
-+public:
-+    /**
-+     * @brief Constructor to create a Person object.
-+     *
-+     * @param name The name of the person (default is an empty string).
-+     */
-+    Person(const string& name = "");
-+
-+    /**
-+     * @brief Gets the name of the person.
-+     *
-+     * @return string The name of the person.
-+     */
-+    string getName() const;
-+
-+    /**
-+     * @brief Gets the list of tasks assigned to the person.
-+     *
-+     * @return const SortedList<Task>& The list of tasks assigned to the person.
-+     */
-+    const SortedList<Task>& getTasks() const;
-+
-+    /**
-+     * @brief Sets the list of tasks for the person.
-+     *
-+     * @param tasks The list of tasks to be set.
-+     */
-+    void setTasks(const SortedList<Task>& tasks);
-+
-+    /**
-+     * @brief Assigns a new task to the person.
-+     *
-+     * @param task The task to be assigned.
-+     */
-+    void assignTask(const Task& task);
-+
-+    /**
-+     * @brief Completes the highest priority task from the list of tasks.
-+     *
-+     * @return int The ID of the completed task.
-+     */
-+    int completeTask();
-+
-+    /**
-+     * @brief Gets the highest priority task assigned to the person.
-+     *
-+     * @return const Task& The highest priority task.
-+     */
-+    const Task& getHighestPriorityTask() const;
-+
-+    /**
-+     * @brief Overloaded output stream operator for printing Person details.
-+     *
-+     * @param os The output stream.
-+     * @param person The Person object to be printed.
-+     * @return ostream& The output stream with the Person details.
-+     */
-+    friend ostream &operator<<(ostream &os, const Person &person);
-+};
-diff --git a/README.md b/README.md
-index f53e20d..22bd23c 100644
---- a/README.md
-+++ b/README.md
-@@ -1,6 +1,7 @@
--# HW3_2425A
--This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
--
--You may find the full instructions for this assignment on the course's website.
--
--Good luck and have fun!
-+# Matam Homework 3
-+
-+This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
-+
-+You may find the full instructions for this assignment on the [course's website](https://moodle2324.technion.ac.il/course/view.php?id=3205).
-+
-+Good luck and have fun!
-diff --git a/SortedList.h b/SortedList.h
-new file mode 100644
-index 0000000..ddb0d8e
---- /dev/null
-+++ b/SortedList.h
-@@ -0,0 +1,57 @@
-+#pragma once
-+
-+#include <iostream>
-+#include <stdexcept>
-+
-+namespace mtm {
-+
-+    template <typename T>
-+    class SortedList {
-+    public:
-+        /**
-+         *
-+         * the class should support the following public interface:
-+         * if needed, use =defualt / =delete
-+         *
-+         * constructors and destructor:
-+         * 1. SortedList() - creates an empty list.
-+         * 2. copy constructor
-+         * 3. operator= - assignment operator
-+         * 4. ~SortedList() - destructor
-+         *
-+         * iterator:
-+         * 5. class ConstIterator;
-+         * 6. begin method
-+         * 7. end method
-+         *
-+         * functions:
-+         * 8. insert - inserts a new element to the list
-+         * 9. remove - removes an element from the list
-+         * 10. length - returns the number of elements in the list
-+         * 11. filter - returns a new list with elements that satisfy a given condition
-+         * 12. apply - returns a new list with elements that were modified by an operation
-+         */
-+
-+    };
-+
-+    template <class T>
-+    class SortedList<T>::ConstIterator {
-+    /**
-+     * the class should support the following public interface:
-+     * if needed, use =defualt / =delete
-+     *
-+     * constructors and destructor:
-+     * 1. a ctor(or ctors) your implementation needs
-+     * 2. copy constructor
-+     * 3. operator= - assignment operator
-+     * 4. ~ConstIterator() - destructor
-+     *
-+     * operators:
-+     * 5. operator* - returns the element the iterator points to
-+     * 6. operator++ - advances the iterator to the next element
-+     * 7. operator!= - returns true if the iterator points to a different element
-+     *
-+     */
-+    };
-+}
-+
-diff --git a/Task.cpp b/Task.cpp
-new file mode 100644
-index 0000000..176989a
---- /dev/null
-+++ b/Task.cpp
-@@ -0,0 +1,83 @@
-+
-+#include "Task.h"
-+
-+// Constructor
-+Task::Task(int priority, TaskType type, const string &desc)
-+    : m_description(desc), m_priority(priority), m_type(type)
-+{
-+    // enforce priority range of 0-100
-+    // 0 is lowest priority, 100 is highest
-+    if (m_priority < 0)
-+    {
-+        m_priority = 0;
-+    }
-+    else if (m_priority > 100)
-+    {
-+        m_priority = 100;
-+    }
-+}
-+
-+Task::Task(int priority, const string &desc)
-+    : Task(priority, TaskType::General, desc) {}
-+
-+// Getters and setters
-+int Task::getId() const {
-+    return m_id;
-+}
-+
-+void Task::setId(int newId) {
-+    m_id = newId;
-+}
-+
-+TaskType Task::getType() const {
-+    return m_type;
-+}
-+
-+string Task::getDescription() const {
-+    return m_description;
-+}
-+
-+int Task::getPriority() const {
-+    return m_priority;
-+}
-+
-+
-+// Overloaded operators
-+ostream &operator<<(ostream& os, const Task& task) {
-+    os << "Task ID: " << task.m_id << ", Priority: " << task.m_priority;
-+    os << ", Type: " << taskTypeToString(task.m_type) << ", Description: " << task.m_description;
-+    return os;
-+}
-+
-+bool operator>(const Task& lhs, const Task& rhs) {
-+    return lhs.m_priority > rhs.m_priority;
-+}
-+
-+
-+// Convert TaskType to string
-+std::string taskTypeToString(TaskType type) {
-+    switch (type) {
-+    case TaskType::Meeting:
-+        return "Meeting";
-+    case TaskType::Presentation:
-+        return "Presentation";
-+    case TaskType::Documentation:
-+        return "Documentation";
-+    case TaskType::Development:
-+        return "Development";
-+    case TaskType::Testing:
-+        return "Testing";
-+    case TaskType::Research:
-+        return "Research";
-+    case TaskType::Training:
-+        return "Training";
-+    case TaskType::Maintenance:
-+        return "Maintenance";
-+    case TaskType::CustomerSupport:
-+        return "Customer Support";
-+    case TaskType::General:
-+        return "General";
-+    default:
-+        return "Unknown Task";
-+    }
-+}
-diff --git a/Task.h b/Task.h
-new file mode 100644
-index 0000000..87ed435
---- /dev/null
-+++ b/Task.h
-@@ -0,0 +1,115 @@
-+
-+#pragma once
-+
-+#include <iostream>
-+#include <string>
-+
-+using std::ostream;
-+using std::string;
-+
-+/**
-+ * @brief Enum class representing different types of tasks.
-+ */
-+enum class TaskType {
-+    Meeting,
-+    Presentation,
-+    Documentation,
-+    Development,
-+    Testing,
-+    Research,
-+    Training,
-+    Maintenance,
-+    CustomerSupport,
-+    General
-+};
-+
-+/**
-+ * @brief Converts a TaskType enum to its corresponding string representation.
-+ *
-+ * @param type The TaskType enum to be converted.
-+ * @return std::string The string representation of the TaskType.
-+ */
-+string taskTypeToString(TaskType type);
-+
-+/**
-+ * @brief Class representing a task.
-+ */
-+class Task {
-+private:
-+    int m_id;
-+    string m_description;
-+    int m_priority;
-+    TaskType m_type;
-+
-+public:
-+    /**
-+     * @brief Constructor to create a Task object.
-+     *
-+     * @param priority The priority of the task, enforced to be in range [0, 100].
-+     * @param type The type of the task (default is TaskType::General).
-+     * @param desc The description of the task (default is an empty string).
-+     */
-+    Task(int priority, TaskType type = TaskType::General, const string& desc = "");
-+
-+    /**
-+     * @brief Constructor to create a Task object with a default type.
-+     *
-+     * @param priority The priority of the task, enforced to be in range [0, 100].
-+     * @param desc The description of the task.
-+     */
-+    Task(int priority, const string& desc = "");
-+
-+    /**
-+     * @brief Gets the ID of the task.
-+     *
-+     * @return int The ID of the task.
-+     */
-+    int getId() const;
-+
-+    /**
-+     * @brief Sets the ID of the task.
-+     *
-+     * @param newId The new ID to be set for the task.
-+     */
-+    void setId(int newId);
-+
-+    /**
-+     * @brief Gets the description of the task.
-+     *
-+     * @return string The description of the task.
-+     */
-+    string getDescription() const;
-+
-+    /**
-+     * @brief Gets the priority of the task.
-+     *
-+     * @return int The priority of the task.
-+     */
-+    int getPriority() const;
-+
-+    /**
-+     * @brief Gets the type of the task.
-+     *
-+     * @return TaskType The type of the task.
-+     */
-+    TaskType getType() const;
-+
-+    /**
-+     * @brief Overloaded output stream operator for printing Task details.
-+     *
-+     * @param os The output stream.
-+     * @param task The Task object to be printed.
-+     * @return ostream& The output stream with the Task details.
-+     */
-+    friend ostream &operator<<(ostream& os, const Task& task);
-+
-+    /**
-+     * @brief Overloaded greater-than operator to compare two Task objects based on priority.
-+     *
-+     * @param lhs The left-hand side Task object.
-+     * @param rhs The right-hand side Task object.
-+     * @return true If the priority of lhs is greater than that of rhs.
-+     * @return false If the priority of lhs is not greater than that of rhs.
-+     */
-+    friend bool operator>(const Task& lhs, const Task& rhs);
-+};
-diff --git a/TaskManager.h b/TaskManager.h
-new file mode 100644
-index 0000000..f1acc89
---- /dev/null
-+++ b/TaskManager.h
-@@ -0,0 +1,75 @@
-+
-+#pragma once
-+
-+#include "Task.h"
-+
-+/**
-+ * @brief Class managing tasks assigned to multiple persons.
-+ */
-+class TaskManager {
-+private:
-+    /**
-+     * @brief Maximum number of persons the TaskManager can handle.
-+     */
-+    static const int MAX_PERSONS = 10;
-+
-+    // Note - Additional private fields and methods can be added if needed.
-+
-+public:
-+    /**
-+     * @brief Default constructor to create a TaskManager object.
-+     *
-+     * Note - you may add =default if needed.
-+     */
-+    TaskManager();
-+
-+    /**
-+     * @brief Deleted copy constructor to prevent copying of TaskManager objects.
-+     */
-+    TaskManager(const TaskManager &other) = delete;
-+
-+    /**
-+     * @brief Deleted copy assignment operator to prevent assignment of TaskManager objects.
-+     */
-+    TaskManager &operator=(const TaskManager &other) = delete;
-+
-+    /**
-+     * @brief Assigns a task to a person.
-+     *
-+     * @param personName The name of the person to whom the task will be assigned.
-+     * @param task The task to be assigned.
-+     */
-+    void assignTask(const string &personName, const Task &task);
-+
-+    /**
-+     * @brief Completes the highest priority task assigned to a person.
-+     *
-+     * @param personName The name of the person who will complete the task.
-+     */
-+    void completeTask(const string &personName);
-+
-+    /**
-+     * @brief Bumps the priority of all tasks of a specific type.
-+     *
-+     * @param type The type of tasks whose priority will be bumped.
-+     * @param priority The amount by which the priority will be increased.
-+     */
-+    void bumpPriorityByType(TaskType type, int priority);
-+
-+    /**
-+     * @brief Prints all employees and their tasks.
-+     */
-+    void printAllEmployees() const;
-+
-+    /**
-+     * @brief Prints all tasks of a specific type.
-+     *
-+     * @param type The type of tasks to be printed.
-+     */
-+    void printTasksByType(TaskType type) const;
-+
-+    /**
-+     * @brief Prints all tasks assigned to all employees.
-+     */
-+    void printAllTasks() const;
-+};
-diff --git a/main.cpp b/main.cpp
-new file mode 100644
-index 0000000..8fd68ab
---- /dev/null
-+++ b/main.cpp
-@@ -0,0 +1,531 @@
-+
-+#include <iostream>
-+#include "TaskManager.h"
-+#include "Task.h"
-+
-+using std::cout;
-+using std::endl;
-+
-+using mtm::SortedList;
-+
-+typedef bool (*testFunc)(void);
-+
-+//defines
-+
-+#define RUN_TEST(test, name)                        \
-+    do                                              \
-+    {                                               \
-+        std::cout << "Running " << name << " ... " << std::endl ; \
-+        if (test())                                 \
-+        {                                           \
-+            std::cout << "[OK]\n";                  \
-+        }                                           \
-+        else                                        \
-+        {                                           \
-+            std::cout << "[Failed]\n";              \
-+        }                                           \
-+    } while (0)
-+
-+#define ASSERT_TEST(expr)                                                                               \
-+    do                                                                                                  \
-+    {                                                                                                   \
-+        if (!(expr))                                                                                    \
-+        {                                                                                               \
-+            std::cout << "\nAssertion failed at " << __FILE__ << ":" << __LINE__ << #expr << std::endl; \
-+            return false;                                                                               \
-+        }                                                                                               \
-+    } while (0)
-+
-+
-+
-+
-+
-+// tests
-+
-+class ExceptionThrowingType
-+{
-+public:
-+    static int copy_count;
-+    static const int max_copies = 3; // Exception will be thrown on the third copy
-+    static bool throw_state;
-+
-+    ExceptionThrowingType(int value = 0) : value(value) {}
-+
-+    // Copy constructor
-+    ExceptionThrowingType(const ExceptionThrowingType &other) : value(other.value)
-+    {
-+        if ((++copy_count >= max_copies) && (throw_state))
-+        {
-+            throw std::bad_alloc();
-+        }
-+    }
-+
-+    // Assignment operator
-+    ExceptionThrowingType &operator=(const ExceptionThrowingType &other)
-+    {
-+        if (this != &other)
-+        {
-+            value = other.value;
-+            if (++copy_count >= max_copies)
-+            {
-+                throw std::bad_alloc();
-+            }
-+        }
-+        return *this;
-+    }
-+
-+    // Comparison operator
-+    bool operator>(const ExceptionThrowingType &other) const
-+    {
-+        return value > other.value;
-+    }
-+
-+    int getValue() const
-+    {
-+        return value;
-+    }
-+
-+    void zeroCounter()
-+    {
-+        this->copy_count = 0;
-+    }
-+    void changeState(bool state)
-+    {
-+        this->throw_state=state;
-+    }
-+
-+private:
-+    int value;
-+};
-+
-+int ExceptionThrowingType::copy_count = 0;
-+bool ExceptionThrowingType::throw_state = false;
-+
-+
-+bool testTaskManagerPrintTasksByType()
-+{
-+    TaskManager manager;
-+    Task task1(1, TaskType::Documentation, "Document API methods");
-+    Task task2(5, TaskType::Development, "Refactor core module");
-+    Task task3(8, TaskType::Testing, "Integration testing");
-+    Task task4(5, TaskType::General, "Weekly team meeting");
-+    Task task5(7, TaskType::Development, "Implement new feature");
-+    Task task6(3, TaskType::Documentation, "Update user guide");
-+    Task task7(-1, TaskType::Testing, "Write unit tests");
-+    Task task8(2000, TaskType::Testing, "stream");
-+    Task task9(6, TaskType::Development, "Fix bug in UI");
-+    Task task10(4, TaskType::General, "Clean up code");
-+    Task task11(2, TaskType::Documentation, "Write README");
-+    Task task12(1, TaskType::Testing, "Run system tests");
-+    Task task13(2, TaskType::Testing, "Run system tests");
-+    Task task14(1, TaskType::Testing, "Run system tests");
-+    Task task15(1, TaskType::Testing, "Run system tests");
-+    Task task16(4, TaskType::General, "Clean up code");
-+    Task task17(4, TaskType::General, "Clean up code");
-+
-+    manager.assignTask("Alice", task1);
-+    manager.assignTask("Bob", task2);
-+    manager.assignTask("Bob", Task(5, TaskType::General, "Run system tests"));
-+    manager.assignTask("Bob", Task(7, TaskType::General, "Run system tests"));
-+    manager.assignTask("Bob", Task(-1, TaskType::General, "Run system tests"));
-+    manager.assignTask("Bob", Task(200, TaskType::General, "200"));
-+    manager.assignTask("Charlixcx", task3);
-+    manager.assignTask("Dana", task4);
-+    manager.assignTask("Eve", task5);
-+    manager.assignTask("Frank", task6);
-+    manager.assignTask("Grace", task7);
-+    manager.assignTask("SOPHIE", task8);
-+    manager.assignTask("Hank", task9);
-+    manager.assignTask("Bonie", task10);
-+
-+    manager.assignTask("Alice", task1);
-+    manager.assignTask("Bob", task1);
-+
-+    manager.completeTask("Dana");
-+
-+    manager.printTasksByType(TaskType::Development);
-+    cout << endl;
-+    manager.bumpPriorityByType(TaskType::Development, 50);
-+    manager.printTasksByType(TaskType::Development);
-+    cout << endl;
-+    manager.printTasksByType(TaskType::Testing);
-+    cout << endl;
-+
-+    return true;
-+}
-+
-+bool testListBasic()
-+{
-+    // Test default constructor
-+    SortedList<int> list;
-+    if (list.length() != 0)
-+        return false;
-+
-+    // Test insert and length
-+    list.insert(5);
-+    list.insert(3);
-+    list.insert(8);
-+    if (list.length() != 3)
-+        return false;
-+
-+    // Test copy constructor
-+    SortedList<int> copy(list);
-+    if (copy.length() != 3)
-+        return false;
-+
-+    // Check copied elements
-+    auto it_copy = copy.begin();
-+    auto it_list = list.begin();
-+    for (int i = 0; i < list.length(); ++i)
-+    {
-+        if ((*it_copy != *it_list) || (&(*it_copy) == &(*it_list)))
-+            return false;
-+        ++it_copy;
-+        ++it_list;
-+    }
-+
-+    // Test assignment operator
-+    SortedList<int> another_list;
-+    another_list = list;
-+    if (another_list.length() != 3)
-+        return false;
-+
-+    // Check assigned elements
-+    it_list = list.begin();
-+    auto it_another_list = another_list.begin();
-+    for (int i = 0; i < list.length(); ++i)
-+    {
-+        if ((*it_another_list != *it_list) || (&(*it_another_list) == &(*it_list)))
-+            return false;
-+        ++it_another_list;
-+        ++it_list;
-+    }
-+
-+    // Ensure deep copy
-+    list.insert(10);
-+    if (another_list.length() != 3)
-+        return false;
-+
-+    return true;
-+}
-+
-+
-+
-+bool testListExceptions()
-+{
-+    using mtm::SortedList;
-+
-+    SortedList<int> list;
-+
-+    // Attempt to increment an iterator past the end of the list
-+    try
-+    {
-+        auto it = list.end();
-+        ++it;         // This should throw an exception
-+        return false; // If no exception is thrown, the test should fail
-+    }
-+    catch (const std::out_of_range &e)
-+    {
-+        // Exception is expected, so the test should pass
-+    }
-+
-+    // Insert some elements
-+    list.insert(5);
-+    list.insert(3);
-+    list.insert(8);
-+    list.insert(1);
-+
-+    // Attempt to increment an iterator past the end of the list after insertion
-+    try
-+    {
-+        auto it = list.begin();
-+        ++it;
-+        ++it;
-+        ++it;
-+        ++it;
-+        ++it;         // This should throw an exception
-+        return false; // If no exception is thrown, the test should fail
-+    }
-+    catch (const std::out_of_range &e)
-+    {
-+        // Exception is expected, so the test should pass
-+    }
-+
-+    // Attempt to remove using an end iterator (which should be invalid)
-+    try
-+    {
-+        auto endIt = list.end();
-+        list.remove(endIt); // This should not throw an exception but should handle gracefully
-+        // No exception expected, so no assert here
-+    }
-+    catch (...)
-+    {
-+        return false; // If any exception is thrown, the test should fail
-+    }
-+
-+    // Create an iterator and make it invalid by incrementing past the end
-+    auto it = list.begin();
-+    ++it;
-+    ++it;
-+    ++it;
-+    ++it; // Now it should be invalid (past end)
-+
-+    try
-+    {
-+        ++it;         // Incrementing further should throw an exception
-+        return false; // If no exception is thrown, the test should fail
-+    }
-+    catch (const std::out_of_range &e)
-+    {
-+        // Exception is expected, so the test should pass
-+    }
-+
-+    ////
-+
-+    // Test exception safety in copy constructor
-+    try
-+    {
-+        SortedList<int> list;
-+        list.insert(1);
-+        list.insert(2);
-+        SortedList<int> copy(list); // This should not throw
-+    }
-+    catch (...)
-+    {
-+        return false;
-+    }
-+
-+    // Test exception safety in assignment operator
-+    try
-+    {
-+        SortedList<int> list;
-+        list.insert(1);
-+        list.insert(2);
-+        SortedList<int> another_list;
-+        another_list = list; // This should not throw
-+    }
-+    catch (...)
-+    {
-+        return false;
-+    }
-+
-+    // Ensure proper memory management in case of exceptions (Mock the exception)
-+    try
-+    {
-+        SortedList<int> list;
-+        list.insert(1);
-+        list.insert(2);
-+        // Simulate exception during copy constructor
-+
-+        struct MockException : public std::exception
-+        {
-+        };
-+        throw MockException();
-+        SortedList<int> copy(list);
-+        return false; // Should not reach here
-+    }
-+    catch (const std::exception &)
-+    {
-+        // Expected behavior
-+    }
-+
-+    return true;
-+}
-+
-+bool testCopyConstructorExceptionSafety()
-+{
-+    try
-+    {
-+        ExceptionThrowingType x(1);
-+        x.zeroCounter();
-+        x.changeState(false);
-+        SortedList<ExceptionThrowingType> list;
-+        list.insert(ExceptionThrowingType(1));
-+        list.insert(ExceptionThrowingType(2));
-+
-+        // Force an exception during the copy constructor
-+        // add flag
-+        x.changeState(true);
-+        SortedList<ExceptionThrowingType> copy(list); // Should throw std::bad_alloc
-+        return false;                                 // If no exception is thrown, the test fails
-+    }
-+    catch (const std::bad_alloc &)
-+    {
-+        // Expected exception was thrown
-+    }
-+    catch (...)
-+    {
-+        return false; // Unexpected exception
-+    }
-+
-+    return true;
-+}
-+
-+
-+
-+bool testTaskManager()
-+{
-+    TaskManager tm;
-+
-+    // Create some tasks
-+    Task task1(1, TaskType::Meeting, "Discuss project goals");
-+    Task task2(2, TaskType::Development, "Implement feature X");
-+    Task task3(3, TaskType::Testing, "Test feature X");
-+    Task task4(4, TaskType::Documentation, "Write docs for feature X");
-+    Task task5(5, TaskType::Research, "Explore new tech");
-+
-+    // Assign tasks to employees
-+    tm.assignTask("Alice", task1);
-+    tm.assignTask("Bob", task2);
-+    tm.assignTask("Alice", task3);
-+    tm.assignTask("Charlie", task4);
-+    tm.assignTask("Bob", task5);
-+
-+    tm.printAllEmployees();
-+    cout << endl;
-+
-+    tm.printAllTasks();
-+    cout << endl;
-+
-+    // Complete a task and verify it no longer appears
-+    tm.completeTask("Alice");
-+
-+    tm.printAllTasks();
-+    cout << endl;
-+
-+    tm.bumpPriorityByType(TaskType::Documentation, 2);
-+
-+    tm.printTasksByType(TaskType::Documentation);
-+    cout << endl;
-+
-+    tm.printTasksByType(TaskType::Research);
-+    cout << endl;
-+
-+    return true;
-+}
-+
-+bool testTaskManagerAssignTask()
-+{
-+    TaskManager manager;
-+    Task task1(1, TaskType::Documentation, "Document API methods");
-+    Task task2(5, TaskType::Development, "Refactor core module");
-+    Task task3(8, TaskType::Testing, "Integration testing");
-+    Task task4(5, TaskType::General, "Weekly team meeting");
-+    Task task5(7, TaskType::Development, "Implement new feature");
-+    Task task6(3, TaskType::Documentation, "Update user guide");
-+    Task task7(-1, TaskType::Testing, "Write unit tests");
-+    Task task8(2000, TaskType::Testing, "stream");
-+    Task task9(6, TaskType::Development, "Fix bug in UI");
-+    Task task10(4, TaskType::General, "Clean up code");
-+    Task task11(2, TaskType::Documentation, "Write README");
-+    Task task12(1, TaskType::Testing, "Run system tests");
-+    Task task13(1, TaskType::Testing, "Run system tests");
-+    Task task14(1, TaskType::Testing, "Run system tests");
-+    Task task15(1, TaskType::Testing, "Run system tests");
-+    Task task16(4, TaskType::General, "Clean up code");
-+    Task task17(4, TaskType::General, "Clean up code");
-+
-+    manager.assignTask("Alice", task1);
-+    manager.assignTask("Bob", task2);
-+    manager.assignTask("Charlixcx", task3);
-+    manager.assignTask("Dana", task4);
-+    manager.assignTask("Eve", task5);
-+    manager.assignTask("Frank", task6);
-+    manager.assignTask("Grace", task7);
-+    manager.assignTask("SOPHIE", task8);
-+    manager.assignTask("Hank", task9);
-+    manager.assignTask("Bonie", task10);
-+
-+    try
-+    {
-+        manager.assignTask("boom", task11);
-+        return false; // should have thrown exception
-+    }
-+    catch (std::exception &e)
-+    {
-+    }
-+
-+    manager.assignTask("Bob", task12);
-+    manager.assignTask("Bob", task13);
-+    manager.assignTask("Bob", task14);
-+    manager.assignTask("Bob", task15);
-+    manager.assignTask("Bob", task16);
-+    manager.assignTask("Bob", task17);
-+
-+    // Assuming we have a way to verify task has been assigned, like a method that counts tasks
-+    return true;
-+}
-+
-+
-+// end of tests
-+
-+
-+
-+
-+
-+
-+
-+
-+#define TESTS_NAMES                          \
-+    X(testListBasic)                         \
-+    X(testListExceptions)                    \
-+    X(testTaskManager)                       \
-+    X(testCopyConstructorExceptionSafety)    \
-+    X(testTaskManagerAssignTask)             \
-+    X(testTaskManagerPrintTasksByType)
-+
-+
-+testFunc tests[] = {
-+#define X(name) name,
-+    TESTS_NAMES
-+#undef X
-+};
-+
-+const char *tests_names[] = {
-+#define X(name) #name,
-+    TESTS_NAMES
-+#undef X
-+};
-+using mtm::SortedList;
-+
-+template <typename T>
-+void printList(const mtm::SortedList<T> &list, std::ostream &os=std::cout)
-+{
-+    for (auto it = list.begin(); it != list.end(); ++it)
-+    {
-+        os << *it << " ";
-+    }
-+    os << std::endl;
-+}
-+
-+
-+int main(int argc, char **argv)
-+{
-+    int number_of_tests = sizeof(tests) / sizeof(tests[0]);
-+
-+    if (argc == 1)
-+    {
-+        for (int test_idx = 0; test_idx < number_of_tests; test_idx++)
-+        {
-+            std::cout << "Running test " << test_idx + 1 << std::endl;
-+            RUN_TEST(tests[test_idx], tests_names[test_idx]);
-+            cout << endl;
-+        }
-+        return 0;
-+    }
-+    if (argc != 2)
-+    {
-+        std::cout << "Usage: tests <test index>" << std::endl;
-+        return 0;
-+    }
-+
-+    int test_idx = strtol(argv[1], NULL, 10);
-+    if (test_idx < 1 || test_idx > number_of_tests)
-+    {
-+        std::cerr << "Invalid test index " << test_idx << std::endl;
-+        return 0;
-+    }
-+
-+    RUN_TEST(tests[test_idx - 1], tests_names[test_idx - 1]);
-+    return 0;
-+}
-diff --git a/tests/test1.expected b/tests/test1.expected
-new file mode 100644
-index 0000000..9da604f
---- /dev/null
-+++ b/tests/test1.expected
-@@ -0,0 +1,3 @@
-+Running testListBasic ... 
-+[OK]
-+
-diff --git a/tests/test2.expected b/tests/test2.expected
-new file mode 100644
-index 0000000..a1fb014
---- /dev/null
-+++ b/tests/test2.expected
-@@ -0,0 +1,3 @@
-+Running testListExceptions ... 
-+[OK]
-+
-diff --git a/tests/test3.expected b/tests/test3.expected
-new file mode 100644
-index 0000000..c6d84ca
---- /dev/null
-+++ b/tests/test3.expected
-@@ -0,0 +1,30 @@
-+Running testTaskManager ... 
-+Person: Alice
-+Task ID: 2, Priority: 3, Type: Testing, Description: Test feature X
-+Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
-+
-+Person: Bob
-+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
-+Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
-+
-+Person: Charlie
-+Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
-+
-+
-+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
-+Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
-+Task ID: 2, Priority: 3, Type: Testing, Description: Test feature X
-+Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
-+Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
-+
-+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
-+Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
-+Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
-+Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
-+
-+Task ID: 3, Priority: 6, Type: Documentation, Description: Write docs for feature X
-+
-+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
-+
-+[OK]
-+
-diff --git a/tests/test4.expected b/tests/test4.expected
-new file mode 100644
-index 0000000..a46c1c9
---- /dev/null
-+++ b/tests/test4.expected
-@@ -0,0 +1,3 @@
-+Running testCopyConstructorExceptionSafety ... 
-+[OK]
-+
-diff --git a/tests/test5.expected b/tests/test5.expected
-new file mode 100644
-index 0000000..e7db415
---- /dev/null
-+++ b/tests/test5.expected
-@@ -0,0 +1,3 @@
-+Running testTaskManagerAssignTask ... 
-+[OK]
-+
-diff --git a/tests/test6.expected b/tests/test6.expected
-new file mode 100644
-index 0000000..07fd396
---- /dev/null
-+++ b/tests/test6.expected
-@@ -0,0 +1,15 @@
-+Running testTaskManagerPrintTasksByType ... 
-+Task ID: 8, Priority: 7, Type: Development, Description: Implement new feature
-+Task ID: 12, Priority: 6, Type: Development, Description: Fix bug in UI
-+Task ID: 1, Priority: 5, Type: Development, Description: Refactor core module
-+
-+Task ID: 8, Priority: 57, Type: Development, Description: Implement new feature
-+Task ID: 12, Priority: 56, Type: Development, Description: Fix bug in UI
-+Task ID: 1, Priority: 55, Type: Development, Description: Refactor core module
-+
-+Task ID: 11, Priority: 100, Type: Testing, Description: stream
-+Task ID: 6, Priority: 8, Type: Testing, Description: Integration testing
-+Task ID: 10, Priority: 0, Type: Testing, Description: Write unit tests
-+
-+[OK]
-+
-
-commit 5bdbf99b46b6f1558a47c5533aefc209c37e23d4
-Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
-Date:   Fri Dec 20 16:57:29 2024 +0200
-
-    Update README.md
-
-diff --git a/README.md b/README.md
-index c36b592..f53e20d 100644
---- a/README.md
-+++ b/README.md
-@@ -1 +1,6 @@
--# HW3_2425A
-\ No newline at end of file
-+# HW3_2425A
-+This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
-+
-+You may find the full instructions for this assignment on the course's website.
-+
-+Good luck and have fun!
-
-commit 6c999dc9a584fbf8c3a296c357c16141db7b5abe
-Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
-Date:   Fri Dec 20 16:57:09 2024 +0200
-
-    Initial commit
-
-diff --git a/README.md b/README.md
-new file mode 100644
-index 0000000..c36b592
---- /dev/null
-+++ b/README.md
-@@ -0,0 +1 @@
-+# HW3_2425A
-\ No newline at end of file

commit b5529e127597fc0829cde7646b2a46afe2c9ea7e
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Wed Jan 8 19:00:11 2025 +0200

    add git log

diff --git a/.DS_Store b/.DS_Store
new file mode 100644
index 0000000..e50baa4
Binary files /dev/null and b/.DS_Store differ
diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 0000000..c4f774e
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,6 @@
+[submodule "TechnionMatam"]
+	path = TechnionMatam
+	url = https://github.com/PNone/TechnionMatam.git
+[submodule "MatamGenericTester"]
+	path = MatamGenericTester
+	url = https://github.com/PNone/MatamGenericTester.git
diff --git a/MatamGenericTester b/MatamGenericTester
new file mode 160000
index 0000000..f08b825
--- /dev/null
+++ b/MatamGenericTester
@@ -0,0 +1 @@
+Subproject commit f08b825b5bff2f5582d6864041294d65fd08d571
diff --git a/TaskManagerTest b/TaskManagerTest
new file mode 100755
index 0000000..232df0b
Binary files /dev/null and b/TaskManagerTest differ
diff --git a/TaskManagerTest.dSYM/Contents/Resources/DWARF/TaskManagerTest b/TaskManagerTest.dSYM/Contents/Resources/DWARF/TaskManagerTest
new file mode 100644
index 0000000..c3fb3d4
Binary files /dev/null and b/TaskManagerTest.dSYM/Contents/Resources/DWARF/TaskManagerTest differ
diff --git a/TaskManagerTest.dSYM/Contents/Resources/Relocations/x86_64/TaskManagerTest.yml b/TaskManagerTest.dSYM/Contents/Resources/Relocations/x86_64/TaskManagerTest.yml
new file mode 100644
index 0000000..1f9f7e2
--- /dev/null
+++ b/TaskManagerTest.dSYM/Contents/Resources/Relocations/x86_64/TaskManagerTest.yml
@@ -0,0 +1,391 @@
+---
+triple:          'x86_64-apple-darwin'
+binary-path:     TaskManagerTest
+relocations:
+  - { offsetInCU: 0x4798, offset: 0x4798, size: 0x8, addend: 0x0, symName: __ZNSt3__1eqB8ue170006INS_9allocatorIcEEEEbRKNS_12basic_stringIcNS_11char_traitsIcEET_EES9_, symObjAddr: 0x210, symBinAddr: 0x1000010F0, symSize: 0x110 }
+  - { offsetInCU: 0x480B, offset: 0x480B, size: 0x8, addend: 0x0, symName: __ZNSt3__14endlB8ue170006IcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_, symObjAddr: 0xBE0, symBinAddr: 0x100001AC0, symSize: 0x50 }
+  - { offsetInCU: 0x484B, offset: 0x484B, size: 0x8, addend: 0x0, symName: __ZNSt3__118__constexpr_strlenB8ue170006EPKc, symObjAddr: 0x16E0, symBinAddr: 0x1000025C0, symSize: 0x20 }
+  - { offsetInCU: 0x4877, offset: 0x4877, size: 0x8, addend: 0x0, symName: __ZNSt3__112__to_addressB8ue170006IKcEEPT_S3_, symObjAddr: 0x1950, symBinAddr: 0x100002830, symSize: 0x10 }
+  - { offsetInCU: 0x48DF, offset: 0x48DF, size: 0x8, addend: 0x0, symName: __ZNSt3__19use_facetB8ue170006INS_5ctypeIcEEEERKT_RKNS_6localeE, symObjAddr: 0x1AD0, symBinAddr: 0x1000029B0, symSize: 0x30 }
+  - { offsetInCU: 0x7E78, offset: 0x7E78, size: 0x8, addend: 0x0, symName: __ZN11TaskManagerC2Ev, symObjAddr: 0x0, symBinAddr: 0x100000EE0, symSize: 0x100 }
+  - { offsetInCU: 0x7EA7, offset: 0x7EA7, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1B8ue170006ILi0EEEPKc, symObjAddr: 0x100, symBinAddr: 0x100000FE0, symSize: 0x30 }
+  - { offsetInCU: 0x7EE4, offset: 0x7EE4, size: 0x8, addend: 0x0, symName: __ZN6PersonD1Ev, symObjAddr: 0x130, symBinAddr: 0x100001010, symSize: 0x20 }
+  - { offsetInCU: 0x7F0E, offset: 0x7F0E, size: 0x8, addend: 0x0, symName: __ZN11TaskManagerC1Ev, symObjAddr: 0x150, symBinAddr: 0x100001030, symSize: 0x20 }
+  - { offsetInCU: 0x7F38, offset: 0x7F38, size: 0x8, addend: 0x0, symName: __ZN11TaskManager15isEmployeeExistERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, symObjAddr: 0x170, symBinAddr: 0x100001050, symSize: 0xA0 }
+  - { offsetInCU: 0x7F96, offset: 0x7F96, size: 0x8, addend: 0x0, symName: __ZN11TaskManager10assignTaskERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERK4Task, symObjAddr: 0x320, symBinAddr: 0x100001200, symSize: 0x220 }
+  - { offsetInCU: 0x8015, offset: 0x8015, size: 0x8, addend: 0x0, symName: __ZN6PersonaSERKS_, symObjAddr: 0x540, symBinAddr: 0x100001420, symSize: 0x40 }
+  - { offsetInCU: 0x8044, offset: 0x8044, size: 0x8, addend: 0x0, symName: __ZN4TaskD1Ev, symObjAddr: 0x580, symBinAddr: 0x100001460, symSize: 0x20 }
+  - { offsetInCU: 0x806E, offset: 0x806E, size: 0x8, addend: 0x0, symName: __ZN11TaskManager12completeTaskERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, symObjAddr: 0x5A0, symBinAddr: 0x100001480, symSize: 0x60 }
+  - { offsetInCU: 0x80B1, offset: 0x80B1, size: 0x8, addend: 0x0, symName: __ZN11TaskManager11setPriorityERK4Task8TaskTypei, symObjAddr: 0x600, symBinAddr: 0x1000014E0, symSize: 0x120 }
+  - { offsetInCU: 0x8107, offset: 0x8107, size: 0x8, addend: 0x0, symName: __ZN4TaskC1ERKS_, symObjAddr: 0x720, symBinAddr: 0x100001600, symSize: 0x30 }
+  - { offsetInCU: 0x813A, offset: 0x813A, size: 0x8, addend: 0x0, symName: __ZN11TaskManager18bumpPriorityByTypeE8TaskTypei, symObjAddr: 0x750, symBinAddr: 0x100001630, symSize: 0x120 }
+  - { offsetInCU: 0x81EC, offset: 0x81EC, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskEC1ERKS2_, symObjAddr: 0x870, symBinAddr: 0x100001750, symSize: 0xF0 }
+  - { offsetInCU: 0x8276, offset: 0x8276, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListI4TaskE5applyIZN11TaskManager18bumpPriorityByTypeE8TaskTypeiE3$_0EES2_T_', symObjAddr: 0x960, symBinAddr: 0x100001840, symSize: 0x1D0 }
+  - { offsetInCU: 0x830F, offset: 0x830F, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskED1Ev, symObjAddr: 0xB30, symBinAddr: 0x100001A10, symSize: 0x20 }
+  - { offsetInCU: 0x8337, offset: 0x8337, size: 0x8, addend: 0x0, symName: __ZNK11TaskManager17printAllEmployeesEv, symObjAddr: 0xB50, symBinAddr: 0x100001A30, symSize: 0x70 }
+  - { offsetInCU: 0x837A, offset: 0x837A, size: 0x8, addend: 0x0, symName: __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsB8ue170006EPFRS3_S4_E, symObjAddr: 0xBC0, symBinAddr: 0x100001AA0, symSize: 0x20 }
+  - { offsetInCU: 0x83AD, offset: 0x83AD, size: 0x8, addend: 0x0, symName: __ZN11TaskManager10printTasksERKN3mtm10SortedListI4TaskEE, symObjAddr: 0xC30, symBinAddr: 0x100001B10, symSize: 0x90 }
+  - { offsetInCU: 0x8423, offset: 0x8423, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE5beginEv, symObjAddr: 0xCC0, symBinAddr: 0x100001BA0, symSize: 0x30 }
+  - { offsetInCU: 0x8448, offset: 0x8448, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE3endEv, symObjAddr: 0xCF0, symBinAddr: 0x100001BD0, symSize: 0x30 }
+  - { offsetInCU: 0x846D, offset: 0x846D, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE13ConstIteratorneERKS3_, symObjAddr: 0xD20, symBinAddr: 0x100001C00, symSize: 0x30 }
+  - { offsetInCU: 0x84A1, offset: 0x84A1, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE13ConstIteratordeEv, symObjAddr: 0xD50, symBinAddr: 0x100001C30, symSize: 0xA0 }
+  - { offsetInCU: 0x84C6, offset: 0x84C6, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE13ConstIteratorppEv, symObjAddr: 0xDF0, symBinAddr: 0x100001CD0, symSize: 0xA0 }
+  - { offsetInCU: 0x84EA, offset: 0x84EA, size: 0x8, addend: 0x0, symName: __ZNK11TaskManager13printAllTasksEv, symObjAddr: 0xE90, symBinAddr: 0x100001D70, symSize: 0x60 }
+  - { offsetInCU: 0x851E, offset: 0x851E, size: 0x8, addend: 0x0, symName: __ZNK11TaskManager20getAllEmployeesTasksEv, symObjAddr: 0xEF0, symBinAddr: 0x100001DD0, symSize: 0x200 }
+  - { offsetInCU: 0x85D2, offset: 0x85D2, size: 0x8, addend: 0x0, symName: __ZNK11TaskManager16printTasksByTypeE8TaskType, symObjAddr: 0x10F0, symBinAddr: 0x100001FD0, symSize: 0xA0 }
+  - { offsetInCU: 0x864E, offset: 0x864E, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListI4TaskE6filterIZNK11TaskManager16printTasksByTypeE8TaskTypeE3$_1EES2_T_', symObjAddr: 0x1190, symBinAddr: 0x100002070, symSize: 0x1A0 }
+  - { offsetInCU: 0x86E7, offset: 0x86E7, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskEC1Ev, symObjAddr: 0x1330, symBinAddr: 0x100002210, symSize: 0x20 }
+  - { offsetInCU: 0x8710, offset: 0x8710, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE6insertERKS1_, symObjAddr: 0x1350, symBinAddr: 0x100002230, symSize: 0x40 }
+  - { offsetInCU: 0x8743, offset: 0x8743, size: 0x8, addend: 0x0, symName: __ZN6PersonD2Ev, symObjAddr: 0x1390, symBinAddr: 0x100002270, symSize: 0x30 }
+  - { offsetInCU: 0x876E, offset: 0x876E, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskEaSERKS2_, symObjAddr: 0x13C0, symBinAddr: 0x1000022A0, symSize: 0xA0 }
+  - { offsetInCU: 0x87B1, offset: 0x87B1, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE8swapListERS2_, symObjAddr: 0x1460, symBinAddr: 0x100002340, symSize: 0x60 }
+  - { offsetInCU: 0x87E9, offset: 0x87E9, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE4swapIPNS2_14SortedListNodeEEEvRT_S7_, symObjAddr: 0x14C0, symBinAddr: 0x1000023A0, symSize: 0x40 }
+  - { offsetInCU: 0x8846, offset: 0x8846, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE4swapIiEEvRT_S5_, symObjAddr: 0x1500, symBinAddr: 0x1000023E0, symSize: 0x30 }
+  - { offsetInCU: 0x889D, offset: 0x889D, size: 0x8, addend: 0x0, symName: __ZN4TaskD2Ev, symObjAddr: 0x1530, symBinAddr: 0x100002410, symSize: 0x20 }
+  - { offsetInCU: 0x88C7, offset: 0x88C7, size: 0x8, addend: 0x0, symName: __ZN4TaskC2ERKS_, symObjAddr: 0x1550, symBinAddr: 0x100002430, symSize: 0x50 }
+  - { offsetInCU: 0x88FA, offset: 0x88FA, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B8ue170006ILi0EEEPKc, symObjAddr: 0x15A0, symBinAddr: 0x100002480, symSize: 0x50 }
+  - { offsetInCU: 0x893C, offset: 0x893C, size: 0x8, addend: 0x0, symName: __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1B8ue170006INS_18__default_init_tagESA_EEOT_OT0_, symObjAddr: 0x15F0, symBinAddr: 0x1000024D0, symSize: 0x30 }
+  - { offsetInCU: 0x8993, offset: 0x8993, size: 0x8, addend: 0x0, symName: __ZNSt3__111char_traitsIcE6lengthB8ue170006EPKc, symObjAddr: 0x1620, symBinAddr: 0x100002500, symSize: 0x30 }
+  - { offsetInCU: 0x89B5, offset: 0x89B5, size: 0x8, addend: 0x0, symName: __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2B8ue170006INS_18__default_init_tagESA_EEOT_OT0_, symObjAddr: 0x1650, symBinAddr: 0x100002530, symSize: 0x30 }
+  - { offsetInCU: 0x8A0B, offset: 0x8A0B, size: 0x8, addend: 0x0, symName: __ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EEC2B8ue170006ENS_18__default_init_tagE, symObjAddr: 0x1680, symBinAddr: 0x100002560, symSize: 0x10 }
+  - { offsetInCU: 0x8A3E, offset: 0x8A3E, size: 0x8, addend: 0x0, symName: __ZNSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EEC2B8ue170006ENS_18__default_init_tagE, symObjAddr: 0x1690, symBinAddr: 0x100002570, symSize: 0x20 }
+  - { offsetInCU: 0x8A71, offset: 0x8A71, size: 0x8, addend: 0x0, symName: __ZNSt3__19allocatorIcEC2B8ue170006Ev, symObjAddr: 0x16B0, symBinAddr: 0x100002590, symSize: 0x20 }
+  - { offsetInCU: 0x8A99, offset: 0x8A99, size: 0x8, addend: 0x0, symName: __ZNSt3__116__non_trivial_ifILb1ENS_9allocatorIcEEEC2B8ue170006Ev, symObjAddr: 0x16D0, symBinAddr: 0x1000025B0, symSize: 0x10 }
+  - { offsetInCU: 0x8AC1, offset: 0x8AC1, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskED2Ev, symObjAddr: 0x1710, symBinAddr: 0x1000025F0, symSize: 0x70 }
+  - { offsetInCU: 0x8B23, offset: 0x8B23, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNodeD1Ev, symObjAddr: 0x1780, symBinAddr: 0x100002660, symSize: 0x20 }
+  - { offsetInCU: 0x8B4B, offset: 0x8B4B, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNodeD2Ev, symObjAddr: 0x17A0, symBinAddr: 0x100002680, symSize: 0x50 }
+  - { offsetInCU: 0x8B74, offset: 0x8B74, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4sizeB8ue170006Ev, symObjAddr: 0x17F0, symBinAddr: 0x1000026D0, symSize: 0x50 }
+  - { offsetInCU: 0x8B99, offset: 0x8B99, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataB8ue170006Ev, symObjAddr: 0x1840, symBinAddr: 0x100002720, symSize: 0x30 }
+  - { offsetInCU: 0x8BBE, offset: 0x8BBE, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__is_longB8ue170006Ev, symObjAddr: 0x1870, symBinAddr: 0x100002750, symSize: 0x30 }
+  - { offsetInCU: 0x8BE3, offset: 0x8BE3, size: 0x8, addend: 0x0, symName: __ZNSt3__111char_traitsIcE7compareB8ue170006EPKcS3_m, symObjAddr: 0x18A0, symBinAddr: 0x100002780, symSize: 0x30 }
+  - { offsetInCU: 0x8C22, offset: 0x8C22, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__get_long_sizeB8ue170006Ev, symObjAddr: 0x18D0, symBinAddr: 0x1000027B0, symSize: 0x20 }
+  - { offsetInCU: 0x8C47, offset: 0x8C47, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__get_short_sizeB8ue170006Ev, symObjAddr: 0x18F0, symBinAddr: 0x1000027D0, symSize: 0x30 }
+  - { offsetInCU: 0x8C6C, offset: 0x8C6C, size: 0x8, addend: 0x0, symName: __ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstB8ue170006Ev, symObjAddr: 0x1920, symBinAddr: 0x100002800, symSize: 0x20 }
+  - { offsetInCU: 0x8C91, offset: 0x8C91, size: 0x8, addend: 0x0, symName: __ZNKSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getB8ue170006Ev, symObjAddr: 0x1940, symBinAddr: 0x100002820, symSize: 0x10 }
+  - { offsetInCU: 0x8CB6, offset: 0x8CB6, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13__get_pointerB8ue170006Ev, symObjAddr: 0x1960, symBinAddr: 0x100002840, symSize: 0x50 }
+  - { offsetInCU: 0x8CDB, offset: 0x8CDB, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__get_long_pointerB8ue170006Ev, symObjAddr: 0x19B0, symBinAddr: 0x100002890, symSize: 0x20 }
+  - { offsetInCU: 0x8D00, offset: 0x8D00, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerB8ue170006Ev, symObjAddr: 0x19D0, symBinAddr: 0x1000028B0, symSize: 0x30 }
+  - { offsetInCU: 0x8D25, offset: 0x8D25, size: 0x8, addend: 0x0, symName: __ZNSt3__114pointer_traitsIPKcE10pointer_toB8ue170006ERS1_, symObjAddr: 0x1A00, symBinAddr: 0x1000028E0, symSize: 0x10 }
+  - { offsetInCU: 0x8D51, offset: 0x8D51, size: 0x8, addend: 0x0, symName: '__ZZN11TaskManager18bumpPriorityByTypeE8TaskTypeiENK3$_0clE4Task', symObjAddr: 0x1A10, symBinAddr: 0x1000028F0, symSize: 0x40 }
+  - { offsetInCU: 0x8D89, offset: 0x8D89, size: 0x8, addend: 0x0, symName: __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5widenB8ue170006Ec, symObjAddr: 0x1A50, symBinAddr: 0x100002930, symSize: 0x80 }
+  - { offsetInCU: 0x8DF6, offset: 0x8DF6, size: 0x8, addend: 0x0, symName: __ZNKSt3__15ctypeIcE5widenB8ue170006Ec, symObjAddr: 0x1B00, symBinAddr: 0x1000029E0, symSize: 0x30 }
+  - { offsetInCU: 0x8E29, offset: 0x8E29, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE13ConstIteratorC1EPKNS2_14SortedListNodeE, symObjAddr: 0x1B30, symBinAddr: 0x100002A10, symSize: 0x30 }
+  - { offsetInCU: 0x8E60, offset: 0x8E60, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE13ConstIteratorC2EPKNS2_14SortedListNodeE, symObjAddr: 0x1B60, symBinAddr: 0x100002A40, symSize: 0x20 }
+  - { offsetInCU: 0x8E98, offset: 0x8E98, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE14SortedListNode6isTailEv, symObjAddr: 0x1B80, symBinAddr: 0x100002A60, symSize: 0x50 }
+  - { offsetInCU: 0x8EBC, offset: 0x8EBC, size: 0x8, addend: 0x0, symName: __ZNSt12out_of_rangeC1B8ue170006EPKc, symObjAddr: 0x1BD0, symBinAddr: 0x100002AB0, symSize: 0x30 }
+  - { offsetInCU: 0x8EF2, offset: 0x8EF2, size: 0x8, addend: 0x0, symName: __ZNSt12out_of_rangeC2B8ue170006EPKc, symObjAddr: 0x1C00, symBinAddr: 0x100002AE0, symSize: 0x40 }
+  - { offsetInCU: 0x8F32, offset: 0x8F32, size: 0x8, addend: 0x0, symName: '__ZZNK11TaskManager16printTasksByTypeE8TaskTypeENK3$_1clE4Task', symObjAddr: 0x1C40, symBinAddr: 0x100002B20, symSize: 0x40 }
+  - { offsetInCU: 0x8F69, offset: 0x8F69, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskEC2Ev, symObjAddr: 0x1C80, symBinAddr: 0x100002B60, symSize: 0x1A0 }
+  - { offsetInCU: 0x8FA6, offset: 0x8FA6, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNodeC1Ev, symObjAddr: 0x1E20, symBinAddr: 0x100002D00, symSize: 0x20 }
+  - { offsetInCU: 0x8FCE, offset: 0x8FCE, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNodeC2Ev, symObjAddr: 0x1E40, symBinAddr: 0x100002D20, symSize: 0x30 }
+  - { offsetInCU: 0x8FF7, offset: 0x8FF7, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNode6insertERKS1_, symObjAddr: 0x1E70, symBinAddr: 0x100002D50, symSize: 0xD0 }
+  - { offsetInCU: 0x9037, offset: 0x9037, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNodeC1ES1_, symObjAddr: 0x1F40, symBinAddr: 0x100002E20, symSize: 0x110 }
+  - { offsetInCU: 0x9084, offset: 0x9084, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNode3addEPS3_, symObjAddr: 0x2050, symBinAddr: 0x100002F30, symSize: 0x90 }
+  - { offsetInCU: 0x90B7, offset: 0x90B7, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE14SortedListNode7hasNextEv, symObjAddr: 0x20E0, symBinAddr: 0x100002FC0, symSize: 0x30 }
+  - { offsetInCU: 0x90DC, offset: 0x90DC, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNode12addImmediateEPS3_, symObjAddr: 0x2110, symBinAddr: 0x100002FF0, symSize: 0x38 }
+  - { offsetInCU: 0x297D, offset: 0xBB08, size: 0x8, addend: 0x0, symName: __ZNSt3__124__put_character_sequenceB8ue170006IcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m, symObjAddr: 0x520, symBinAddr: 0x100003520, symSize: 0x1F0 }
+  - { offsetInCU: 0x3FF2, offset: 0xD17D, size: 0x8, addend: 0x0, symName: __ZNSt3__1lsB8ue170006INS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc, symObjAddr: 0x2A0, symBinAddr: 0x1000032D0, symSize: 0x40 }
+  - { offsetInCU: 0x4038, offset: 0xD1C3, size: 0x8, addend: 0x0, symName: __ZNSt3__1lsB8ue170006IcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_ostreamIT_T0_EES9_RKNS_12basic_stringIS6_S7_T1_EE, symObjAddr: 0x2E0, symBinAddr: 0x100003310, symSize: 0x50 }
+  - { offsetInCU: 0x4090, offset: 0xD21B, size: 0x8, addend: 0x0, symName: __ZNSt3__116__pad_and_outputB8ue170006IcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_, symObjAddr: 0x760, symBinAddr: 0x100003730, symSize: 0x220 }
+  - { offsetInCU: 0x4161, offset: 0xD2EC, size: 0x8, addend: 0x0, symName: __ZNSt3__112__to_addressB8ue170006IcEEPT_S2_, symObjAddr: 0xC90, symBinAddr: 0x100003B90, symSize: 0x10 }
+  - { offsetInCU: 0x62DF, offset: 0xF46A, size: 0x8, addend: 0x0, symName: __ZN4TaskC2Ei8TaskTypeRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, symObjAddr: 0x0, symBinAddr: 0x100003030, symSize: 0x80 }
+  - { offsetInCU: 0x6333, offset: 0xF4BE, size: 0x8, addend: 0x0, symName: __ZN4TaskC1Ei8TaskTypeRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE, symObjAddr: 0x80, symBinAddr: 0x1000030B0, symSize: 0x30 }
+  - { offsetInCU: 0x6387, offset: 0xF512, size: 0x8, addend: 0x0, symName: __ZN4TaskC2EiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, symObjAddr: 0xB0, symBinAddr: 0x1000030E0, symSize: 0x30 }
+  - { offsetInCU: 0x63CD, offset: 0xF558, size: 0x8, addend: 0x0, symName: __ZN4TaskC1EiRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, symObjAddr: 0xE0, symBinAddr: 0x100003110, symSize: 0x30 }
+  - { offsetInCU: 0x6413, offset: 0xF59E, size: 0x8, addend: 0x0, symName: __ZNK4Task5getIdEv, symObjAddr: 0x110, symBinAddr: 0x100003140, symSize: 0x10 }
+  - { offsetInCU: 0x6439, offset: 0xF5C4, size: 0x8, addend: 0x0, symName: __ZN4Task5setIdEi, symObjAddr: 0x120, symBinAddr: 0x100003150, symSize: 0x20 }
+  - { offsetInCU: 0x646D, offset: 0xF5F8, size: 0x8, addend: 0x0, symName: __ZNK4Task7getTypeEv, symObjAddr: 0x140, symBinAddr: 0x100003170, symSize: 0x20 }
+  - { offsetInCU: 0x6493, offset: 0xF61E, size: 0x8, addend: 0x0, symName: __ZNK4Task14getDescriptionEv, symObjAddr: 0x160, symBinAddr: 0x100003190, symSize: 0x30 }
+  - { offsetInCU: 0x64B9, offset: 0xF644, size: 0x8, addend: 0x0, symName: __ZNK4Task11getPriorityEv, symObjAddr: 0x190, symBinAddr: 0x1000031C0, symSize: 0x20 }
+  - { offsetInCU: 0x64DF, offset: 0xF66A, size: 0x8, addend: 0x0, symName: __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK4Task, symObjAddr: 0x1B0, symBinAddr: 0x1000031E0, symSize: 0xF0 }
+  - { offsetInCU: 0x6519, offset: 0xF6A4, size: 0x8, addend: 0x0, symName: __Z16taskTypeToString8TaskType, symObjAddr: 0x330, symBinAddr: 0x100003360, symSize: 0x160 }
+  - { offsetInCU: 0x6545, offset: 0xF6D0, size: 0x8, addend: 0x0, symName: __ZgtRK4TaskS1_, symObjAddr: 0x490, symBinAddr: 0x1000034C0, symSize: 0x60 }
+  - { offsetInCU: 0x65A2, offset: 0xF72D, size: 0x8, addend: 0x0, symName: __ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbB8ue170006Ev, symObjAddr: 0x740, symBinAddr: 0x100003710, symSize: 0x20 }
+  - { offsetInCU: 0x65C7, offset: 0xF752, size: 0x8, addend: 0x0, symName: __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC1B8ue170006ERNS_13basic_ostreamIcS2_EE, symObjAddr: 0x980, symBinAddr: 0x100003950, symSize: 0x30 }
+  - { offsetInCU: 0x65FD, offset: 0xF788, size: 0x8, addend: 0x0, symName: __ZNKSt3__18ios_base5flagsB8ue170006Ev, symObjAddr: 0x9B0, symBinAddr: 0x100003980, symSize: 0x20 }
+  - { offsetInCU: 0x6624, offset: 0xF7AF, size: 0x8, addend: 0x0, symName: __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillB8ue170006Ev, symObjAddr: 0x9D0, symBinAddr: 0x1000039A0, symSize: 0x70 }
+  - { offsetInCU: 0x664B, offset: 0xF7D6, size: 0x8, addend: 0x0, symName: __ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedB8ue170006Ev, symObjAddr: 0xA40, symBinAddr: 0x100003A10, symSize: 0x20 }
+  - { offsetInCU: 0x6670, offset: 0xF7FB, size: 0x8, addend: 0x0, symName: __ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateB8ue170006Ej, symObjAddr: 0xA60, symBinAddr: 0x100003A30, symSize: 0x30 }
+  - { offsetInCU: 0x66A4, offset: 0xF82F, size: 0x8, addend: 0x0, symName: __ZNKSt3__18ios_base5widthB8ue170006Ev, symObjAddr: 0xAA0, symBinAddr: 0x100003A60, symSize: 0x20 }
+  - { offsetInCU: 0x66CB, offset: 0xF856, size: 0x8, addend: 0x0, symName: __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnB8ue170006EPKcl, symObjAddr: 0xAC0, symBinAddr: 0x100003A80, symSize: 0x30 }
+  - { offsetInCU: 0x670C, offset: 0xF897, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1B8ue170006Emc, symObjAddr: 0xAF0, symBinAddr: 0x100003AB0, symSize: 0x30 }
+  - { offsetInCU: 0x6752, offset: 0xF8DD, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataB8ue170006Ev, symObjAddr: 0xB20, symBinAddr: 0x100003AE0, symSize: 0x30 }
+  - { offsetInCU: 0x6777, offset: 0xF902, size: 0x8, addend: 0x0, symName: __ZNSt3__18ios_base5widthB8ue170006El, symObjAddr: 0xB50, symBinAddr: 0x100003B10, symSize: 0x30 }
+  - { offsetInCU: 0x67BC, offset: 0xF947, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B8ue170006Emc, symObjAddr: 0xB80, symBinAddr: 0x100003B40, symSize: 0x50 }
+  - { offsetInCU: 0x6802, offset: 0xF98D, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13__get_pointerB8ue170006Ev, symObjAddr: 0xCA0, symBinAddr: 0x100003BA0, symSize: 0x50 }
+  - { offsetInCU: 0x6827, offset: 0xF9B2, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__get_long_pointerB8ue170006Ev, symObjAddr: 0xD20, symBinAddr: 0x100003BF0, symSize: 0x20 }
+  - { offsetInCU: 0x684C, offset: 0xF9D7, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerB8ue170006Ev, symObjAddr: 0xD40, symBinAddr: 0x100003C10, symSize: 0x30 }
+  - { offsetInCU: 0x6871, offset: 0xF9FC, size: 0x8, addend: 0x0, symName: __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstB8ue170006Ev, symObjAddr: 0xDA0, symBinAddr: 0x100003C40, symSize: 0x20 }
+  - { offsetInCU: 0x6896, offset: 0xFA21, size: 0x8, addend: 0x0, symName: __ZNSt3__122__compressed_pair_elemINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repELi0ELb0EE5__getB8ue170006Ev, symObjAddr: 0xDC0, symBinAddr: 0x100003C60, symSize: 0x10 }
+  - { offsetInCU: 0x68BB, offset: 0xFA46, size: 0x8, addend: 0x0, symName: __ZNSt3__114pointer_traitsIPcE10pointer_toB8ue170006ERc, symObjAddr: 0xDD0, symBinAddr: 0x100003C70, symSize: 0x10 }
+  - { offsetInCU: 0x68DE, offset: 0xFA69, size: 0x8, addend: 0x0, symName: __ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC2B8ue170006ERNS_13basic_ostreamIcS2_EE, symObjAddr: 0xDE0, symBinAddr: 0x100003C80, symSize: 0x50 }
+  - { offsetInCU: 0x6914, offset: 0xFA9F, size: 0x8, addend: 0x0, symName: __ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufB8ue170006Ev, symObjAddr: 0xE30, symBinAddr: 0x100003CD0, symSize: 0x20 }
+  - { offsetInCU: 0x693B, offset: 0xFAC6, size: 0x8, addend: 0x0, symName: __ZNKSt3__18ios_base5rdbufB8ue170006Ev, symObjAddr: 0xE50, symBinAddr: 0x100003CF0, symSize: 0x20 }
+  - { offsetInCU: 0x6960, offset: 0xFAEB, size: 0x8, addend: 0x0, symName: __ZNSt3__111char_traitsIcE11eq_int_typeB8ue170006Eii, symObjAddr: 0xE70, symBinAddr: 0x100003D10, symSize: 0x20 }
+  - { offsetInCU: 0x6993, offset: 0xFB1E, size: 0x8, addend: 0x0, symName: __ZNSt3__111char_traitsIcE3eofB8ue170006Ev, symObjAddr: 0xE90, symBinAddr: 0x100003D30, symSize: 0x10 }
+  - { offsetInCU: 0x69A7, offset: 0xFB32, size: 0x8, addend: 0x0, symName: __ZNSt3__18ios_base8setstateB8ue170006Ej, symObjAddr: 0xF80, symBinAddr: 0x100003D40, symSize: 0x30 }
+  - { offsetInCU: 0x63D5, offset: 0x15F79, size: 0x8, addend: 0x0, symName: __ZN6PersonC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, symObjAddr: 0x0, symBinAddr: 0x100003D70, symSize: 0x60 }
+  - { offsetInCU: 0x640D, offset: 0x15FB1, size: 0x8, addend: 0x0, symName: __ZN6PersonC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE, symObjAddr: 0x80, symBinAddr: 0x100003DD0, symSize: 0x30 }
+  - { offsetInCU: 0x6445, offset: 0x15FE9, size: 0x8, addend: 0x0, symName: __ZNK6Person7getNameEv, symObjAddr: 0xB0, symBinAddr: 0x100003E00, symSize: 0x30 }
+  - { offsetInCU: 0x646B, offset: 0x1600F, size: 0x8, addend: 0x0, symName: __ZNK6Person8getTasksEv, symObjAddr: 0xE0, symBinAddr: 0x100003E30, symSize: 0x20 }
+  - { offsetInCU: 0x6491, offset: 0x16035, size: 0x8, addend: 0x0, symName: __ZN6Person8setTasksERKN3mtm10SortedListI4TaskEE, symObjAddr: 0x100, symBinAddr: 0x100003E50, symSize: 0x30 }
+  - { offsetInCU: 0x64C5, offset: 0x16069, size: 0x8, addend: 0x0, symName: __ZN6Person10assignTaskERK4Task, symObjAddr: 0x1D0, symBinAddr: 0x100003E80, symSize: 0x30 }
+  - { offsetInCU: 0x64F9, offset: 0x1609D, size: 0x8, addend: 0x0, symName: __ZN6Person12completeTaskEv, symObjAddr: 0x240, symBinAddr: 0x100003EB0, symSize: 0xE0 }
+  - { offsetInCU: 0x652D, offset: 0x160D1, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI4TaskE6lengthEv, symObjAddr: 0x320, symBinAddr: 0x100003F90, symSize: 0x10 }
+  - { offsetInCU: 0x6552, offset: 0x160F6, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE6removeERKNS2_13ConstIteratorE, symObjAddr: 0x400, symBinAddr: 0x100003FA0, symSize: 0xC0 }
+  - { offsetInCU: 0x65C1, offset: 0x16165, size: 0x8, addend: 0x0, symName: __ZNK6Person22getHighestPriorityTaskEv, symObjAddr: 0x4C0, symBinAddr: 0x100004060, symSize: 0xB0 }
+  - { offsetInCU: 0x65E7, offset: 0x1618B, size: 0x8, addend: 0x0, symName: __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK6Person, symObjAddr: 0x570, symBinAddr: 0x100004110, symSize: 0xC0 }
+  - { offsetInCU: 0x667C, offset: 0x16220, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE10deleteNodeEPNS2_14SortedListNodeE, symObjAddr: 0x11A0, symBinAddr: 0x1000041D0, symSize: 0x50 }
+  - { offsetInCU: 0x66AF, offset: 0x16253, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI4TaskE14SortedListNode10deleteNodeEv, symObjAddr: 0x11F0, symBinAddr: 0x100004220, symSize: 0x60 }
+  - { offsetInCU: 0x39, offset: 0x162ED, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingType10copy_countE, symObjAddr: 0x46050, symBinAddr: 0x100015118, symSize: 0x0 }
+  - { offsetInCU: 0x151, offset: 0x16405, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingType11throw_stateE, symObjAddr: 0x46054, symBinAddr: 0x10001511C, symSize: 0x0 }
+  - { offsetInCU: 0x17F, offset: 0x16433, size: 0x8, addend: 0x0, symName: _tests, symObjAddr: 0x109D0, symBinAddr: 0x100015000, symSize: 0x0 }
+  - { offsetInCU: 0x1B7, offset: 0x1646B, size: 0x8, addend: 0x0, symName: _tests_names, symObjAddr: 0x10A60, symBinAddr: 0x100015090, symSize: 0x0 }
+  - { offsetInCU: 0x39E8, offset: 0x19C9C, size: 0x8, addend: 0x0, symName: __ZNSt3__16copy_nB8ue170006IPKcmPcEENS_9enable_ifIXsr37__has_random_access_iterator_categoryIT_EE5valueET1_E4typeES5_T0_S6_, symObjAddr: 0xDFE0, symBinAddr: 0x100010F20, symSize: 0x40 }
+  - { offsetInCU: 0x47C1, offset: 0x1AA75, size: 0x8, addend: 0x0, symName: __ZNSt3__1neB8ue170006IcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EESB_, symObjAddr: 0x53C0, symBinAddr: 0x100009580, symSize: 0x30 }
+  - { offsetInCU: 0x4819, offset: 0x1AACD, size: 0x8, addend: 0x0, symName: __ZNSt3__1gtB8ue170006IcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EESB_, symObjAddr: 0xC0A0, symBinAddr: 0x10000FB60, symSize: 0x30 }
+  - { offsetInCU: 0x4871, offset: 0x1AB25, size: 0x8, addend: 0x0, symName: __ZNSt3__1ltB8ue170006IcNS_11char_traitsIcEENS_9allocatorIcEEEEbRKNS_12basic_stringIT_T0_T1_EESB_, symObjAddr: 0xC120, symBinAddr: 0x10000FBE0, symSize: 0x30 }
+  - { offsetInCU: 0x48C9, offset: 0x1AB7D, size: 0x8, addend: 0x0, symName: __ZNSt3__13minB8ue170006ImEERKT_S3_S3_, symObjAddr: 0xC3C0, symBinAddr: 0x10000FDD0, symSize: 0x30 }
+  - { offsetInCU: 0x490C, offset: 0x1ABC0, size: 0x8, addend: 0x0, symName: __ZNSt3__13minB8ue170006ImNS_6__lessIvvEEEERKT_S5_S5_T0_, symObjAddr: 0xC560, symBinAddr: 0x10000FE00, symSize: 0x50 }
+  - { offsetInCU: 0x49AD, offset: 0x1AC61, size: 0x8, addend: 0x0, symName: __ZNSt3__1neB8ue170006IPcEEbRKNS_11__wrap_iterIT_EES6_, symObjAddr: 0xD280, symBinAddr: 0x1000101C0, symSize: 0x30 }
+  - { offsetInCU: 0x49F0, offset: 0x1ACA4, size: 0x8, addend: 0x0, symName: __ZNSt3__1eqB8ue170006IPcEEbRKNS_11__wrap_iterIT_EES6_, symObjAddr: 0xD3C0, symBinAddr: 0x100010300, symSize: 0x40 }
+  - { offsetInCU: 0x4A33, offset: 0x1ACE7, size: 0x8, addend: 0x0, symName: __ZNSt3__1plB8ue170006IcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_, symObjAddr: 0xD660, symBinAddr: 0x1000105A0, symSize: 0x100 }
+  - { offsetInCU: 0x4CC2, offset: 0x1AF76, size: 0x8, addend: 0x0, symName: __ZNSt3__120__throw_length_errorB8ue170006EPKc, symObjAddr: 0xDD50, symBinAddr: 0x100010C90, symSize: 0x70 }
+  - { offsetInCU: 0x4CED, offset: 0x1AFA1, size: 0x8, addend: 0x0, symName: __ZNSt3__117__libcpp_allocateB8ue170006Emm, symObjAddr: 0xDEE0, symBinAddr: 0x100010E20, symSize: 0x60 }
+  - { offsetInCU: 0x4D47, offset: 0x1AFFB, size: 0x8, addend: 0x0, symName: __ZNSt3__124__is_overaligned_for_newB8ue170006Em, symObjAddr: 0xDF40, symBinAddr: 0x100010E80, symSize: 0x20 }
+  - { offsetInCU: 0x4D75, offset: 0x1B029, size: 0x8, addend: 0x0, symName: __ZNSt3__121__libcpp_operator_newB8ue170006IJmSt11align_val_tEEEPvDpT_, symObjAddr: 0xDF60, symBinAddr: 0x100010EA0, symSize: 0x30 }
+  - { offsetInCU: 0x4DC5, offset: 0x1B079, size: 0x8, addend: 0x0, symName: __ZNSt3__121__libcpp_operator_newB8ue170006IJmEEEPvDpT_, symObjAddr: 0xDF90, symBinAddr: 0x100010ED0, symSize: 0x20 }
+  - { offsetInCU: 0x4E00, offset: 0x1B0B4, size: 0x8, addend: 0x0, symName: __ZNSt3__14copyB8ue170006IPKcPcEET0_T_S5_S4_, symObjAddr: 0xE020, symBinAddr: 0x100010F60, symSize: 0x40 }
+  - { offsetInCU: 0x4E5A, offset: 0x1B10E, size: 0x8, addend: 0x0, symName: __ZNSt3__16__copyB8ue170006INS_17_ClassicAlgPolicyEPKcS3_PcEENS_4pairIT0_T2_EES6_T1_S7_, symObjAddr: 0xE060, symBinAddr: 0x100010FA0, symSize: 0x40 }
+  - { offsetInCU: 0x4EC6, offset: 0x1B17A, size: 0x8, addend: 0x0, symName: __ZNSt3__123__dispatch_copy_or_moveB8ue170006INS_17_ClassicAlgPolicyENS_11__copy_loopIS1_EENS_14__copy_trivialEPKcS6_PcEENS_4pairIT2_T4_EES9_T3_SA_, symObjAddr: 0xE0A0, symBinAddr: 0x100010FE0, symSize: 0x40 }
+  - { offsetInCU: 0x4F44, offset: 0x1B1F8, size: 0x8, addend: 0x0, symName: __ZNSt3__121__unwrap_and_dispatchB8ue170006INS_10__overloadINS_11__copy_loopINS_17_ClassicAlgPolicyEEENS_14__copy_trivialEEEPKcS8_PcLi0EEENS_4pairIT0_T2_EESB_T1_SC_, symObjAddr: 0xE0E0, symBinAddr: 0x100011020, symSize: 0xB0 }
+  - { offsetInCU: 0x4FD3, offset: 0x1B287, size: 0x8, addend: 0x0, symName: __ZNSt3__114__unwrap_rangeB8ue170006IPKcS2_EENS_4pairIT0_S4_EET_S6_, symObjAddr: 0xE190, symBinAddr: 0x1000110D0, symSize: 0x50 }
+  - { offsetInCU: 0x516A, offset: 0x1B41E, size: 0x8, addend: 0x0, symName: __ZNSt3__113__unwrap_iterB8ue170006IPcNS_18__unwrap_iter_implIS1_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES5_, symObjAddr: 0xE220, symBinAddr: 0x100011160, symSize: 0x20 }
+  - { offsetInCU: 0x51AE, offset: 0x1B462, size: 0x8, addend: 0x0, symName: __ZNSt3__19make_pairB8ue170006IPKcPcEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS5_IT0_E4typeEEEOS6_OS9_, symObjAddr: 0xE240, symBinAddr: 0x100011180, symSize: 0x30 }
+  - { offsetInCU: 0x51FD, offset: 0x1B4B1, size: 0x8, addend: 0x0, symName: __ZNSt3__114__rewrap_rangeB8ue170006IPKcS2_EET_S3_T0_, symObjAddr: 0xE270, symBinAddr: 0x1000111B0, symSize: 0x30 }
+  - { offsetInCU: 0x5249, offset: 0x1B4FD, size: 0x8, addend: 0x0, symName: __ZNSt3__113__rewrap_iterB8ue170006IPcS1_NS_18__unwrap_iter_implIS1_Lb1EEEEET_S4_T0_, symObjAddr: 0xE2A0, symBinAddr: 0x1000111E0, symSize: 0x40 }
+  - { offsetInCU: 0x529E, offset: 0x1B552, size: 0x8, addend: 0x0, symName: __ZNSt3__19make_pairB8ue170006IPKcS2_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS4_IT0_E4typeEEEOS5_OS8_, symObjAddr: 0xE2E0, symBinAddr: 0x100011220, symSize: 0x30 }
+  - { offsetInCU: 0x52ED, offset: 0x1B5A1, size: 0x8, addend: 0x0, symName: __ZNSt3__113__unwrap_iterB8ue170006IPKcNS_18__unwrap_iter_implIS2_Lb1EEELi0EEEDTclsrT0_8__unwrapclsr3stdE7declvalIT_EEEES6_, symObjAddr: 0xE310, symBinAddr: 0x100011250, symSize: 0x20 }
+  - { offsetInCU: 0x545A, offset: 0x1B70E, size: 0x8, addend: 0x0, symName: __ZNSt3__119__copy_trivial_implB8ue170006IKccEENS_4pairIPT_PT0_EES4_S4_S6_, symObjAddr: 0xE3B0, symBinAddr: 0x1000112F0, symSize: 0x70 }
+  - { offsetInCU: 0x54C2, offset: 0x1B776, size: 0x8, addend: 0x0, symName: __ZNSt3__119__constexpr_memmoveB8ue170006IcKcLi0EEEPT_S3_PT0_NS_15__element_countE, symObjAddr: 0xE420, symBinAddr: 0x100011360, symSize: 0x50 }
+  - { offsetInCU: 0x5530, offset: 0x1B7E4, size: 0x8, addend: 0x0, symName: __ZNSt3__19make_pairB8ue170006IRPKcPcEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_, symObjAddr: 0xE470, symBinAddr: 0x1000113B0, symSize: 0x30 }
+  - { offsetInCU: 0x55D3, offset: 0x1B887, size: 0x8, addend: 0x0, symName: __ZNSt3__113__rewrap_iterB8ue170006IPKcS2_NS_18__unwrap_iter_implIS2_Lb1EEEEET_S5_T0_, symObjAddr: 0xE580, symBinAddr: 0x1000114C0, symSize: 0x40 }
+  - { offsetInCU: 0x5628, offset: 0x1B8DC, size: 0x8, addend: 0x0, symName: __ZNSt3__16fill_nB8ue170006IPcmcEET_S2_T0_RKT1_, symObjAddr: 0xE640, symBinAddr: 0x100011580, symSize: 0x40 }
+  - { offsetInCU: 0x568B, offset: 0x1B93F, size: 0x8, addend: 0x0, symName: __ZNSt3__18__fill_nB8ue170006IPcmcEET_S2_T0_RKT1_, symObjAddr: 0xE680, symBinAddr: 0x1000115C0, symSize: 0x50 }
+  - { offsetInCU: 0x56EE, offset: 0x1B9A2, size: 0x8, addend: 0x0, symName: __ZNSt3__121__convert_to_integralB8ue170006Em, symObjAddr: 0xE6D0, symBinAddr: 0x100011610, symSize: 0x10 }
+  - { offsetInCU: 0x57F5, offset: 0x1BAA9, size: 0x8, addend: 0x0, symName: __ZSt28__throw_bad_array_new_lengthB8ue170006v, symObjAddr: 0xDEA0, symBinAddr: 0x100010DE0, symSize: 0x40 }
+  - { offsetInCU: 0x72CF, offset: 0x1D583, size: 0x8, addend: 0x0, symName: __Z7toupperi, symObjAddr: 0xD2D0, symBinAddr: 0x100010210, symSize: 0x20 }
+  - { offsetInCU: 0x8A01, offset: 0x1ECB5, size: 0x8, addend: 0x0, symName: __Z31testTaskManagerPrintTasksByTypev, symObjAddr: 0x0, symBinAddr: 0x100004280, symSize: 0x1440 }
+  - { offsetInCU: 0x8D9A, offset: 0x1F04E, size: 0x8, addend: 0x0, symName: __ZN11TaskManagerD1Ev, symObjAddr: 0x1500, symBinAddr: 0x1000056C0, symSize: 0x20 }
+  - { offsetInCU: 0x8DC3, offset: 0x1F077, size: 0x8, addend: 0x0, symName: __Z13testListBasicv, symObjAddr: 0x1520, symBinAddr: 0x1000056E0, symSize: 0x520 }
+  - { offsetInCU: 0x8E75, offset: 0x1F129, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiEC1Ev, symObjAddr: 0x1A40, symBinAddr: 0x100005C00, symSize: 0x20 }
+  - { offsetInCU: 0x8E9D, offset: 0x1F151, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE6lengthEv, symObjAddr: 0x1A60, symBinAddr: 0x100005C20, symSize: 0x10 }
+  - { offsetInCU: 0x8EC2, offset: 0x1F176, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE6insertERKi, symObjAddr: 0x1A70, symBinAddr: 0x100005C30, symSize: 0x40 }
+  - { offsetInCU: 0x8EF6, offset: 0x1F1AA, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiEC1ERKS1_, symObjAddr: 0x1AB0, symBinAddr: 0x100005C70, symSize: 0xF0 }
+  - { offsetInCU: 0x8F7F, offset: 0x1F233, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE5beginEv, symObjAddr: 0x1BA0, symBinAddr: 0x100005D60, symSize: 0x30 }
+  - { offsetInCU: 0x8FA4, offset: 0x1F258, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE13ConstIteratordeEv, symObjAddr: 0x1BD0, symBinAddr: 0x100005D90, symSize: 0xA0 }
+  - { offsetInCU: 0x8FC9, offset: 0x1F27D, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE13ConstIteratorppEv, symObjAddr: 0x1C70, symBinAddr: 0x100005E30, symSize: 0xA0 }
+  - { offsetInCU: 0x8FEE, offset: 0x1F2A2, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiEaSERKS1_, symObjAddr: 0x1D10, symBinAddr: 0x100005ED0, symSize: 0xA0 }
+  - { offsetInCU: 0x9031, offset: 0x1F2E5, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiED1Ev, symObjAddr: 0x1DB0, symBinAddr: 0x100005F70, symSize: 0x20 }
+  - { offsetInCU: 0x9058, offset: 0x1F30C, size: 0x8, addend: 0x0, symName: __Z18testListExceptionsv, symObjAddr: 0x1DD0, symBinAddr: 0x100005F90, symSize: 0x5D0 }
+  - { offsetInCU: 0x91BA, offset: 0x1F46E, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE3endEv, symObjAddr: 0x23A0, symBinAddr: 0x100006560, symSize: 0x30 }
+  - { offsetInCU: 0x91DF, offset: 0x1F493, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE6removeERKNS1_13ConstIteratorE, symObjAddr: 0x23D0, symBinAddr: 0x100006590, symSize: 0xC0 }
+  - { offsetInCU: 0x9253, offset: 0x1F507, size: 0x8, addend: 0x0, symName: __ZZ18testListExceptionsvEN13MockExceptionC1Ev, symObjAddr: 0x2490, symBinAddr: 0x100006650, symSize: 0x20 }
+  - { offsetInCU: 0x927F, offset: 0x1F533, size: 0x8, addend: 0x0, symName: __ZZ18testListExceptionsvEN13MockExceptionD1Ev, symObjAddr: 0x24B0, symBinAddr: 0x100006670, symSize: 0x20 }
+  - { offsetInCU: 0x92AA, offset: 0x1F55E, size: 0x8, addend: 0x0, symName: __Z34testCopyConstructorExceptionSafetyv, symObjAddr: 0x24D0, symBinAddr: 0x100006690, symSize: 0x150 }
+  - { offsetInCU: 0x930C, offset: 0x1F5C0, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingTypeC1Ei, symObjAddr: 0x2620, symBinAddr: 0x1000067E0, symSize: 0x30 }
+  - { offsetInCU: 0x9342, offset: 0x1F5F6, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingType11zeroCounterEv, symObjAddr: 0x2650, symBinAddr: 0x100006810, symSize: 0x20 }
+  - { offsetInCU: 0x9367, offset: 0x1F61B, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingType11changeStateEb, symObjAddr: 0x2670, symBinAddr: 0x100006830, symSize: 0x20 }
+  - { offsetInCU: 0x939A, offset: 0x1F64E, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeEC1Ev, symObjAddr: 0x2690, symBinAddr: 0x100006850, symSize: 0x20 }
+  - { offsetInCU: 0x93C2, offset: 0x1F676, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE6insertERKS1_, symObjAddr: 0x26B0, symBinAddr: 0x100006870, symSize: 0x40 }
+  - { offsetInCU: 0x93F6, offset: 0x1F6AA, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeEC1ERKS2_, symObjAddr: 0x26F0, symBinAddr: 0x1000068B0, symSize: 0xF0 }
+  - { offsetInCU: 0x947F, offset: 0x1F733, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeED1Ev, symObjAddr: 0x27E0, symBinAddr: 0x1000069A0, symSize: 0x20 }
+  - { offsetInCU: 0x94A6, offset: 0x1F75A, size: 0x8, addend: 0x0, symName: __Z15testTaskManagerv, symObjAddr: 0x2800, symBinAddr: 0x1000069C0, symSize: 0x6A0 }
+  - { offsetInCU: 0x9525, offset: 0x1F7D9, size: 0x8, addend: 0x0, symName: __Z25testTaskManagerAssignTaskv, symObjAddr: 0x2EA0, symBinAddr: 0x100007060, symSize: 0x11B0 }
+  - { offsetInCU: 0x9674, offset: 0x1F928, size: 0x8, addend: 0x0, symName: __Z37testAssignmentOperatorExceptionSafetyv, symObjAddr: 0x4050, symBinAddr: 0x100008210, symSize: 0x170 }
+  - { offsetInCU: 0x96D6, offset: 0x1F98A, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeEaSERKS2_, symObjAddr: 0x41C0, symBinAddr: 0x100008380, symSize: 0xA0 }
+  - { offsetInCU: 0x9718, offset: 0x1F9CC, size: 0x8, addend: 0x0, symName: __Z29testDeleteFirstElementOfEmptyv, symObjAddr: 0x4260, symBinAddr: 0x100008420, symSize: 0x120 }
+  - { offsetInCU: 0x9763, offset: 0x1FA17, size: 0x8, addend: 0x0, symName: __Z33testDuplicateElementsArePossible1v, symObjAddr: 0x4380, symBinAddr: 0x100008540, symSize: 0x680 }
+  - { offsetInCU: 0x9874, offset: 0x1FB28, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE13ConstIteratorneERKS2_, symObjAddr: 0x4A00, symBinAddr: 0x100008BC0, symSize: 0x30 }
+  - { offsetInCU: 0x98A7, offset: 0x1FB5B, size: 0x8, addend: 0x0, symName: __Z33testDuplicateElementsArePossible2v, symObjAddr: 0x4A30, symBinAddr: 0x100008BF0, symSize: 0x800 }
+  - { offsetInCU: 0x99B8, offset: 0x1FC6C, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEC1Ev, symObjAddr: 0x5230, symBinAddr: 0x1000093F0, symSize: 0x20 }
+  - { offsetInCU: 0x99E0, offset: 0x1FC94, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6lengthEv, symObjAddr: 0x5250, symBinAddr: 0x100009410, symSize: 0x10 }
+  - { offsetInCU: 0x9A05, offset: 0x1FCB9, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6insertERKS7_, symObjAddr: 0x5260, symBinAddr: 0x100009420, symSize: 0x40 }
+  - { offsetInCU: 0x9A39, offset: 0x1FCED, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEC1ERKS8_, symObjAddr: 0x52A0, symBinAddr: 0x100009460, symSize: 0xF0 }
+  - { offsetInCU: 0x9AC2, offset: 0x1FD76, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE5beginEv, symObjAddr: 0x5390, symBinAddr: 0x100009550, symSize: 0x30 }
+  - { offsetInCU: 0x9AE7, offset: 0x1FD9B, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13ConstIteratordeEv, symObjAddr: 0x53F0, symBinAddr: 0x1000095B0, symSize: 0xA0 }
+  - { offsetInCU: 0x9B0C, offset: 0x1FDC0, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13ConstIteratorppEv, symObjAddr: 0x5490, symBinAddr: 0x100009650, symSize: 0xA0 }
+  - { offsetInCU: 0x9B31, offset: 0x1FDE5, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEaSERKS8_, symObjAddr: 0x5530, symBinAddr: 0x1000096F0, symSize: 0xA0 }
+  - { offsetInCU: 0x9B74, offset: 0x1FE28, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE3endEv, symObjAddr: 0x55D0, symBinAddr: 0x100009790, symSize: 0x30 }
+  - { offsetInCU: 0x9B99, offset: 0x1FE4D, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13ConstIteratorneERKS9_, symObjAddr: 0x5600, symBinAddr: 0x1000097C0, symSize: 0x30 }
+  - { offsetInCU: 0x9BCD, offset: 0x1FE81, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEED1Ev, symObjAddr: 0x5680, symBinAddr: 0x1000097F0, symSize: 0x20 }
+  - { offsetInCU: 0x9BF4, offset: 0x1FEA8, size: 0x8, addend: 0x0, symName: __Z21testMemoryIndependentv, symObjAddr: 0x56A0, symBinAddr: 0x100009810, symSize: 0x1E0 }
+  - { offsetInCU: 0x9C32, offset: 0x1FEE6, size: 0x8, addend: 0x0, symName: __Z9printListIiEvRKN3mtm10SortedListIT_EERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEE, symObjAddr: 0x58C0, symBinAddr: 0x1000099F0, symSize: 0xA0 }
+  - { offsetInCU: 0x9C8D, offset: 0x1FF41, size: 0x8, addend: 0x0, symName: __Z28testsBumpPriorityByTypeRangev, symObjAddr: 0x5960, symBinAddr: 0x100009A90, symSize: 0x860 }
+  - { offsetInCU: 0x9CBC, offset: 0x1FF70, size: 0x8, addend: 0x0, symName: __Z33testAssignOperatorExceptionSafetyv, symObjAddr: 0x61C0, symBinAddr: 0x10000A2F0, symSize: 0x340 }
+  - { offsetInCU: 0x9D45, offset: 0x1FFF9, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE6lengthEv, symObjAddr: 0x6500, symBinAddr: 0x10000A630, symSize: 0x10 }
+  - { offsetInCU: 0x9D6A, offset: 0x2001E, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE5beginEv, symObjAddr: 0x6510, symBinAddr: 0x10000A640, symSize: 0x30 }
+  - { offsetInCU: 0x9D8F, offset: 0x20043, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE13ConstIteratordeEv, symObjAddr: 0x6540, symBinAddr: 0x10000A670, symSize: 0xA0 }
+  - { offsetInCU: 0x9DB4, offset: 0x20068, size: 0x8, addend: 0x0, symName: __ZNK21ExceptionThrowingType8getValueEv, symObjAddr: 0x65E0, symBinAddr: 0x10000A710, symSize: 0x10 }
+  - { offsetInCU: 0x9DD8, offset: 0x2008C, size: 0x8, addend: 0x0, symName: __Z20testOperatorChainingv, symObjAddr: 0x6600, symBinAddr: 0x10000A720, symSize: 0x780 }
+  - { offsetInCU: 0x9F4F, offset: 0x20203, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6filterIZ20testOperatorChainingvE3$_0EES8_T_', symObjAddr: 0x6D80, symBinAddr: 0x10000AEA0, symSize: 0x140 }
+  - { offsetInCU: 0x9FE9, offset: 0x2029D, size: 0x8, addend: 0x0, symName: __Z9printListINSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEEvRKN3mtm10SortedListIT_EERNS0_13basic_ostreamIcS3_EE, symObjAddr: 0x6EC0, symBinAddr: 0x10000AFE0, symSize: 0xA0 }
+  - { offsetInCU: 0xA045, offset: 0x202F9, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE5applyIZ20testOperatorChainingvE3$_1EES8_T_', symObjAddr: 0x6F60, symBinAddr: 0x10000B080, symSize: 0x1B0 }
+  - { offsetInCU: 0xA0DF, offset: 0x20393, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6filterIZ20testOperatorChainingvE3$_2EES8_T_', symObjAddr: 0x7110, symBinAddr: 0x10000B230, symSize: 0x140 }
+  - { offsetInCU: 0xA179, offset: 0x2042D, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE5applyIZ20testOperatorChainingvE3$_3EES8_T_', symObjAddr: 0x7250, symBinAddr: 0x10000B370, symSize: 0x1B0 }
+  - { offsetInCU: 0xA213, offset: 0x204C7, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6filterIZ20testOperatorChainingvE3$_4EES8_T_', symObjAddr: 0x7400, symBinAddr: 0x10000B520, symSize: 0x140 }
+  - { offsetInCU: 0xA2AD, offset: 0x20561, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE5applyIZ20testOperatorChainingvE3$_5EES8_T_', symObjAddr: 0x7540, symBinAddr: 0x10000B660, symSize: 0x1B0 }
+  - { offsetInCU: 0xA347, offset: 0x205FB, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE5applyIZ20testOperatorChainingvE3$_6EES8_T_', symObjAddr: 0x76F0, symBinAddr: 0x10000B810, symSize: 0x1B0 }
+  - { offsetInCU: 0xA3E1, offset: 0x20695, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE5applyIZ20testOperatorChainingvE3$_7EES8_T_', symObjAddr: 0x78A0, symBinAddr: 0x10000B9C0, symSize: 0x1B0 }
+  - { offsetInCU: 0xA47A, offset: 0x2072E, size: 0x8, addend: 0x0, symName: __Z16testCompleteTaskv, symObjAddr: 0x7A50, symBinAddr: 0x10000BB70, symSize: 0x910 }
+  - { offsetInCU: 0xA4B9, offset: 0x2076D, size: 0x8, addend: 0x0, symName: __Z27testTaskManagerPrintMethodsv, symObjAddr: 0x8360, symBinAddr: 0x10000C480, symSize: 0xC90 }
+  - { offsetInCU: 0xA4E8, offset: 0x2079C, size: 0x8, addend: 0x0, symName: __Z33testComplexAssignFilterOperationsv, symObjAddr: 0x8FF0, symBinAddr: 0x10000D110, symSize: 0xAC0 }
+  - { offsetInCU: 0xA69B, offset: 0x2094F, size: 0x8, addend: 0x0, symName: __Z21printListWithNewlinesI4TaskEvRKN3mtm10SortedListIT_EERNSt3__113basic_ostreamIcNS7_11char_traitsIcEEEE, symObjAddr: 0x9B10, symBinAddr: 0x10000DBD0, symSize: 0xA0 }
+  - { offsetInCU: 0xA6F7, offset: 0x209AB, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListI4TaskE5applyIZ33testComplexAssignFilterOperationsvE3$_8EES2_T_', symObjAddr: 0x9BB0, symBinAddr: 0x10000DC70, symSize: 0x180 }
+  - { offsetInCU: 0xA791, offset: 0x20A45, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListI4TaskE5applyIZ33testComplexAssignFilterOperationsvE3$_9EES2_T_', symObjAddr: 0x9D30, symBinAddr: 0x10000DDF0, symSize: 0x180 }
+  - { offsetInCU: 0xA82B, offset: 0x20ADF, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListI4TaskE6filterIZ33testComplexAssignFilterOperationsvE4$_10EES2_T_', symObjAddr: 0x9EB0, symBinAddr: 0x10000DF70, symSize: 0x160 }
+  - { offsetInCU: 0xA8C5, offset: 0x20B79, size: 0x8, addend: 0x0, symName: '__ZNK3mtm10SortedListI4TaskE6filterIZ33testComplexAssignFilterOperationsvE4$_11EES2_T_', symObjAddr: 0xA010, symBinAddr: 0x10000E0D0, symSize: 0x160 }
+  - { offsetInCU: 0xA95F, offset: 0x20C13, size: 0x8, addend: 0x0, symName: _main, symObjAddr: 0xA370, symBinAddr: 0x10000E230, symSize: 0x280 }
+  - { offsetInCU: 0xA9D4, offset: 0x20C88, size: 0x8, addend: 0x0, symName: __ZN11TaskManagerD2Ev, symObjAddr: 0xA610, symBinAddr: 0x10000E4B0, symSize: 0x50 }
+  - { offsetInCU: 0xA9FE, offset: 0x20CB2, size: 0x8, addend: 0x0, symName: __ZZ18testListExceptionsvEN13MockExceptionC2Ev, symObjAddr: 0xA6B0, symBinAddr: 0x10000E500, symSize: 0x40 }
+  - { offsetInCU: 0xAA2A, offset: 0x20CDE, size: 0x8, addend: 0x0, symName: __ZNSt9exceptionC2B8ue170006Ev, symObjAddr: 0xA6F0, symBinAddr: 0x10000E540, symSize: 0x20 }
+  - { offsetInCU: 0xAA52, offset: 0x20D06, size: 0x8, addend: 0x0, symName: __ZZ18testListExceptionsvEN13MockExceptionD0Ev, symObjAddr: 0xA710, symBinAddr: 0x10000E560, symSize: 0x30 }
+  - { offsetInCU: 0xAA7E, offset: 0x20D32, size: 0x8, addend: 0x0, symName: __ZZ18testListExceptionsvEN13MockExceptionD2Ev, symObjAddr: 0xA740, symBinAddr: 0x10000E590, symSize: 0x20 }
+  - { offsetInCU: 0xAAAA, offset: 0x20D5E, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingTypeC2Ei, symObjAddr: 0xA760, symBinAddr: 0x10000E5B0, symSize: 0x20 }
+  - { offsetInCU: 0xAAE5, offset: 0x20D99, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiEC2Ev, symObjAddr: 0xAAA0, symBinAddr: 0x10000E5D0, symSize: 0x1A0 }
+  - { offsetInCU: 0xAB22, offset: 0x20DD6, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNodeC1Ev, symObjAddr: 0xAC40, symBinAddr: 0x10000E770, symSize: 0x20 }
+  - { offsetInCU: 0xAB4A, offset: 0x20DFE, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNodeD1Ev, symObjAddr: 0xAC60, symBinAddr: 0x10000E790, symSize: 0x20 }
+  - { offsetInCU: 0xAB72, offset: 0x20E26, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNodeC2Ev, symObjAddr: 0xAC80, symBinAddr: 0x10000E7B0, symSize: 0x30 }
+  - { offsetInCU: 0xAB9A, offset: 0x20E4E, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNodeD2Ev, symObjAddr: 0xACB0, symBinAddr: 0x10000E7E0, symSize: 0x40 }
+  - { offsetInCU: 0xABC2, offset: 0x20E76, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiED2Ev, symObjAddr: 0xACF0, symBinAddr: 0x10000E820, symSize: 0x70 }
+  - { offsetInCU: 0xAC24, offset: 0x20ED8, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNode6insertERKi, symObjAddr: 0xAD60, symBinAddr: 0x10000E890, symSize: 0x80 }
+  - { offsetInCU: 0xAC65, offset: 0x20F19, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNodeC1Ei, symObjAddr: 0xADE0, symBinAddr: 0x10000E910, symSize: 0xE0 }
+  - { offsetInCU: 0xACB0, offset: 0x20F64, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNode3addEPS2_, symObjAddr: 0xAEC0, symBinAddr: 0x10000E9F0, symSize: 0x80 }
+  - { offsetInCU: 0xACE3, offset: 0x20F97, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE14SortedListNode7hasNextEv, symObjAddr: 0xAF40, symBinAddr: 0x10000EA70, symSize: 0x30 }
+  - { offsetInCU: 0xAD08, offset: 0x20FBC, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNode12addImmediateEPS2_, symObjAddr: 0xAF70, symBinAddr: 0x10000EAA0, symSize: 0x40 }
+  - { offsetInCU: 0xAD3B, offset: 0x20FEF, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListIiE14SortedListNode6isTailEv, symObjAddr: 0xAFB0, symBinAddr: 0x10000EAE0, symSize: 0x50 }
+  - { offsetInCU: 0xAD60, offset: 0x21014, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE13ConstIteratorC1EPKNS1_14SortedListNodeE, symObjAddr: 0xB000, symBinAddr: 0x10000EB30, symSize: 0x30 }
+  - { offsetInCU: 0xAD97, offset: 0x2104B, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE13ConstIteratorC2EPKNS1_14SortedListNodeE, symObjAddr: 0xB030, symBinAddr: 0x10000EB60, symSize: 0x20 }
+  - { offsetInCU: 0xADCE, offset: 0x21082, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE8swapListERS1_, symObjAddr: 0xB0C0, symBinAddr: 0x10000EB80, symSize: 0x60 }
+  - { offsetInCU: 0xAE06, offset: 0x210BA, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE4swapIPNS1_14SortedListNodeEEEvRT_S6_, symObjAddr: 0xB120, symBinAddr: 0x10000EBE0, symSize: 0x40 }
+  - { offsetInCU: 0xAE63, offset: 0x21117, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE4swapIiEEvRT_S4_, symObjAddr: 0xB160, symBinAddr: 0x10000EC20, symSize: 0x30 }
+  - { offsetInCU: 0xAEBB, offset: 0x2116F, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE10deleteNodeEPNS1_14SortedListNodeE, symObjAddr: 0xB190, symBinAddr: 0x10000EC50, symSize: 0x50 }
+  - { offsetInCU: 0xAEEE, offset: 0x211A2, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListIiE14SortedListNode10deleteNodeEv, symObjAddr: 0xB1E0, symBinAddr: 0x10000ECA0, symSize: 0x60 }
+  - { offsetInCU: 0xAF13, offset: 0x211C7, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeEC2Ev, symObjAddr: 0xB240, symBinAddr: 0x10000ED00, symSize: 0x1A0 }
+  - { offsetInCU: 0xAF50, offset: 0x21204, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNodeC1Ev, symObjAddr: 0xB3E0, symBinAddr: 0x10000EEA0, symSize: 0x20 }
+  - { offsetInCU: 0xAF78, offset: 0x2122C, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNodeD1Ev, symObjAddr: 0xB400, symBinAddr: 0x10000EEC0, symSize: 0x20 }
+  - { offsetInCU: 0xAFA0, offset: 0x21254, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNodeC2Ev, symObjAddr: 0xB420, symBinAddr: 0x10000EEE0, symSize: 0x30 }
+  - { offsetInCU: 0xAFC8, offset: 0x2127C, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNodeD2Ev, symObjAddr: 0xB450, symBinAddr: 0x10000EF10, symSize: 0x40 }
+  - { offsetInCU: 0xAFF0, offset: 0x212A4, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeED2Ev, symObjAddr: 0xB490, symBinAddr: 0x10000EF50, symSize: 0x70 }
+  - { offsetInCU: 0xB052, offset: 0x21306, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNode6insertERKS1_, symObjAddr: 0xB500, symBinAddr: 0x10000EFC0, symSize: 0x90 }
+  - { offsetInCU: 0xB093, offset: 0x21347, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingTypeC1ERKS_, symObjAddr: 0xB590, symBinAddr: 0x10000F050, symSize: 0x30 }
+  - { offsetInCU: 0xB0C9, offset: 0x2137D, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNodeC1ES1_, symObjAddr: 0xB5C0, symBinAddr: 0x10000F080, symSize: 0x110 }
+  - { offsetInCU: 0xB115, offset: 0x213C9, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNode3addEPS3_, symObjAddr: 0xB6D0, symBinAddr: 0x10000F190, symSize: 0x90 }
+  - { offsetInCU: 0xB148, offset: 0x213FC, size: 0x8, addend: 0x0, symName: __ZN21ExceptionThrowingTypeC2ERKS_, symObjAddr: 0xB760, symBinAddr: 0x10000F220, symSize: 0x80 }
+  - { offsetInCU: 0xB17E, offset: 0x21432, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNode7hasNextEv, symObjAddr: 0xB7E0, symBinAddr: 0x10000F2A0, symSize: 0x30 }
+  - { offsetInCU: 0xB1A3, offset: 0x21457, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNode12addImmediateEPS3_, symObjAddr: 0xB810, symBinAddr: 0x10000F2D0, symSize: 0x40 }
+  - { offsetInCU: 0xB1D6, offset: 0x2148A, size: 0x8, addend: 0x0, symName: __ZNK21ExceptionThrowingTypegtERKS_, symObjAddr: 0xB850, symBinAddr: 0x10000F310, symSize: 0x30 }
+  - { offsetInCU: 0xB209, offset: 0x214BD, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE14SortedListNode6isTailEv, symObjAddr: 0xB880, symBinAddr: 0x10000F340, symSize: 0x50 }
+  - { offsetInCU: 0xB22E, offset: 0x214E2, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE3endEv, symObjAddr: 0xB8D0, symBinAddr: 0x10000F390, symSize: 0x30 }
+  - { offsetInCU: 0xB253, offset: 0x21507, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListI21ExceptionThrowingTypeE13ConstIteratorneERKS3_, symObjAddr: 0xB900, symBinAddr: 0x10000F3C0, symSize: 0x30 }
+  - { offsetInCU: 0xB287, offset: 0x2153B, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE13ConstIteratorppEv, symObjAddr: 0xB930, symBinAddr: 0x10000F3F0, symSize: 0xA0 }
+  - { offsetInCU: 0xB2AC, offset: 0x21560, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE13ConstIteratorC1EPKNS2_14SortedListNodeE, symObjAddr: 0xB9D0, symBinAddr: 0x10000F490, symSize: 0x30 }
+  - { offsetInCU: 0xB2E3, offset: 0x21597, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE13ConstIteratorC2EPKNS2_14SortedListNodeE, symObjAddr: 0xBA00, symBinAddr: 0x10000F4C0, symSize: 0x20 }
+  - { offsetInCU: 0xB31A, offset: 0x215CE, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE8swapListERS2_, symObjAddr: 0xBA20, symBinAddr: 0x10000F4E0, symSize: 0x60 }
+  - { offsetInCU: 0xB352, offset: 0x21606, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE4swapIPNS2_14SortedListNodeEEEvRT_S7_, symObjAddr: 0xBA80, symBinAddr: 0x10000F540, symSize: 0x40 }
+  - { offsetInCU: 0xB3AA, offset: 0x2165E, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListI21ExceptionThrowingTypeE4swapIiEEvRT_S5_, symObjAddr: 0xBAC0, symBinAddr: 0x10000F580, symSize: 0x30 }
+  - { offsetInCU: 0xB402, offset: 0x216B6, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEC2Ev, symObjAddr: 0xBAF0, symBinAddr: 0x10000F5B0, symSize: 0x1A0 }
+  - { offsetInCU: 0xB43F, offset: 0x216F3, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNodeC1Ev, symObjAddr: 0xBC90, symBinAddr: 0x10000F750, symSize: 0x20 }
+  - { offsetInCU: 0xB467, offset: 0x2171B, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNodeD1Ev, symObjAddr: 0xBCB0, symBinAddr: 0x10000F770, symSize: 0x20 }
+  - { offsetInCU: 0xB48F, offset: 0x21743, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNodeC2Ev, symObjAddr: 0xBCD0, symBinAddr: 0x10000F790, symSize: 0x30 }
+  - { offsetInCU: 0xB4B7, offset: 0x2176B, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNodeD2Ev, symObjAddr: 0xBD00, symBinAddr: 0x10000F7C0, symSize: 0x50 }
+  - { offsetInCU: 0xB4DF, offset: 0x21793, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEED2Ev, symObjAddr: 0xBD50, symBinAddr: 0x10000F810, symSize: 0x70 }
+  - { offsetInCU: 0xB541, offset: 0x217F5, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNode6insertERKS7_, symObjAddr: 0xBDC0, symBinAddr: 0x10000F880, symSize: 0xD0 }
+  - { offsetInCU: 0xB582, offset: 0x21836, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNodeC1ES7_, symObjAddr: 0xBE90, symBinAddr: 0x10000F950, symSize: 0x110 }
+  - { offsetInCU: 0xB5CE, offset: 0x21882, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNode3addEPS9_, symObjAddr: 0xBFA0, symBinAddr: 0x10000FA60, symSize: 0x90 }
+  - { offsetInCU: 0xB601, offset: 0x218B5, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNode7hasNextEv, symObjAddr: 0xC030, symBinAddr: 0x10000FAF0, symSize: 0x30 }
+  - { offsetInCU: 0xB626, offset: 0x218DA, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNode12addImmediateEPS9_, symObjAddr: 0xC060, symBinAddr: 0x10000FB20, symSize: 0x40 }
+  - { offsetInCU: 0xB659, offset: 0x2190D, size: 0x8, addend: 0x0, symName: __ZNK3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE14SortedListNode6isTailEv, symObjAddr: 0xC0D0, symBinAddr: 0x10000FB90, symSize: 0x50 }
+  - { offsetInCU: 0xB67E, offset: 0x21932, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareB8ue170006ERKS5_, symObjAddr: 0xC150, symBinAddr: 0x10000FC10, symSize: 0x40 }
+  - { offsetInCU: 0xB6B4, offset: 0x21968, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareINS_17basic_string_viewIcS2_EELi0EEEiRKT_, symObjAddr: 0xC190, symBinAddr: 0x10000FC50, symSize: 0xF0 }
+  - { offsetInCU: 0xB736, offset: 0x219EA, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEcvNS_17basic_string_viewIcS2_EEB8ue170006Ev, symObjAddr: 0xC280, symBinAddr: 0x10000FD40, symSize: 0x50 }
+  - { offsetInCU: 0xB75B, offset: 0x21A0F, size: 0x8, addend: 0x0, symName: __ZNKSt3__117basic_string_viewIcNS_11char_traitsIcEEE4sizeB8ue170006Ev, symObjAddr: 0xC320, symBinAddr: 0x10000FD90, symSize: 0x20 }
+  - { offsetInCU: 0xB780, offset: 0x21A34, size: 0x8, addend: 0x0, symName: __ZNKSt3__117basic_string_viewIcNS_11char_traitsIcEEE4dataB8ue170006Ev, symObjAddr: 0xC3A0, symBinAddr: 0x10000FDB0, symSize: 0x20 }
+  - { offsetInCU: 0xB7B9, offset: 0x21A6D, size: 0x8, addend: 0x0, symName: __ZNKSt3__16__lessIvvEclB8ue170006ImmEEbRKT_RKT0_, symObjAddr: 0xC5B0, symBinAddr: 0x10000FE50, symSize: 0x30 }
+  - { offsetInCU: 0xB80C, offset: 0x21AC0, size: 0x8, addend: 0x0, symName: __ZNSt3__117basic_string_viewIcNS_11char_traitsIcEEEC1B8ue170006EPKcm, symObjAddr: 0xC5E0, symBinAddr: 0x10000FE80, symSize: 0x30 }
+  - { offsetInCU: 0xB852, offset: 0x21B06, size: 0x8, addend: 0x0, symName: __ZNSt3__117basic_string_viewIcNS_11char_traitsIcEEEC2B8ue170006EPKcm, symObjAddr: 0xC610, symBinAddr: 0x10000FEB0, symSize: 0x30 }
+  - { offsetInCU: 0xB898, offset: 0x21B4C, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13ConstIteratorC1EPKNS8_14SortedListNodeE, symObjAddr: 0xC640, symBinAddr: 0x10000FEE0, symSize: 0x30 }
+  - { offsetInCU: 0xB8CF, offset: 0x21B83, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE13ConstIteratorC2EPKNS8_14SortedListNodeE, symObjAddr: 0xC670, symBinAddr: 0x10000FF10, symSize: 0x20 }
+  - { offsetInCU: 0xB906, offset: 0x21BBA, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE8swapListERS8_, symObjAddr: 0xC7A0, symBinAddr: 0x10000FF30, symSize: 0x60 }
+  - { offsetInCU: 0xB93E, offset: 0x21BF2, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE4swapIPNS8_14SortedListNodeEEEvRT_SD_, symObjAddr: 0xC800, symBinAddr: 0x10000FF90, symSize: 0x40 }
+  - { offsetInCU: 0xB996, offset: 0x21C4A, size: 0x8, addend: 0x0, symName: __ZN3mtm10SortedListINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE4swapIiEEvRT_SB_, symObjAddr: 0xC840, symBinAddr: 0x10000FFD0, symSize: 0x30 }
+  - { offsetInCU: 0xBA16, offset: 0x21CCA, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_0clERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xD0C0, symBinAddr: 0x100010000, symSize: 0x40 }
+  - { offsetInCU: 0xBA4D, offset: 0x21D01, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEixB8ue170006Em, symObjAddr: 0xD100, symBinAddr: 0x100010040, symSize: 0x30 }
+  - { offsetInCU: 0xBA8B, offset: 0x21D3F, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_1clENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xD130, symBinAddr: 0x100010070, symSize: 0xB0 }
+  - { offsetInCU: 0xBB15, offset: 0x21DC9, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5beginB8ue170006Ev, symObjAddr: 0xD1E0, symBinAddr: 0x100010120, symSize: 0x50 }
+  - { offsetInCU: 0xBB3A, offset: 0x21DEE, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE3endB8ue170006Ev, symObjAddr: 0xD230, symBinAddr: 0x100010170, symSize: 0x50 }
+  - { offsetInCU: 0xBB5F, offset: 0x21E13, size: 0x8, addend: 0x0, symName: __ZNKSt3__111__wrap_iterIPcEdeB8ue170006Ev, symObjAddr: 0xD2B0, symBinAddr: 0x1000101F0, symSize: 0x20 }
+  - { offsetInCU: 0xBB84, offset: 0x21E38, size: 0x8, addend: 0x0, symName: __ZNSt3__111__wrap_iterIPcEppB8ue170006Ev, symObjAddr: 0xD2F0, symBinAddr: 0x100010230, symSize: 0x20 }
+  - { offsetInCU: 0xBBA9, offset: 0x21E5D, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1B8ue170006EOS5_, symObjAddr: 0xD310, symBinAddr: 0x100010250, symSize: 0x30 }
+  - { offsetInCU: 0xBBE0, offset: 0x21E94, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__make_iteratorB8ue170006EPc, symObjAddr: 0xD340, symBinAddr: 0x100010280, symSize: 0x30 }
+  - { offsetInCU: 0xBC14, offset: 0x21EC8, size: 0x8, addend: 0x0, symName: __ZNSt3__111__wrap_iterIPcEC1B8ue170006ES1_, symObjAddr: 0xD370, symBinAddr: 0x1000102B0, symSize: 0x30 }
+  - { offsetInCU: 0xBC4A, offset: 0x21EFE, size: 0x8, addend: 0x0, symName: __ZNSt3__111__wrap_iterIPcEC2B8ue170006ES1_, symObjAddr: 0xD3A0, symBinAddr: 0x1000102E0, symSize: 0x20 }
+  - { offsetInCU: 0xBC80, offset: 0x21F34, size: 0x8, addend: 0x0, symName: __ZNKSt3__111__wrap_iterIPcE4baseB8ue170006Ev, symObjAddr: 0xD400, symBinAddr: 0x100010340, symSize: 0x20 }
+  - { offsetInCU: 0xBCA5, offset: 0x21F59, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B8ue170006EOS5_, symObjAddr: 0xD420, symBinAddr: 0x100010360, symSize: 0x50 }
+  - { offsetInCU: 0xBCDC, offset: 0x21F90, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__default_initB8ue170006Ev, symObjAddr: 0xD470, symBinAddr: 0x1000103B0, symSize: 0x50 }
+  - { offsetInCU: 0xBD0B, offset: 0x21FBF, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_2clERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xD4C0, symBinAddr: 0x100010400, symSize: 0x30 }
+  - { offsetInCU: 0xBD42, offset: 0x21FF6, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6lengthB8ue170006Ev, symObjAddr: 0xD4F0, symBinAddr: 0x100010430, symSize: 0x20 }
+  - { offsetInCU: 0xBD71, offset: 0x22025, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_3clENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xD510, symBinAddr: 0x100010450, symSize: 0xB0 }
+  - { offsetInCU: 0xBE05, offset: 0x220B9, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_4clERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xD5C0, symBinAddr: 0x100010500, symSize: 0x60 }
+  - { offsetInCU: 0xBE46, offset: 0x220FA, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_5clENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xD620, symBinAddr: 0x100010560, symSize: 0x40 }
+  - { offsetInCU: 0xBE88, offset: 0x2213C, size: 0x8, addend: 0x0, symName: __ZNSt3__116allocator_traitsINS_9allocatorIcEEE37select_on_container_copy_constructionB8ue170006IS2_vvEES2_RKS2_, symObjAddr: 0xD760, symBinAddr: 0x1000106A0, symSize: 0x10 }
+  - { offsetInCU: 0xBEB9, offset: 0x2216D, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13get_allocatorB8ue170006Ev, symObjAddr: 0xD770, symBinAddr: 0x1000106B0, symSize: 0x20 }
+  - { offsetInCU: 0xBEDE, offset: 0x22192, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1B8ue170006ENS_24__uninitialized_size_tagEmRKS4_, symObjAddr: 0xD790, symBinAddr: 0x1000106D0, symSize: 0x30 }
+  - { offsetInCU: 0xBF30, offset: 0x221E4, size: 0x8, addend: 0x0, symName: __ZNSt3__111char_traitsIcE4copyB8ue170006EPcPKcm, symObjAddr: 0xD7C0, symBinAddr: 0x100010700, symSize: 0x40 }
+  - { offsetInCU: 0xBF6F, offset: 0x22223, size: 0x8, addend: 0x0, symName: __ZNSt3__111char_traitsIcE6assignB8ue170006EPcmc, symObjAddr: 0xD800, symBinAddr: 0x100010740, symSize: 0x40 }
+  - { offsetInCU: 0xBFAE, offset: 0x22262, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocB8ue170006Ev, symObjAddr: 0xD840, symBinAddr: 0x100010780, symSize: 0x20 }
+  - { offsetInCU: 0xBFD3, offset: 0x22287, size: 0x8, addend: 0x0, symName: __ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E6secondB8ue170006Ev, symObjAddr: 0xD860, symBinAddr: 0x1000107A0, symSize: 0x20 }
+  - { offsetInCU: 0xBFF8, offset: 0x222AC, size: 0x8, addend: 0x0, symName: __ZNKSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EE5__getB8ue170006Ev, symObjAddr: 0xD880, symBinAddr: 0x1000107C0, symSize: 0x10 }
+  - { offsetInCU: 0xC01D, offset: 0x222D1, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2B8ue170006ENS_24__uninitialized_size_tagEmRKS4_, symObjAddr: 0xD890, symBinAddr: 0x1000107D0, symSize: 0x110 }
+  - { offsetInCU: 0xC09D, offset: 0x22351, size: 0x8, addend: 0x0, symName: __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1B8ue170006INS_18__default_init_tagERKS5_EEOT_OT0_, symObjAddr: 0xD9A0, symBinAddr: 0x1000108E0, symSize: 0x30 }
+  - { offsetInCU: 0xC0F3, offset: 0x223A7, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE8max_sizeB8ue170006Ev, symObjAddr: 0xD9D0, symBinAddr: 0x100010910, symSize: 0xA0 }
+  - { offsetInCU: 0xC144, offset: 0x223F8, size: 0x8, addend: 0x0, symName: __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE20__throw_length_errorB8ue170006Ev, symObjAddr: 0xDA70, symBinAddr: 0x1000109B0, symSize: 0x20 }
+  - { offsetInCU: 0xC169, offset: 0x2241D, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13__fits_in_ssoB8ue170006Em, symObjAddr: 0xDA90, symBinAddr: 0x1000109D0, symSize: 0x20 }
+  - { offsetInCU: 0xC18D, offset: 0x22441, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__set_short_sizeB8ue170006Em, symObjAddr: 0xDAB0, symBinAddr: 0x1000109F0, symSize: 0x50 }
+  - { offsetInCU: 0xC1C1, offset: 0x22475, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE11__recommendB8ue170006Em, symObjAddr: 0xDB00, symBinAddr: 0x100010A40, symSize: 0x70 }
+  - { offsetInCU: 0xC1F4, offset: 0x224A8, size: 0x8, addend: 0x0, symName: __ZNSt3__116allocator_traitsINS_9allocatorIcEEE8allocateB8ue170006ERS2_m, symObjAddr: 0xDB70, symBinAddr: 0x100010AB0, symSize: 0x30 }
+  - { offsetInCU: 0xC227, offset: 0x224DB, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7__allocB8ue170006Ev, symObjAddr: 0xDBA0, symBinAddr: 0x100010AE0, symSize: 0x20 }
+  - { offsetInCU: 0xC24C, offset: 0x22500, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE16__begin_lifetimeB8ue170006EPcm, symObjAddr: 0xDBC0, symBinAddr: 0x100010B00, symSize: 0x10 }
+  - { offsetInCU: 0xC27F, offset: 0x22533, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE14__set_long_capB8ue170006Em, symObjAddr: 0xDBD0, symBinAddr: 0x100010B10, symSize: 0x70 }
+  - { offsetInCU: 0xC2B3, offset: 0x22567, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__set_long_pointerB8ue170006EPc, symObjAddr: 0xDC40, symBinAddr: 0x100010B80, symSize: 0x30 }
+  - { offsetInCU: 0xC2E7, offset: 0x2259B, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE15__set_long_sizeB8ue170006Em, symObjAddr: 0xDC70, symBinAddr: 0x100010BB0, symSize: 0x30 }
+  - { offsetInCU: 0xC31B, offset: 0x225CF, size: 0x8, addend: 0x0, symName: __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC2B8ue170006INS_18__default_init_tagERKS5_EEOT_OT0_, symObjAddr: 0xDCA0, symBinAddr: 0x100010BE0, symSize: 0x40 }
+  - { offsetInCU: 0xC371, offset: 0x22625, size: 0x8, addend: 0x0, symName: __ZNSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EEC2B8ue170006IRKS2_vEEOT_, symObjAddr: 0xDCE0, symBinAddr: 0x100010C20, symSize: 0x10 }
+  - { offsetInCU: 0xC3B2, offset: 0x22666, size: 0x8, addend: 0x0, symName: __ZNSt3__116allocator_traitsINS_9allocatorIcEEE8max_sizeB8ue170006IS2_vEEmRKS2_, symObjAddr: 0xDCF0, symBinAddr: 0x100010C30, symSize: 0x20 }
+  - { offsetInCU: 0xC3E1, offset: 0x22695, size: 0x8, addend: 0x0, symName: __ZNSt3__114numeric_limitsImE3maxB8ue170006Ev, symObjAddr: 0xDD10, symBinAddr: 0x100010C50, symSize: 0x10 }
+  - { offsetInCU: 0xC3F5, offset: 0x226A9, size: 0x8, addend: 0x0, symName: __ZNKSt3__19allocatorIcE8max_sizeB8ue170006Ev, symObjAddr: 0xDD20, symBinAddr: 0x100010C60, symSize: 0x20 }
+  - { offsetInCU: 0xC41A, offset: 0x226CE, size: 0x8, addend: 0x0, symName: __ZNSt3__123__libcpp_numeric_limitsImLb1EE3maxB8ue170006Ev, symObjAddr: 0xDD40, symBinAddr: 0x100010C80, symSize: 0x10 }
+  - { offsetInCU: 0xC42E, offset: 0x226E2, size: 0x8, addend: 0x0, symName: __ZNSt12length_errorC1B8ue170006EPKc, symObjAddr: 0xDDC0, symBinAddr: 0x100010D00, symSize: 0x30 }
+  - { offsetInCU: 0xC464, offset: 0x22718, size: 0x8, addend: 0x0, symName: __ZNSt12length_errorC2B8ue170006EPKc, symObjAddr: 0xDDF0, symBinAddr: 0x100010D30, symSize: 0x40 }
+  - { offsetInCU: 0xC49A, offset: 0x2274E, size: 0x8, addend: 0x0, symName: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE10__align_itB8ue170006ILm16EEEmm, symObjAddr: 0xDE30, symBinAddr: 0x100010D70, symSize: 0x20 }
+  - { offsetInCU: 0xC4C8, offset: 0x2277C, size: 0x8, addend: 0x0, symName: __ZNSt3__19allocatorIcE8allocateB8ue170006Em, symObjAddr: 0xDE50, symBinAddr: 0x100010D90, symSize: 0x50 }
+  - { offsetInCU: 0xC4FB, offset: 0x227AF, size: 0x8, addend: 0x0, symName: __ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E6secondB8ue170006Ev, symObjAddr: 0xDFB0, symBinAddr: 0x100010EF0, symSize: 0x20 }
+  - { offsetInCU: 0xC520, offset: 0x227D4, size: 0x8, addend: 0x0, symName: __ZNSt3__122__compressed_pair_elemINS_9allocatorIcEELi1ELb1EE5__getB8ue170006Ev, symObjAddr: 0xDFD0, symBinAddr: 0x100010F10, symSize: 0x10 }
+  - { offsetInCU: 0xC568, offset: 0x2281C, size: 0x8, addend: 0x0, symName: __ZNKSt3__114__copy_trivialclB8ue170006IKccLi0EEENS_4pairIPT_PT0_EES5_S5_S7_, symObjAddr: 0xE1E0, symBinAddr: 0x100011120, symSize: 0x40 }
+  - { offsetInCU: 0xC5ED, offset: 0x228A1, size: 0x8, addend: 0x0, symName: __ZNSt3__14pairIPKcS2_EC1B8ue170006IS2_S2_LPv0EEEOT_OT0_, symObjAddr: 0xE330, symBinAddr: 0x100011270, symSize: 0x30 }
+  - { offsetInCU: 0xC64A, offset: 0x228FE, size: 0x8, addend: 0x0, symName: __ZNSt3__14pairIPKcS2_EC2B8ue170006IS2_S2_LPv0EEEOT_OT0_, symObjAddr: 0xE360, symBinAddr: 0x1000112A0, symSize: 0x30 }
+  - { offsetInCU: 0xC6A7, offset: 0x2295B, size: 0x8, addend: 0x0, symName: __ZNSt3__118__unwrap_iter_implIPKcLb1EE8__unwrapB8ue170006ES2_, symObjAddr: 0xE390, symBinAddr: 0x1000112D0, symSize: 0x20 }
+  - { offsetInCU: 0xC6D4, offset: 0x22988, size: 0x8, addend: 0x0, symName: __ZNSt3__14pairIPKcPcEC1B8ue170006IRS2_S3_LPv0EEEOT_OT0_, symObjAddr: 0xE4A0, symBinAddr: 0x1000113E0, symSize: 0x30 }
+  - { offsetInCU: 0xC731, offset: 0x229E5, size: 0x8, addend: 0x0, symName: __ZNSt3__14pairIPKcPcEC2B8ue170006IRS2_S3_LPv0EEEOT_OT0_, symObjAddr: 0xE4D0, symBinAddr: 0x100011410, symSize: 0x30 }
+  - { offsetInCU: 0xC78E, offset: 0x22A42, size: 0x8, addend: 0x0, symName: __ZNSt3__118__unwrap_iter_implIPcLb1EE8__unwrapB8ue170006ES1_, symObjAddr: 0xE500, symBinAddr: 0x100011440, symSize: 0x20 }
+  - { offsetInCU: 0xC7B1, offset: 0x22A65, size: 0x8, addend: 0x0, symName: __ZNSt3__14pairIPKcPcEC1B8ue170006IS2_S3_LPv0EEEOT_OT0_, symObjAddr: 0xE520, symBinAddr: 0x100011460, symSize: 0x30 }
+  - { offsetInCU: 0xC80E, offset: 0x22AC2, size: 0x8, addend: 0x0, symName: __ZNSt3__14pairIPKcPcEC2B8ue170006IS2_S3_LPv0EEEOT_OT0_, symObjAddr: 0xE550, symBinAddr: 0x100011490, symSize: 0x30 }
+  - { offsetInCU: 0xC86B, offset: 0x22B1F, size: 0x8, addend: 0x0, symName: __ZNSt3__118__unwrap_iter_implIPKcLb1EE8__rewrapB8ue170006ES2_S2_, symObjAddr: 0xE5C0, symBinAddr: 0x100011500, symSize: 0x40 }
+  - { offsetInCU: 0xC89C, offset: 0x22B50, size: 0x8, addend: 0x0, symName: __ZNSt3__118__unwrap_iter_implIPcLb1EE8__rewrapB8ue170006ES1_S1_, symObjAddr: 0xE600, symBinAddr: 0x100011540, symSize: 0x40 }
+  - { offsetInCU: 0xC8D7, offset: 0x22B8B, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_6clENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xE6E0, symBinAddr: 0x100011620, symSize: 0x40 }
+  - { offsetInCU: 0xC919, offset: 0x22BCD, size: 0x8, addend: 0x0, symName: '__ZZ20testOperatorChainingvENK3$_7clENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE', symObjAddr: 0xE720, symBinAddr: 0x100011660, symSize: 0x40 }
+  - { offsetInCU: 0xC95B, offset: 0x22C0F, size: 0x8, addend: 0x0, symName: '__ZZ33testComplexAssignFilterOperationsvENK3$_8clERK4Task', symObjAddr: 0xED00, symBinAddr: 0x1000116A0, symSize: 0x120 }
+  - { offsetInCU: 0xC9AC, offset: 0x22C60, size: 0x8, addend: 0x0, symName: '__ZZ33testComplexAssignFilterOperationsvENK3$_9clERK4Task', symObjAddr: 0xEE20, symBinAddr: 0x1000117C0, symSize: 0x120 }
+  - { offsetInCU: 0xC9FD, offset: 0x22CB1, size: 0x8, addend: 0x0, symName: '__ZZ33testComplexAssignFilterOperationsvENK4$_10clERK4Task', symObjAddr: 0xEF40, symBinAddr: 0x1000118E0, symSize: 0x50 }
+  - { offsetInCU: 0xCA3E, offset: 0x22CF2, size: 0x8, addend: 0x0, symName: '__ZZ33testComplexAssignFilterOperationsvENK4$_11clERK4Task', symObjAddr: 0xEF90, symBinAddr: 0x100011930, symSize: 0x30 }
+...
diff --git a/TechnionMatam b/TechnionMatam
new file mode 160000
index 0000000..b2001c1
--- /dev/null
+++ b/TechnionMatam
@@ -0,0 +1 @@
+Subproject commit b2001c1cf96e828dfe1b56bda09c5118af9f025d
diff --git a/cmake-build-debug/.ninja_deps b/cmake-build-debug/.ninja_deps
new file mode 100644
index 0000000..0ce818c
Binary files /dev/null and b/cmake-build-debug/.ninja_deps differ
diff --git a/cmake-build-debug/.ninja_log b/cmake-build-debug/.ninja_log
new file mode 100644
index 0000000..5afc169
--- /dev/null
+++ b/cmake-build-debug/.ninja_log
@@ -0,0 +1,55 @@
+# ninja log v6
+4	771	1736340350984697966	CMakeFiles/Matam_HW3.dir/Task.cpp.o	fb18a678fc5e848a
+8	900	1736340437621339212	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+8	902	1736340437621877948	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+7	937	1736340437620706762	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+937	1153	1736340438550344788	Matam_HW3	b60637dbdf0ffe88
+9	865	1736340536041522570	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+10	867	1736340536041805813	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+9	900	1736340536041079103	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+900	964	1736340536932647973	Matam_HW3	b60637dbdf0ffe88
+9	1073	1736340881673019547	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+10	1075	1736340881673503004	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+8	1111	1736340881672242629	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1111	1171	1736340882774453021	Matam_HW3	b60637dbdf0ffe88
+10	1108	1736340993270312398	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+9	1008	1736341013173049640	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+9	1010	1736341013173424017	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+8	1046	1736341013172424068	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1047	1110	1736341014211143857	Matam_HW3	b60637dbdf0ffe88
+11	862	1736341437090502202	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+11	863	1736341437090812009	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+10	897	1736341437089992108	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+897	960	1736341437977438094	Matam_HW3	b60637dbdf0ffe88
+10	1076	1736341542619976460	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+1077	1146	1736341543687200693	Matam_HW3	b60637dbdf0ffe88
+11	1147	1736341641118385959	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+1147	1213	1736341642254344431	Matam_HW3	b60637dbdf0ffe88
+10	1074	1736341718523221570	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+1074	1135	1736341719587355533	Matam_HW3	b60637dbdf0ffe88
+10	1074	1736342259081946679	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+11	1075	1736342259082202040	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+10	1109	1736342259081511511	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1109	1175	1736342260180527914	Matam_HW3	b60637dbdf0ffe88
+9	850	1736342301735417680	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+10	852	1736342301736405750	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+8	885	1736342301734158583	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+885	957	1736342302611576700	Matam_HW3	b60637dbdf0ffe88
+14	1211	1736342404630192177	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+15	1213	1736342404630871470	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+13	1251	1736342404629359332	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1251	1315	1736342405867309627	Matam_HW3	b60637dbdf0ffe88
+16	2201	1736354823871518763	CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o	d2a5efdae892239e
+15	2203	1736354823871152878	CMakeFiles/Matam_HW3.dir/Person.cpp.o	58d3627002bc9b5b
+14	2218	1736354823870170786	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+2218	2503	1736354826074173014	Matam_HW3	b60637dbdf0ffe88
+15	1797	1736354924911729539	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1798	1889	1736354926693891633	Matam_HW3	b60637dbdf0ffe88
+12	1647	1736355018152279223	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1647	1739	1736355019786821870	Matam_HW3	b60637dbdf0ffe88
+16	1270	1736355035426966247	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1271	1349	1736355036681306682	Matam_HW3	b60637dbdf0ffe88
+13	1458	1736355087734906303	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1459	1546	1736355089181062622	Matam_HW3	b60637dbdf0ffe88
+14	1591	1736355241753627491	CMakeFiles/Matam_HW3.dir/main.cpp.o	c74f2a77cf1341de
+1591	1680	1736355243331358581	Matam_HW3	b60637dbdf0ffe88
diff --git a/cmake-build-debug/CMakeFiles/Matam_HW3.dir/Person.cpp.o b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/Person.cpp.o
new file mode 100644
index 0000000..787c6c2
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/Person.cpp.o differ
diff --git a/cmake-build-debug/CMakeFiles/Matam_HW3.dir/Task.cpp.o b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/Task.cpp.o
new file mode 100644
index 0000000..48e60c5
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/Task.cpp.o differ
diff --git a/cmake-build-debug/CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o
new file mode 100644
index 0000000..0d12522
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/TaskManager.cpp.o differ
diff --git a/cmake-build-debug/CMakeFiles/Matam_HW3.dir/main.cpp.o b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/main.cpp.o
new file mode 100644
index 0000000..ccd74c7
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/Matam_HW3.dir/main.cpp.o differ
diff --git a/cmake-build-debug/Matam_HW3 b/cmake-build-debug/Matam_HW3
new file mode 100755
index 0000000..5dceeab
Binary files /dev/null and b/cmake-build-debug/Matam_HW3 differ
diff --git a/log.txt b/log.txt
new file mode 100644
index 0000000..09ef530
--- /dev/null
+++ b/log.txt
@@ -0,0 +1,15347 @@
+commit ff3a294360fd41d008fc3624017f2da043c808de
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Wed Jan 8 18:20:02 2025 +0200
+
+    verify push
+
+diff --git a/SortedList.h b/SortedList.h
+index cd01502..e2bf52f 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -77,6 +77,7 @@ namespace mtm {
+             }
+ 
+         public:
++
+             /**
+              * @brief Destructor for the SortedListNode class. Releases all allocated resources.
+              */
+
+commit 9407399fdc8d09e96348b7faa11e1df6d099a1a4
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Wed Jan 8 16:20:40 2025 +0200
+
+    reduce unused code
+
+diff --git a/SortedList.h b/SortedList.h
+index 86a257d..cd01502 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -9,7 +9,6 @@ namespace mtm {
+     template <typename T>
+     class SortedList {
+         class SortedListNode {
+-            /* Inner class, part of implementation so no documentation is provided. */
+             friend class SortedList<T>;
+             SortedListNode* prev;
+             SortedListNode* next;
+@@ -25,7 +24,7 @@ namespace mtm {
+              *
+              * @param data The data to store in the node.
+              */
+-            SortedListNode(T data): SortedListNode() { //todo ask regev
++            SortedListNode(T data): SortedListNode() {
+                 try{
+                     this->data = new T(data);
+                 } catch (std::bad_alloc& e) {
+@@ -203,7 +202,7 @@ namespace mtm {
+          * @param address2 Address of the second swapped value.
+          */
+         template <typename V> 
+-        void swap(V& address1, V& address2) { //todo ask regev
++        void swap(V& address1, V& address2) {
+             V temp = address1;
+             address1 = address2;
+             address2 = temp;
+@@ -244,7 +243,7 @@ namespace mtm {
+         /**
+          * @brief Constructor for the SortedList class. Initializes an empty sorted list.
+          */
+-        SortedList() : listLength(0){
++        SortedList() : listLength(0), head(nullptr), tail(nullptr){
+             try {
+                 this->head = new SortedListNode();
+                 this->tail = new SortedListNode();
+@@ -264,11 +263,7 @@ namespace mtm {
+          */
+         SortedList(const SortedList<T>& other): SortedList<T>(){
+             for(const T& currentData : other) {
+-                try{
+-                    this->insert(currentData);
+-                } catch (std::bad_alloc& e) {
+-                    throw;
+-                }
++                this->insert(currentData);
+             }
+         }
+ 
+
+commit 0133683bb96c2e0e81c2340ad8cd611d90fcff05
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Wed Jan 8 15:11:43 2025 +0200
+
+    reduce unused code
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 725719f..f61224c 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -23,14 +23,9 @@ void TaskManager::assignTask(const string &personName, const Task &task){
+         currentEmployee = numOfEmployees;
+         employees[numOfEmployees++] = newEmployee;
+     }
+-    try{
+-        Task newTask(task.getPriority(), task.getType(), task.getDescription());
+-        newTask.setId(idCounter++);
+-        employees[currentEmployee].assignTask(newTask);
+-    }
+-    catch (std::bad_alloc& e){
+-        throw;
+-    }
++    Task newTask(task.getPriority(), task.getType(), task.getDescription());
++    newTask.setId(idCounter++);
++    employees[currentEmployee].assignTask(newTask);
+ }
+ 
+ void TaskManager::completeTask(const string &personName){
+@@ -38,14 +33,7 @@ void TaskManager::completeTask(const string &personName){
+     if(currentEmployee == NOT_FOUND){
+        return;
+     }
+-    try
+-    {
+-        employees[currentEmployee].completeTask();
+-    }
+-    catch (const std::runtime_error& e)
+-    {
+-        throw;
+-    }
++    employees[currentEmployee].completeTask();
+ }
+ 
+ const Task TaskManager::setPriority(const Task& tasks, TaskType type, int priority){
+@@ -63,13 +51,8 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+         SortedList<Task> oldTasks = this->employees[i].getTasks();
+-        try{
+-            SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
+-             this->employees[i].setTasks(newTasks);
+-        }
+-        catch (std::bad_alloc& e){
+-            throw;
+-        } 
++        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
++        this->employees[i].setTasks(newTasks);
+     }
+ 
+ }
+@@ -91,14 +74,8 @@ void TaskManager::printAllTasks() const{
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+-    try{
+-        SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+-        printTasks(tasksByType);
+-    }
+-    catch (std::bad_alloc& e){
+-        throw;
+-    }
+-    
++    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
++    printTasks(tasksByType);
+ }
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+     SortedList<Task> allTasks;
+
+commit 79928531b1e042b4ca1f3f3908e0671c9f4df402
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Wed Jan 8 15:00:30 2025 +0200
+
+    add documentation for SortedList.h
+
+diff --git a/SortedList.h b/SortedList.h
+index b5365d9..86a257d 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -15,9 +15,17 @@ namespace mtm {
+             SortedListNode* next;
+             T* data;
+ 
++            /**
++             * @brief Constructs an empty node for the sorted list.
++             */
+             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+ 
+-            SortedListNode(T data): SortedListNode() {
++            /**
++             * @brief Constructs a node with the given data.
++             *
++             * @param data The data to store in the node.
++             */
++            SortedListNode(T data): SortedListNode() { //todo ask regev
+                 try{
+                     this->data = new T(data);
+                 } catch (std::bad_alloc& e) {
+@@ -26,6 +34,9 @@ namespace mtm {
+                 }
+             }
+ 
++            /**
++             * @brief Deletes the current node and adjusts its neighbors accordingly.
++             */
+             void deleteNode() {
+                 this->prev->next = this->next;
+                 this->next->prev = this->prev;
+@@ -34,6 +45,11 @@ namespace mtm {
+                 delete this;
+             }
+ 
++            /**
++             * @brief Inserts a new node immediately after the current node.
++             *
++             * @param newNode The node to insert.
++             */
+             void addImmediate(SortedListNode* newNode) {
+                 this->next->prev = newNode;
+                 newNode->next = this->next;
+@@ -41,6 +57,11 @@ namespace mtm {
+                 newNode->prev = this;
+             }
+ 
++            /**
++             * @brief Inserts a new node into the sorted list, maintaining the order.
++             *
++             * @param newNode The node to insert.
++             */
+             void add(SortedListNode* newNode) {
+                 //if we arrived at the end of the chain
+                 if (!this->hasNext()) {
+@@ -57,48 +78,96 @@ namespace mtm {
+             }
+ 
+         public:
+-
++            /**
++             * @brief Destructor for the SortedListNode class. Releases all allocated resources.
++             */
+             ~SortedListNode() {
+                 this->prev = nullptr;
+                 this->next = nullptr;
+                 delete this->data;
+             }
+ 
++            /**
++             * @brief Checks if the node is the tail of the list.
++             *
++             * @return true If the node is the tail.
++             * @return false Otherwise.
++             */
+             inline bool isTail() const {
+                 return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+             }
+ 
++            /**
++             * @brief Checks if the node is the head of the list.
++             *
++             * @return true If the node is the head.
++             * @return false Otherwise.
++             */
+             inline bool isHead() const {
+                 return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+             }
+ 
++            /**
++             * @brief Checks if the node has a valid next node.
++             *
++             * @return true If there is a next node.
++             * @return false Otherwise.
++             */
+             inline bool hasNext()   const {
+                 return !(this->next->isTail());
+             }
+ 
++            /**
++             * @brief Inserts a new element into the sorted list starting from this node.
++             *
++             * @param data The element to insert.
++             */
+             void insert(const T& data) {
+-                try{
+-                     SortedListNode* newNode = new SortedListNode(data);
+-                    this->add(newNode);
+-                }
+-                catch (std::bad_alloc& e) {
+-                    throw;
+-                }
++                SortedListNode* newNode = new SortedListNode(data);
++                this->add(newNode);
+             }
+ 
+-            //FIXME CORRECT FOR SYNTAX
++            /**
++             * @brief Equality comparison operator.
++             *
++             * @param other The node to compare against.
++             * @return true If the nodes are equal.
++             * @return false Otherwise.
++             */
+             bool operator==(SortedListNode* other) const {
+                 return (this->data == other->data);
+             }
+ 
++            /**
++             * @brief Inequality comparison operator.
++             *
++             * @param other The node to compare against.
++             * @return true If the nodes are not equal.
++             * @return false Otherwise.
++             */
+             bool operator!=(SortedListNode* other) const {
+                 return !(*this == *other);
+             }
+ 
++            /**
++             * @brief Greater-than comparison operator.
++             *
++             * @param other The node to compare against.
++             * @return true If this node is greater than the other.
++             * @return false Otherwise.
++             */
+             bool operator>(SortedListNode* other) const {
+                 return (this->data > other->data);
+             }
+ 
++            /**
++             * @brief Less-than comparison operator.
++             *
++             * @param lhs The left node.
++             * @param rhs The right node.
++             * @return true if lhs > rhs.
++             * @return false Otherwise.
++             */
+             friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
+                 if (rhs.isTail()) {
+                     return true;
+@@ -106,19 +175,6 @@ namespace mtm {
+                 return (lhs.data > rhs.data);
+             }
+ 
+-            bool operator<(SortedListNode* other) const {
+-                bool equal = *this == *other;
+-                bool greater = *this > *other;
+-                return (!equal) && (!greater);
+-            }
+-
+-            bool operator<=(SortedListNode* other) const {
+-                return !(*this > *other);
+-            }
+-
+-            bool operator>=(const SortedListNode* other) const {
+-                return !(*this < *other);
+-            }
+         };
+ 
+         private:
+@@ -126,6 +182,11 @@ namespace mtm {
+         SortedListNode* head;
+         SortedListNode* tail;
+ 
++        /**
++         * @brief Deletes a specified node from the list.
++         *
++         * @param node The node to delete, is nullptr safe.
++         */
+         void deleteNode(SortedListNode* node) {
+             if (node == nullptr) {
+                 return;
+@@ -134,13 +195,25 @@ namespace mtm {
+             --(this->listLength);
+         }
+ 
++        /**
++         * @brief Swaps the values of two things.
++         *
++         * @tparam V The type of the values to be swapped.
++         * @param address1 Address of the first swapped value.
++         * @param address2 Address of the second swapped value.
++         */
+         template <typename V> 
+-        void swap(V& address1, V& address2) {
++        void swap(V& address1, V& address2) { //todo ask regev
+             V temp = address1;
+             address1 = address2;
+             address2 = temp;
+         }
+ 
++        /**
++         * @brief Swaps the contents of the current list with another list.
++         *
++         * @param other The list to swap with.
++         */
+         void swapList(SortedList& other) {
+             swap<SortedListNode*>(this->head, other.head);
+             swap<SortedListNode*>(this->tail, other.tail);
+@@ -232,13 +305,8 @@ namespace mtm {
+          * @param newElement The element to insert.
+          */
+         void insert(const T& newElement) {
+-            try{
+-                this->head->insert(newElement);
+-                ++(this->listLength);
+-            }
+-            catch (std::bad_alloc& e) {
+-                throw;
+-            }
++            this->head->insert(newElement);
++            ++(this->listLength);
+         }
+ 
+         /**
+@@ -263,8 +331,7 @@ namespace mtm {
+             SortedListNode* current = this->head->next;
+             for(ConstIterator curr = begin(); curr!= last; ++curr, current = current->next){
+                 if(!(curr != iter)) {
+-                    current->deleteNode();
+-                    --(this->listLength);
++                    this->deleteNode(current);
+                     return;
+                 }
+             }
+@@ -282,12 +349,7 @@ namespace mtm {
+             SortedList<T> filteredList;
+             for(const T& val : *this){
+                 if(condition(val)) {
+-                    try{
+-                        filteredList.insert(val);
+-                    } 
+-                    catch (std::bad_alloc& e) {
+-                        throw;
+-                    }
++                    filteredList.insert(val);
+                 }
+             }
+             return filteredList;
+@@ -303,14 +365,8 @@ namespace mtm {
+         template <class Function>
+         SortedList<T> apply(Function function) const{
+             SortedList<T> appliedList;
+-            
+             for(const T& val : *this){
+-                try{
+-                    appliedList.insert(function(val));
+-                } 
+-                catch (std::bad_alloc& e) {
+-                    throw;
+-                }
++                appliedList.insert(function(val));
+             }
+             return appliedList;
+         }
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 26ba226..725719f 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -80,7 +80,7 @@ void TaskManager::printAllEmployees() const{
+     }
+ }
+ void TaskManager::printTasks(const SortedList<Task>& tasks){
+-    for(Task currentTask : tasks){
++    for(const Task& currentTask : tasks){
+         std::cout << currentTask << std::endl;
+     }
+ }
+
+commit d5dad8055d65c3860c2758a1808211c3a98b1c4d
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 16:01:26 2025 +0200
+
+    adding const to operator*
+
+diff --git a/SortedList.h b/SortedList.h
+index 304b3dc..b5365d9 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -348,7 +348,7 @@ namespace mtm {
+             * @return T& A reference to the element.
+             * @throws std::out_of_range If the iterator is out of range.
+             */
+-            T& operator*() const{
++            const T& operator*() const{
+                 if(current->isTail()) {
+                     throw std::out_of_range("Iterator is out of range");
+                 }
+
+commit 8cc27d38ab02b6227a96e48e09f166281fe5bb46
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 15:39:20 2025 +0200
+
+    fixing typos, removing comments
+
+diff --git a/SortedList.h b/SortedList.h
+index 969908c..304b3dc 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -26,18 +26,6 @@ namespace mtm {
+                 }
+             }
+ 
+-            //FIXME might be redundant
+-            /**
+-            SortedListNode(SortedListNode* other) : SortedListNode() {
+-                try{
+-                    this->data = new T(*(other->data));
+-                } catch (std::bad_alloc& e) {
+-                    delete this;
+-                    throw;
+-                }
+-            }
+-            */
+-
+             void deleteNode() {
+                 this->prev->next = this->next;
+                 this->next->prev = this->prev;
+@@ -118,7 +106,6 @@ namespace mtm {
+                 return (lhs.data > rhs.data);
+             }
+ 
+-
+             bool operator<(SortedListNode* other) const {
+                 bool equal = *this == *other;
+                 bool greater = *this > *other;
+@@ -147,17 +134,17 @@ namespace mtm {
+             --(this->listLength);
+         }
+ 
+-        template <typename V> //FIXME if new assignment operator is not used, then no need for this function
+-        void swap(V address1, V address2) {
++        template <typename V> 
++        void swap(V& address1, V& address2) {
+             V temp = address1;
+             address1 = address2;
+             address2 = temp;
+         }
+ 
+         void swapList(SortedList& other) {
+-            Swap<SortedListNode*>(this->head, other.head);
+-            Swap<SortedListNode*>(this->tail, other.tail);
+-            Swap<int>(this->listLength, other.listLength);
++            swap<SortedListNode*>(this->head, other.head);
++            swap<SortedListNode*>(this->tail, other.tail);
++            swap<int>(this->listLength, other.listLength);
+         }
+ 
+         public:
+@@ -203,19 +190,6 @@ namespace mtm {
+          * @param other The SortedList instance to copy.
+          */
+         SortedList(const SortedList<T>& other): SortedList<T>(){
+-            /*
+-             try {
+-                this->head = new SortedListNode();
+-                this->tail = new SortedListNode();
+-            } catch (std::bad_alloc& e) {
+-                delete this->head;
+-                delete this->tail;
+-            }
+-            this->head->next = this->tail;
+-            this->tail->prev = this->head;
+-            this->listLength = 0;
+-            */
+-
+             for(const T& currentData : other) {
+                 try{
+                     this->insert(currentData);
+@@ -235,54 +209,9 @@ namespace mtm {
+             if(this == &other) {
+                 return *this;
+             }
+-            
+-            // for(ConstIterator iter : *this) {
+-            //     this->remove(*iter);
+-            // }
+-            /**
+-             SortedListNode* oldHead = this->head;
+-             SortedListNode* oldTail = this->tail;
+-             int oldLength = this->listLength;
+-             try{
+-                SortedList* tempOther = new SortedList(other);
+-                this->head = tempOther->head;
+-                this->tail = tempOther->tail;
+-                this->listLength = tempOther->listLength;
+-                tempOther->head = nullptr;
+-                tempOther->tail = nullptr;
+-                delete tempOther;
+-            } 
+-            catch (std::bad_alloc& e) {
+-                this->head = oldHead;
+-                this->tail = oldTail;
+-                this->listLength = oldLength;
+-                throw;
+-            }
+-            while(oldHead != nullptr) {
+-                SortedListNode* nextNode = oldHead->next;
+-                delete oldHead;
+-                oldHead = nextNode;
+-            }
+-            */
+             SortedList<T> temp = SortedList(other);
+             this->swapList(temp);
+             return *this;
+-            /**
+-             *FIXME
+-             *
+-             *maybe better implementation for this:
+-             *
+-            *
+-            if(this == &other) {
+-                return *this;
+-            }
+-            sortedList<T> temp = sortedList(other);
+-            this->swapList(temp);
+-            delete temp;
+-            return *this;
+-
+-             *
+-             */
+         }
+ 
+         /**
+@@ -332,15 +261,12 @@ namespace mtm {
+                 return;
+             }
+             SortedListNode* current = this->head->next;
+-            ConstIterator curr = this->begin();
+-            while(curr != last) {
++            for(ConstIterator curr = begin(); curr!= last; ++curr, current = current->next){
+                 if(!(curr != iter)) {
+                     current->deleteNode();
+                     --(this->listLength);
+                     return;
+                 }
+-                ++curr;
+-                current = current->next;
+             }
+         }
+ 
+@@ -388,29 +314,6 @@ namespace mtm {
+             }
+             return appliedList;
+         }
+-        /**
+-         *
+-         * the class should support the following public interface:
+-         * if needed, use =defualt / =delete
+-         *
+-         * constructors and destructor:
+-         * 1. SortedList() - creates an empty list. V
+-         * 2. copy constructor V
+-         * 3. operator= - assignment operator V
+-         * 4. ~SortedList() - destructor V
+-         *
+-         * iterator:
+-         * 5. class ConstIterator;
+-         * 6. begin method V?
+-         * 7. end method V?
+-         *
+-         * functions:
+-         * 8. insert - inserts a new element to the list V
+-         * 9. remove - removes an element from the list V
+-         * 10. length - returns the number of elements in the list V
+-         * 11. filter - returns a new list with elements that satisfy a given condition V?
+-         * 12. apply - returns a new list with elements that were modified by an operation V?
+-         */
+     };
+ 
+     template <class T>
+@@ -426,9 +329,8 @@ namespace mtm {
+             *
+             * @param other The ConstIterator instance to copy.
+             */
+-            ConstIterator(const ConstIterator& other) {
+-                this->current = other.current;
+-            }
++            ConstIterator(const ConstIterator& other) = default;
++
+ 
+             /**
+              * @brief Assignment operator for the ConstIterator class.
+@@ -477,23 +379,5 @@ namespace mtm {
+             bool operator!=(const ConstIterator& other) const{
+                 return current != other.current;
+             }
+-    /**
+-     * the class should support the following public interface:
+-     * if needed, use =defualt / =delete
+-     *
+-     * constructors and destructor:
+-     * 1. a ctor(or ctors) your implementation needs V?
+-     * 2. copy constructor V?
+-     * 3. operator= - assignment operator V?
+-     * 4. ~ConstIterator() - destructor V?
+-     *
+-     * operators:
+-     * 5. operator* - returns the element the iterator points to V?
+-     * 6. operator++ - advances the iterator to the next element V?
+-     * 7. operator!= - returns true if the iterator points to a different element V?
+-     *
+-     */
+     };
+-
+-
+ };
+\ No newline at end of file
+
+commit 8f19416c1113b44f89d2747e4509289174b9fa25
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 15:36:31 2025 +0200
+
+    removing namespace, adding try-catch blocks for filter and apply
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 74545cd..26ba226 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -1,6 +1,5 @@
+ #include <iostream>
+ #include "TaskManager.h"
+-using namespace mtm;
+ #define NOT_FOUND -1
+ TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
+ 
+@@ -64,8 +63,13 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+         SortedList<Task> oldTasks = this->employees[i].getTasks();
+-        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
+-        this->employees[i].setTasks(newTasks);
++        try{
++            SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
++             this->employees[i].setTasks(newTasks);
++        }
++        catch (std::bad_alloc& e){
++            throw;
++        } 
+     }
+ 
+ }
+@@ -87,9 +91,14 @@ void TaskManager::printAllTasks() const{
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+-    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+-    printTasks(tasksByType);
+-   
++    try{
++        SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
++        printTasks(tasksByType);
++    }
++    catch (std::bad_alloc& e){
++        throw;
++    }
++    
+ }
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+     SortedList<Task> allTasks;
+diff --git a/TaskManager.h b/TaskManager.h
+index 5680ec7..67f0e8d 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -4,7 +4,6 @@
+ #include "Task.h"
+ #include "SortedList.h"
+ #include "Person.h"
+-using namespace mtm;
+ 
+ 
+ /**
+
+commit f3a92c20a155019aca07dbb7973c728029748067
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Tue Jan 7 14:15:20 2025 +0200
+
+    Update SortedList.h
+
+diff --git a/SortedList.h b/SortedList.h
+index c7edc0e..969908c 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -264,9 +264,8 @@ namespace mtm {
+                 oldHead = nextNode;
+             }
+             */
+-            SortedList<T> temp = new SortedList(other);
++            SortedList<T> temp = SortedList(other);
+             this->swapList(temp);
+-            delete temp;
+             return *this;
+             /**
+              *FIXME
+
+commit 5a1325cf248deeda38a5ff3201de395681406354
+Merge: ad62340 a0fad64
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Tue Jan 7 13:56:40 2025 +0200
+
+    Merge remote-tracking branch 'origin/main'
+
+commit ad62340cf18ce660f5139306e30751cb14bd2a05
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Tue Jan 7 13:56:26 2025 +0200
+
+    add documentation for SortedList.h
+
+diff --git a/SortedList.h b/SortedList.h
+index 6834b4f..c7edc0e 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -8,16 +8,8 @@
+ namespace mtm {
+     template <typename T>
+     class SortedList {
+-        //class SortedListNode; //TODO fix dependencies
+-        //TODO maybe delete these comment lines
+-        //provides the de-facto interface for interacting with SortedListNode,
+-        //wrapping function provides flexibility with static like parameters such as
+-        //head and tail, without forcing a single instance of the list class.
+-        // class ConstIterator;
+         class SortedListNode {
+-        //TODO maybe delete these comment lines
+-            //the members of this class are only accessible by SortedList class
+-        private:
++            /* Inner class, part of implementation so no documentation is provided. */
+             friend class SortedList<T>;
+             SortedListNode* prev;
+             SortedListNode* next;
+@@ -35,6 +27,7 @@ namespace mtm {
+             }
+ 
+             //FIXME might be redundant
++            /**
+             SortedListNode(SortedListNode* other) : SortedListNode() {
+                 try{
+                     this->data = new T(*(other->data));
+@@ -43,7 +36,7 @@ namespace mtm {
+                     throw;
+                 }
+             }
+-
++            */
+ 
+             void deleteNode() {
+                 this->prev->next = this->next;
+@@ -67,7 +60,7 @@ namespace mtm {
+                     return;
+                 }
+                 //if we arrived at the orderly place of the new node
+-                if (*(newNode->data) > *(this->next->data)) { //fixme
++                if (*(newNode->data) > *(this->next->data)) {
+                     this->addImmediate(newNode);
+                     return;
+                 }
+@@ -96,9 +89,6 @@ namespace mtm {
+             }
+ 
+             void insert(const T& data) {
+-                // if (data == nullptr) {
+-                //     //TODO invalid argument
+-                // }
+                 try{
+                      SortedListNode* newNode = new SortedListNode(data);
+                     this->add(newNode);
+@@ -143,6 +133,7 @@ namespace mtm {
+                 return !(*this < *other);
+             }
+         };
++
+         private:
+         int listLength;
+         SortedListNode* head;
+@@ -156,18 +147,43 @@ namespace mtm {
+             --(this->listLength);
+         }
+ 
++        template <typename V> //FIXME if new assignment operator is not used, then no need for this function
++        void swap(V address1, V address2) {
++            V temp = address1;
++            address1 = address2;
++            address2 = temp;
++        }
++
++        void swapList(SortedList& other) {
++            Swap<SortedListNode*>(this->head, other.head);
++            Swap<SortedListNode*>(this->tail, other.tail);
++            Swap<int>(this->listLength, other.listLength);
++        }
++
+         public:
+-        //class NodeIterator;
+         class ConstIterator;
+ 
++        /**
++         * @brief Retrieves an iterator to the first element of the sorted list.
++         *
++         * @return ConstIterator, An iterator pointing to the first element.
++         */
+         ConstIterator begin() const {
+             return ConstIterator(this->head->next);
+         }
+ 
++        /**
++         * @brief Retrieves an iterator one element after the last.
++         *
++         * @return ConstIterator, An iterator pointing past the last element.
++         */
+         ConstIterator end() const {
+             return ConstIterator(this->tail);
+         }
+ 
++        /**
++         * @brief Constructor for the SortedList class. Initializes an empty sorted list.
++         */
+         SortedList() : listLength(0){
+             try {
+                 this->head = new SortedListNode();
+@@ -181,6 +197,11 @@ namespace mtm {
+             this->tail->prev = this->head;
+         }
+ 
++        /**
++         * @brief Copy constructor for the SortedList class.
++         *
++         * @param other The SortedList instance to copy.
++         */
+         SortedList(const SortedList<T>& other): SortedList<T>(){
+             /*
+              try {
+@@ -204,6 +225,12 @@ namespace mtm {
+             }
+         }
+ 
++        /**
++         * @brief Assignment operator for the SortedList class.
++         *
++         * @param other The SortedList instance to assign.
++         * @return SortedList<T>& A reference to the assigned SortedList instance.
++         */
+         SortedList<T>& operator=(const SortedList<T>& other) {
+             if(this == &other) {
+                 return *this;
+@@ -212,6 +239,7 @@ namespace mtm {
+             // for(ConstIterator iter : *this) {
+             //     this->remove(*iter);
+             // }
++            /**
+              SortedListNode* oldHead = this->head;
+              SortedListNode* oldTail = this->tail;
+              int oldLength = this->listLength;
+@@ -235,17 +263,32 @@ namespace mtm {
+                 delete oldHead;
+                 oldHead = nextNode;
+             }
++            */
++            SortedList<T> temp = new SortedList(other);
++            this->swapList(temp);
++            delete temp;
+             return *this;
+-            // for(ConstIterator iter : other) {
+-            //     this->insert(*iter);
+-            // }
+-            // ConstIterator otherCurrent = other.begin();
+-            // while(otherCurrent != other.end()) {
+-            //     this->insert(*otherCurrent);
+-            //     ++otherCurrent;
+-            // }            
++            /**
++             *FIXME
++             *
++             *maybe better implementation for this:
++             *
++            *
++            if(this == &other) {
++                return *this;
++            }
++            sortedList<T> temp = sortedList(other);
++            this->swapList(temp);
++            delete temp;
++            return *this;
++
++             *
++             */
+         }
+ 
++        /**
++         * @brief Destructor for the SortedList class. Frees all allocated resources.
++         */
+         ~SortedList() {
+             SortedListNode* current = this->head;
+             while(current != nullptr) {
+@@ -255,6 +298,11 @@ namespace mtm {
+             }
+         }
+ 
++        /**
++         * @brief Inserts a new element into the sorted list.
++         *
++         * @param newElement The element to insert.
++         */
+         void insert(const T& newElement) {
+             try{
+                 this->head->insert(newElement);
+@@ -265,10 +313,20 @@ namespace mtm {
+             }
+         }
+ 
++        /**
++         * @brief Retrieves the number of elements in the sorted list.
++         * 
++         * @return int The length of the list.
++         */
+         int length() const {
+             return this->listLength;
+         }
+ 
++        /**
++         * @brief Removes an element from the sorted list using a specified iterator.
++         *
++         * @param iter A const iterator pointing to the element to be removed.
++         */
+         void remove(const ConstIterator& iter){
+             ConstIterator last = this->end();
+             if(!(iter != last)) {
+@@ -286,7 +344,14 @@ namespace mtm {
+                 current = current->next;
+             }
+         }
+-        
++
++        /**
++         * @brief Filters the sorted list based on a specified condition.
++         *
++         * @tparam Condition A callable object that determines whether an element is included.
++         * @param condition The filtering condition.
++         * @return SortedList<T> A new list containing elements that satisfy the condition.
++         */
+         template <class Condition>
+         SortedList<T> filter(Condition condition) const{
+             SortedList<T> filteredList;
+@@ -303,6 +368,13 @@ namespace mtm {
+             return filteredList;
+         }
+ 
++        /**
++         * @brief Applies a transformation to each element in the sorted list.
++         *
++         * @tparam Function A callable object that defines the transformation.
++         * @param function The transformation function.
++         * @return SortedList<T> A new list containing the transformed elements.
++         */
+         template <class Function>
+         SortedList<T> apply(Function function) const{
+             SortedList<T> appliedList;
+@@ -349,24 +421,60 @@ namespace mtm {
+             const SortedListNode* current;
+             ConstIterator(const SortedListNode* current) : current(current) {}
+         public:
++
++            /**
++            * @brief Copy constructor for the ConstIterator class.
++            *
++            * @param other The ConstIterator instance to copy.
++            */
+             ConstIterator(const ConstIterator& other) {
+                 this->current = other.current;
+             }
++
++            /**
++             * @brief Assignment operator for the ConstIterator class.
++             *
++             * @param other The ConstIterator instance to assign.
++             * @return ConstIterator& A reference to the assigned iterator.
++             */
+             ConstIterator& operator=(const ConstIterator& other) = default;
++
+             ~ConstIterator() = default;
++
++            /**
++            * @brief Accesses the element that the iterator points to.
++            *
++            * @return T& A reference to the element.
++            * @throws std::out_of_range If the iterator is out of range.
++            */
+             T& operator*() const{
+                 if(current->isTail()) {
+                     throw std::out_of_range("Iterator is out of range");
+                 }
+                 return *(current->data);
+             }
++
++            /**
++            * @brief Advances the iterator to the next element in the list.
++            *
++            * @return ConstIterator& A reference to the advanced iterator.
++            * @throws std::out_of_range If the iterator is out of range.
++            */
+             ConstIterator& operator++(){
+                 if(current->isTail()){
+-                    throw std::out_of_range("Iterator is out of range");                
++                    throw std::out_of_range("Iterator is out of range");
+                 }
+                 current = current->next;
+                 return *this;
+             }
++
++            /**
++            * @brief Compares two iterators for inequality.
++            *
++            * @param other The iterator to compare against.
++            * @return true If the iterators point to different elements.
++            * @return false If the iterators point to the same element.
++            */
+             bool operator!=(const ConstIterator& other) const{
+                 return current != other.current;
+             }
+
+commit a0fad64bd8cfa820ad8177ee6da108a35fbd2fb2
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 13:49:30 2025 +0200
+
+    adding try-catch to assigntask
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 63be670..74545cd 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -24,9 +24,14 @@ void TaskManager::assignTask(const string &personName, const Task &task){
+         currentEmployee = numOfEmployees;
+         employees[numOfEmployees++] = newEmployee;
+     }
+-    Task newTask(task.getPriority(), task.getType(), task.getDescription());
+-    newTask.setId(idCounter++);
+-    employees[currentEmployee].assignTask(newTask);
++    try{
++        Task newTask(task.getPriority(), task.getType(), task.getDescription());
++        newTask.setId(idCounter++);
++        employees[currentEmployee].assignTask(newTask);
++    }
++    catch (std::bad_alloc& e){
++        throw;
++    }
+ }
+ 
+ void TaskManager::completeTask(const string &personName){
+
+commit 64c29f32bf92b61b4534bf682ed051b936bcf4ca
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 13:46:01 2025 +0200
+
+    removing code duplication for prints
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index a872235..63be670 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -40,8 +40,7 @@ void TaskManager::completeTask(const string &personName){
+     }
+     catch (const std::runtime_error& e)
+     {
+-        throw(e);
+-        //std::cout << e.what() << std::endl;
++        throw;
+     }
+ }
+ 
+@@ -66,26 +65,25 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+ 
+ }
+ 
+-
+ void TaskManager::printAllEmployees() const{
+     for(int i = 0; i < numOfEmployees; i++){
+         std::cout << employees[i] << std::endl;        
+     }
+ }
+-
+-void TaskManager::printAllTasks() const{
+-    SortedList<Task> allTasks = getAllEmployeesTasks();
+-    for(Task currentTask : allTasks){
++void TaskManager::printTasks(const SortedList<Task>& tasks){
++    for(Task currentTask : tasks){
+         std::cout << currentTask << std::endl;
+     }
+ }
++void TaskManager::printAllTasks() const{
++    SortedList<Task> allTasks = getAllEmployeesTasks();
++    printTasks(allTasks);
++}
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+     SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+-    for(Task currentTask : tasksByType){
+-        std::cout << currentTask << std::endl;
+-    }
++    printTasks(tasksByType);
+    
+ }
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+diff --git a/TaskManager.h b/TaskManager.h
+index 1a6215d..5680ec7 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -21,6 +21,7 @@ private:
+     Person employees[MAX_PERSONS];
+     int isEmployeeExist(const string& personName);
+     static const Task setPriority(const Task& tasks, TaskType type, int priority);
++    static void printTasks(const SortedList<Task>& tasks);
+     SortedList<Task> getAllEmployeesTasks() const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+
+commit ad99c8626ecf14bb921d2c85a9bb281d48999a72
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 13:36:04 2025 +0200
+
+    removing auto from prints
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index a5f01e2..a872235 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -75,7 +75,7 @@ void TaskManager::printAllEmployees() const{
+ 
+ void TaskManager::printAllTasks() const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+-    for(auto currentTask : allTasks){
++    for(Task currentTask : allTasks){
+         std::cout << currentTask << std::endl;
+     }
+ }
+@@ -83,7 +83,7 @@ void TaskManager::printAllTasks() const{
+ void TaskManager::printTasksByType(TaskType type) const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+     SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+-    for(auto currentTask : tasksByType){
++    for(Task currentTask : tasksByType){
+         std::cout << currentTask << std::endl;
+     }
+    
+@@ -92,7 +92,7 @@ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+     SortedList<Task> allTasks;
+     for(int i = 0; i < this->numOfEmployees; i++){
+         SortedList<Task> tasks(this->employees[i].getTasks());
+-        for(auto currentTask : tasks){
++        for(Task currentTask : tasks){
+             allTasks.insert(currentTask);
+         }
+     }
+
+commit a66820d193571c2fc0e237306fc3dcede88f9ecc
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 13:32:21 2025 +0200
+
+    changing setpriority to static
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index c007d98..a5f01e2 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -60,7 +60,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+         SortedList<Task> oldTasks = this->employees[i].getTasks();
+-        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task){ return setPriority(task, type, priority); });
++        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
+         this->employees[i].setTasks(newTasks);
+     }
+ 
+diff --git a/TaskManager.h b/TaskManager.h
+index 909637d..1a6215d 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -20,7 +20,7 @@ private:
+     int numOfEmployees;
+     Person employees[MAX_PERSONS];
+     int isEmployeeExist(const string& personName);
+-    const Task setPriority(const Task& tasks, TaskType type, int priority);
++    static const Task setPriority(const Task& tasks, TaskType type, int priority);
+     SortedList<Task> getAllEmployeesTasks() const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+
+commit 5ec21d2ef833faaf3691b7d45565c2cdcd22ed36
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 12:39:49 2025 +0200
+
+    removing uneeded comments and func
+
+diff --git a/SortedList.h b/SortedList.h
+index 5c7391c..6834b4f 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -2,7 +2,6 @@
+ 
+ #include <iostream>
+ #include <stdexcept>
+-#include <cassert>
+ #include <functional>
+ #include <new>
+ 
+@@ -33,7 +32,6 @@ namespace mtm {
+                     delete this;
+                     throw;
+                 }
+-                //this->data = new T(data);
+             }
+ 
+             //FIXME might be redundant
+@@ -44,12 +42,10 @@ namespace mtm {
+                     delete this;
+                     throw;
+                 }
+-                //this->data = new T(other->data);
+             }
+ 
+ 
+             void deleteNode() {
+-                assert(!(this->isTail()||this->isHead()));
+                 this->prev->next = this->next;
+                 this->next->prev = this->prev;
+                 this->next = nullptr;
+@@ -58,7 +54,6 @@ namespace mtm {
+             }
+ 
+             void addImmediate(SortedListNode* newNode) {
+-                assert(!this->isTail());
+                 this->next->prev = newNode;
+                 newNode->next = this->next;
+                 this->next = newNode;
+@@ -68,37 +63,16 @@ namespace mtm {
+             void add(SortedListNode* newNode) {
+                 //if we arrived at the end of the chain
+                 if (!this->hasNext()) {
+-                    assert(this->next->isTail());
+                     this->addImmediate(newNode);
+-                    assert(this->isSorted());
+                     return;
+                 }
+                 //if we arrived at the orderly place of the new node
+                 if (*(newNode->data) > *(this->next->data)) { //fixme
+-                    assert(!this->next->isTail());
+                     this->addImmediate(newNode);
+-                    //assert(this->isSorted());//todo attempt to reduce assertion calls to help see the actual bug
+                     return;
+                 }
+                 //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+                 this->next->add(newNode);
+-                assert(this->isSorted());
+-            }
+-
+-            // SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
+-            // prev(prev), next(next), data(data) {}
+-
+-            /**
+-             * overload of the isSorted function, to differentiate calls between
+-             * the head and the rest of the chain
+-             *
+-             * @return if the list is sorted
+-             */
+-            bool isSorted(int) const {
+-                if (this->isTail()||(!(this->hasNext()))){
+-                    return true;
+-                }
+-                return (!((*(this->next->data)) > (*(this->data)))) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+             }
+ 
+         public:
+@@ -134,16 +108,6 @@ namespace mtm {
+                 }
+             }
+ 
+-            /**
+-             *check if the list is sorted
+-             *
+-             * @return if the list is sorted
+-             */
+-            bool isSorted() const {
+-                //the head breaks the sorted logic, if it is the head- skip it.
+-                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+-            }
+-
+             //FIXME CORRECT FOR SYNTAX
+             bool operator==(SortedListNode* other) const {
+                 return (this->data == other->data);
+@@ -158,7 +122,6 @@ namespace mtm {
+             }
+ 
+             friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
+-                assert(!lhs.isHead());
+                 if (rhs.isTail()) {
+                     return true;
+                 }
+@@ -185,40 +148,12 @@ namespace mtm {
+         SortedListNode* head;
+         SortedListNode* tail;
+ 
+-        bool isEmpty() const{
+-            return (this->listLength == 0);
+-        }
+-
+-        bool isSorted() const {
+-            if ((this->isEmpty())){
+-                return true;
+-            }
+-            return head->isSorted();
+-        }
+-
+-        bool verifyLength() const {
+-            int actualLength = 0;
+-            SortedListNode* current = this->head;
+-            while(current != this->tail) {
+-                ++actualLength;
+-                current = current->next;
+-            }
+-            return actualLength == this->listLength;
+-        }
+-
+-        bool verifyList() const {
+-            return true;
+-            return (this->isSorted())&&(this->verifyLength());
+-        }
+-
+-
+         void deleteNode(SortedListNode* node) {
+             if (node == nullptr) {
+                 return;
+             }
+             node->deleteNode();
+             --(this->listLength);
+-            assert(this->verifyList());
+         }
+ 
+         public:
+@@ -266,9 +201,7 @@ namespace mtm {
+                 } catch (std::bad_alloc& e) {
+                     throw;
+                 }
+-                //this->insert(currentData);
+             }
+-            //assert(this->verifyList());
+         }
+ 
+         SortedList<T>& operator=(const SortedList<T>& other) {
+@@ -302,9 +235,6 @@ namespace mtm {
+                 delete oldHead;
+                 oldHead = nextNode;
+             }
+-            // if(other.head == nullptr) {
+-            //     return *this;
+-            // }
+             return *this;
+             // for(ConstIterator iter : other) {
+             //     this->insert(*iter);
+@@ -325,26 +255,6 @@ namespace mtm {
+             }
+         }
+ 
+-        // void insert(const T& newElement) {
+-        //     ConstIterator iter = this->begin();
+-        //     while( newElement < *iter && iter != this->end()) {
+-        //         ++iter;
+-        //     }
+-        //     if(iter == this->end()) {
+-        //         SortedListNode* newNode = new SortedListNode(newElement);
+-        //         this->tail->prev = newNode;
+-        //         newNode->next = this->tail;
+-        //         ++(this->listLength);
+-        //         return;
+-        //     }
+-        //     SortedListNode* newNode = new SortedListNode(newElement);
+-        //     newNode->prev = iter.current;
+-        //     newNode->next = iter.current->next;
+-        //     iter.current->next->prev = newNode;
+-        //     iter.current->next = newNode;
+-        //     ++(this->listLength);
+-        // }
+-
+         void insert(const T& newElement) {
+             try{
+                 this->head->insert(newElement);
+@@ -353,54 +263,12 @@ namespace mtm {
+             catch (std::bad_alloc& e) {
+                 throw;
+             }
+-           
+-            //assert(this->verifyList());
+         }
+ 
+-        /**
+-        void insert(const T& newElement){
+-            if (newElement == nullptr) {
+-                    //TODO invalid argument
+-                }
+-            if(this->head == nullptr) {
+-                this->head = new SortedListNode<T>(nullptr, nullptr, newElement);
+-                this->tail = this->head;
+-                this->length = 1;
+-                return;
+-            }
+-            this->head->add(newElement);
+-            this->length++;
+-        }
+-         */
+-
+-
+-
+         int length() const {
+             return this->listLength;
+         }
+ 
+-        //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+-
+-        /**
+-        void remove(const ConstIterator& iter){
+-            if(iter == this->end()) {
+-                return;
+-            }
+-            ConstIterator& begin = this->begin();
+-            if(iter == begin) {
+-                this->head->next->deleteNode(); //FIXME this line
+-            }
+-            else{
+-                SortedListNode* nextNode = iter.current->next; //TODO understand what this code does
+-                SortedListNode* prevNode = iter.current->prev;
+-                prevNode->next = nextNode;
+-                nextNode->prev = prevNode;
+-            }
+-            //delete iter;
+-            --(this->listLength);
+-        }
+-         */
+-
+         void remove(const ConstIterator& iter){
+             ConstIterator last = this->end();
+             if(!(iter != last)) {
+@@ -430,7 +298,6 @@ namespace mtm {
+                     catch (std::bad_alloc& e) {
+                         throw;
+                     }
+-                    //filteredList.insert(val);
+                 }
+             }
+             return filteredList;
+@@ -447,7 +314,6 @@ namespace mtm {
+                 catch (std::bad_alloc& e) {
+                     throw;
+                 }
+-                //appliedList.insert(function(val));
+             }
+             return appliedList;
+         }
+@@ -489,7 +355,6 @@ namespace mtm {
+             ConstIterator& operator=(const ConstIterator& other) = default;
+             ~ConstIterator() = default;
+             T& operator*() const{
+-                assert(!current->isHead());
+                 if(current->isTail()) {
+                     throw std::out_of_range("Iterator is out of range");
+                 }
+@@ -505,9 +370,6 @@ namespace mtm {
+             bool operator!=(const ConstIterator& other) const{
+                 return current != other.current;
+             }
+-            // bool operator==(const ConstIterator& other) const{
+-            //     return current == other.current;
+-            // }
+     /**
+      * the class should support the following public interface:
+      * if needed, use =defualt / =delete
+
+commit 0aba796d73832f41b27d00cf1ee0c1f4274c9912
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 12:27:51 2025 +0200
+
+    adding try-catch block for bad::aloc, moving sortedlistnode d'tor to public, removing op== for Constiterator
+
+diff --git a/SortedList.h b/SortedList.h
+index 0518d20..5c7391c 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -14,8 +14,7 @@ namespace mtm {
+         //provides the de-facto interface for interacting with SortedListNode,
+         //wrapping function provides flexibility with static like parameters such as
+         //head and tail, without forcing a single instance of the list class.
+-        class ConstIterator;
+-        //class Iterator;
++        // class ConstIterator;
+         class SortedListNode {
+         //TODO maybe delete these comment lines
+             //the members of this class are only accessible by SortedList class
+@@ -28,19 +27,26 @@ namespace mtm {
+             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+ 
+             SortedListNode(T data): SortedListNode() {
+-                this->data = new T(data);
++                try{
++                    this->data = new T(data);
++                } catch (std::bad_alloc& e) {
++                    delete this;
++                    throw;
++                }
++                //this->data = new T(data);
+             }
+ 
+             //FIXME might be redundant
+             SortedListNode(SortedListNode* other) : SortedListNode() {
+-                this->data = new T(other->data);
++                try{
++                    this->data = new T(*(other->data));
++                } catch (std::bad_alloc& e) {
++                    delete this;
++                    throw;
++                }
++                //this->data = new T(other->data);
+             }
+ 
+-            ~SortedListNode() {
+-                this->prev = nullptr;
+-                this->next = nullptr;
+-                delete this->data;
+-            }
+ 
+             void deleteNode() {
+                 assert(!(this->isTail()||this->isHead()));
+@@ -97,6 +103,12 @@ namespace mtm {
+ 
+         public:
+ 
++            ~SortedListNode() {
++                this->prev = nullptr;
++                this->next = nullptr;
++                delete this->data;
++            }
++
+             inline bool isTail() const {
+                 return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+             }
+@@ -113,9 +125,13 @@ namespace mtm {
+                 // if (data == nullptr) {
+                 //     //TODO invalid argument
+                 // }
+-                SortedListNode* newNode = new SortedListNode(data);
+-                this->add(newNode);
+-                assert(this->isSorted());
++                try{
++                     SortedListNode* newNode = new SortedListNode(data);
++                    this->add(newNode);
++                }
++                catch (std::bad_alloc& e) {
++                    throw;
++                }
+             }
+ 
+             /**
+@@ -191,6 +207,7 @@ namespace mtm {
+         }
+ 
+         bool verifyList() const {
++            return true;
+             return (this->isSorted())&&(this->verifyLength());
+         }
+ 
+@@ -206,7 +223,7 @@ namespace mtm {
+ 
+         public:
+         //class NodeIterator;
+-        //class ConstIterator;
++        class ConstIterator;
+ 
+         ConstIterator begin() const {
+             return ConstIterator(this->head->next);
+@@ -216,16 +233,6 @@ namespace mtm {
+             return ConstIterator(this->tail);
+         }
+ 
+-        /**
+-        ConstIterator begin() {
+-            return ConstIterator(this->head->next);
+-        }
+-
+-        ConstIterator end() {
+-            return ConstIterator(this->tail);
+-        }
+-        */
+-
+         SortedList() : listLength(0){
+             try {
+                 this->head = new SortedListNode();
+@@ -233,6 +240,7 @@ namespace mtm {
+             } catch (std::bad_alloc& e) {
+                 delete this->head;
+                 delete this->tail;
++                throw;
+             }
+             this->head->next = this->tail;
+             this->tail->prev = this->head;
+@@ -253,9 +261,14 @@ namespace mtm {
+             */
+ 
+             for(const T& currentData : other) {
+-                this->insert(currentData);
++                try{
++                    this->insert(currentData);
++                } catch (std::bad_alloc& e) {
++                    throw;
++                }
++                //this->insert(currentData);
+             }
+-            assert(this->verifyList());
++            //assert(this->verifyList());
+         }
+ 
+         SortedList<T>& operator=(const SortedList<T>& other) {
+@@ -266,16 +279,33 @@ namespace mtm {
+             // for(ConstIterator iter : *this) {
+             //     this->remove(*iter);
+             // }
+-            SortedListNode* current = this->head->next;
+-            while(current != this->tail) {
+-                SortedListNode* next = current->next;
+-                delete current;
+-                current = next;
+-            }
+-           this->listLength = 0;
+-            if(other.head == nullptr) {
+-                return *this;
+-            }
++             SortedListNode* oldHead = this->head;
++             SortedListNode* oldTail = this->tail;
++             int oldLength = this->listLength;
++             try{
++                SortedList* tempOther = new SortedList(other);
++                this->head = tempOther->head;
++                this->tail = tempOther->tail;
++                this->listLength = tempOther->listLength;
++                tempOther->head = nullptr;
++                tempOther->tail = nullptr;
++                delete tempOther;
++            } 
++            catch (std::bad_alloc& e) {
++                this->head = oldHead;
++                this->tail = oldTail;
++                this->listLength = oldLength;
++                throw;
++            }
++            while(oldHead != nullptr) {
++                SortedListNode* nextNode = oldHead->next;
++                delete oldHead;
++                oldHead = nextNode;
++            }
++            // if(other.head == nullptr) {
++            //     return *this;
++            // }
++            return *this;
+             // for(ConstIterator iter : other) {
+             //     this->insert(*iter);
+             // }
+@@ -283,11 +313,7 @@ namespace mtm {
+             // while(otherCurrent != other.end()) {
+             //     this->insert(*otherCurrent);
+             //     ++otherCurrent;
+-            // }
+-            for(const T& currentData : other) { //TODO create iterator for SortedListNodes
+-                this->insert(currentData);
+-            }
+-            return *this;
++            // }            
+         }
+ 
+         ~SortedList() {
+@@ -320,9 +346,15 @@ namespace mtm {
+         // }
+ 
+         void insert(const T& newElement) {
+-            this->head->insert(newElement);
+-            ++(this->listLength);
+-            assert(this->verifyList());
++            try{
++                this->head->insert(newElement);
++                ++(this->listLength);
++            }
++            catch (std::bad_alloc& e) {
++                throw;
++            }
++           
++            //assert(this->verifyList());
+         }
+ 
+         /**
+@@ -371,17 +403,18 @@ namespace mtm {
+ 
+         void remove(const ConstIterator& iter){
+             ConstIterator last = this->end();
+-            if(iter == last) {
++            if(!(iter != last)) {
+                 return;
+             }
+             SortedListNode* current = this->head->next;
+             ConstIterator curr = this->begin();
+             while(curr != last) {
+-                if(curr == iter) {
++                if(!(curr != iter)) {
+                     current->deleteNode();
+                     --(this->listLength);
++                    return;
+                 }
+-                curr++;
++                ++curr;
+                 current = current->next;
+             }
+         }
+@@ -391,7 +424,13 @@ namespace mtm {
+             SortedList<T> filteredList;
+             for(const T& val : *this){
+                 if(condition(val)) {
+-                    filteredList.insert(val);
++                    try{
++                        filteredList.insert(val);
++                    } 
++                    catch (std::bad_alloc& e) {
++                        throw;
++                    }
++                    //filteredList.insert(val);
+                 }
+             }
+             return filteredList;
+@@ -400,8 +439,15 @@ namespace mtm {
+         template <class Function>
+         SortedList<T> apply(Function function) const{
+             SortedList<T> appliedList;
++            
+             for(const T& val : *this){
+-                appliedList.insert(function(val));
++                try{
++                    appliedList.insert(function(val));
++                } 
++                catch (std::bad_alloc& e) {
++                    throw;
++                }
++                //appliedList.insert(function(val));
+             }
+             return appliedList;
+         }
+@@ -459,18 +505,9 @@ namespace mtm {
+             bool operator!=(const ConstIterator& other) const{
+                 return current != other.current;
+             }
+-            bool operator>(const ConstIterator& other) const{
+-                return current->data > other.current->data;
+-            }
+-            bool operator==(const ConstIterator& other) const{
+-                return current == other.current;
+-            }
+-            ConstIterator operator++(int){
+-                ConstIterator temp = *this;
+-                ++(*this);
+-                return temp;
+-            }
+-
++            // bool operator==(const ConstIterator& other) const{
++            //     return current == other.current;
++            // }
+     /**
+      * the class should support the following public interface:
+      * if needed, use =defualt / =delete
+
+commit 0653548115efb475ee9ef2255ffd5751378fb1d3
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Tue Jan 7 12:24:32 2025 +0200
+
+    removing extra spaces in prints
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index dc8872c..c007d98 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -37,11 +37,11 @@ void TaskManager::completeTask(const string &personName){
+     try
+     {
+         employees[currentEmployee].completeTask();
+-        
+     }
+     catch (const std::runtime_error& e)
+     {
+-        std::cout << e.what() << std::endl;
++        throw(e);
++        //std::cout << e.what() << std::endl;
+     }
+ }
+ 
+@@ -60,7 +60,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+         SortedList<Task> oldTasks = this->employees[i].getTasks();
+-        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
++        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task){ return setPriority(task, type, priority); });
+         this->employees[i].setTasks(newTasks);
+     }
+ 
+@@ -69,7 +69,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+ 
+ void TaskManager::printAllEmployees() const{
+     for(int i = 0; i < numOfEmployees; i++){
+-        std::cout << employees[i] << std::endl;
++        std::cout << employees[i] << std::endl;        
+     }
+ }
+ 
+@@ -78,7 +78,6 @@ void TaskManager::printAllTasks() const{
+     for(auto currentTask : allTasks){
+         std::cout << currentTask << std::endl;
+     }
+-    std::cout << std::endl;
+ }
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+@@ -87,7 +86,6 @@ void TaskManager::printTasksByType(TaskType type) const{
+     for(auto currentTask : tasksByType){
+         std::cout << currentTask << std::endl;
+     }
+-    std::cout << std::endl;
+    
+ }
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+
+commit 15b8664b8ec62371842ac36a283c97cdf037642a
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Mon Jan 6 17:27:30 2025 +0200
+
+    removing loop in verifyLength
+
+diff --git a/SortedList.h b/SortedList.h
+index cb49cbe..0518d20 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -182,8 +182,10 @@ namespace mtm {
+ 
+         bool verifyLength() const {
+             int actualLength = 0;
+-            for(const T& data : *this) {
++            SortedListNode* current = this->head;
++            while(current != this->tail) {
+                 ++actualLength;
++                current = current->next;
+             }
+             return actualLength == this->listLength;
+         }
+
+commit f9111aecae6467bcf44532eb7f7dc18d8f44c8cf
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Mon Jan 6 17:25:10 2025 +0200
+
+    fix copy constructor
+
+diff --git a/SortedList.h b/SortedList.h
+index 62647e2..cb49cbe 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -27,7 +27,7 @@ namespace mtm {
+ 
+             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+ 
+-            SortedListNode(T data): prev(nullptr), next(nullptr) {
++            SortedListNode(T data): SortedListNode() {
+                 this->data = new T(data);
+             }
+ 
+@@ -43,6 +43,7 @@ namespace mtm {
+             }
+ 
+             void deleteNode() {
++                assert(!(this->isTail()||this->isHead()));
+                 this->prev->next = this->next;
+                 this->next->prev = this->prev;
+                 this->next = nullptr;
+@@ -345,16 +346,18 @@ namespace mtm {
+         }
+ 
+         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+-        
++
++        /**
+         void remove(const ConstIterator& iter){
+             if(iter == this->end()) {
+                 return;
+             }
+-            if(iter == this->begin()) {
+-                this->head = this->head->next;
++            ConstIterator& begin = this->begin();
++            if(iter == begin) {
++                this->head->next->deleteNode(); //FIXME this line
+             }
+             else{
+-                SortedListNode* nextNode = iter.current->next;
++                SortedListNode* nextNode = iter.current->next; //TODO understand what this code does
+                 SortedListNode* prevNode = iter.current->prev;
+                 prevNode->next = nextNode;
+                 nextNode->prev = prevNode;
+@@ -362,6 +365,24 @@ namespace mtm {
+             //delete iter;
+             --(this->listLength);
+         }
++         */
++
++        void remove(const ConstIterator& iter){
++            ConstIterator last = this->end();
++            if(iter == last) {
++                return;
++            }
++            SortedListNode* current = this->head->next;
++            ConstIterator curr = this->begin();
++            while(curr != last) {
++                if(curr == iter) {
++                    current->deleteNode();
++                    --(this->listLength);
++                }
++                curr++;
++                current = current->next;
++            }
++        }
+         
+         template <class Condition>
+         SortedList<T> filter(Condition condition) const{
+@@ -467,59 +488,4 @@ namespace mtm {
+     };
+ 
+ 
+-    // template <class T>
+-    // class SortedList<T>::NodeIterator {
+-    //     /**
+-    //      * the class should support the following public interface:
+-    //      * if needed, use =defualt / =delete
+-    //      *
+-    //      * constructors and destructor:
+-    //      * 1. a ctor(or ctors) your implementation needs
+-    //      * 2. copy constructor
+-    //      * 3. operator= - assignment operator
+-    //      * 4. ~ConstIterator() - destructor
+-    //      *
+-    //      * operators:
+-    //      * 5. operator* - returns the element the iterator points to
+-    //      * 6. operator++ - advances the iterator to the next element
+-    //      * 7. operator!= - returns true if the iterator points to a different element
+-    //      *
+-    //      */
+-    //     private:
+-    //     SortedListNode* current;
+-    //     int index;
+-    //     public:
+-
+-    //     NodeIterator() = delete;
+-    //     NodeIterator(SortedListNode* current) : current(current) {}
+-
+-    //     bool operator==(const NodeIterator& other) const {
+-    //         return this->current == other.current;
+-    //     }
+-
+-    //     bool operator!=(const NodeIterator& other) const {
+-    //         return !(this == other);
+-    //     }
+-
+-    //     bool operator<(const NodeIterator& other) const {
+-    //         return this->index < other.index;
+-    //     }
+-
+-    //     bool operator>(const NodeIterator& other) const {
+-    //         return (this != other) && (!(this < other));
+-    //     }
+-
+-    //     bool operator<=(const NodeIterator& other) const {
+-    //         return !(*this > other);
+-    //     }
+-
+-    //     bool operator>=(const NodeIterator& other) const {
+-    //         return !(*this < other);
+-    //     }
+-
+-    //     T operator*() const {
+-    //         return this->current;
+-    //     }
+-
+-    // };
+ };
+\ No newline at end of file
+
+commit 47c314bca1434aa2aa14bfe3f03b7de4b406e225
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Mon Jan 6 12:26:34 2025 +0200
+
+    fix copy constructor
+
+diff --git a/SortedList.h b/SortedList.h
+index fd63b1e..62647e2 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -67,10 +67,10 @@ namespace mtm {
+                     return;
+                 }
+                 //if we arrived at the orderly place of the new node
+-                if (newNode > this->next) {
++                if (*(newNode->data) > *(this->next->data)) { //fixme
+                     assert(!this->next->isTail());
+                     this->addImmediate(newNode);
+-                    assert(this->isSorted());
++                    //assert(this->isSorted());//todo attempt to reduce assertion calls to help see the actual bug
+                     return;
+                 }
+                 //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+@@ -88,10 +88,10 @@ namespace mtm {
+              * @return if the list is sorted
+              */
+             bool isSorted(int) const {
+-                if (this->isTail()){
++                if (this->isTail()||(!(this->hasNext()))){
+                     return true;
+                 }
+-                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
++                return (!((*(this->next->data)) > (*(this->data)))) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+             }
+ 
+         public:
+@@ -236,6 +236,19 @@ namespace mtm {
+         }
+ 
+         SortedList(const SortedList<T>& other): SortedList<T>(){
++            /*
++             try {
++                this->head = new SortedListNode();
++                this->tail = new SortedListNode();
++            } catch (std::bad_alloc& e) {
++                delete this->head;
++                delete this->tail;
++            }
++            this->head->next = this->tail;
++            this->tail->prev = this->head;
++            this->listLength = 0;
++            */
++
+             for(const T& currentData : other) {
+                 this->insert(currentData);
+             }
+
+commit 8228282d48338be47ff297c82019b867957b0f2c
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sun Jan 5 19:43:25 2025 +0200
+
+    changing Person* employees[MAX_PERSONS]; to Person employees[MAX_PERSONS];
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index d1eef57..dc8872c 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -1,41 +1,42 @@
+ #include <iostream>
+ #include "TaskManager.h"
+ using namespace mtm;
+-
++#define NOT_FOUND -1
+ TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
+ 
+-Person* TaskManager::isEmployeeExist(const string& personName){
+-    Person* currentEmployee = nullptr;
++int TaskManager::isEmployeeExist(const string& personName){
++    int currentEmployee = NOT_FOUND;
+     for (int i = 0; i < numOfEmployees; i++){
+-        if (employees[i]->getName() == personName){
+-            currentEmployee = employees[i];
++        if (employees[i].getName() == personName){
++            currentEmployee = i;
+         }
+     }
+     return currentEmployee;
+ }
+ 
+ void TaskManager::assignTask(const string &personName, const Task &task){
+-    Person* currentEmployee = isEmployeeExist(personName);
+-    if(currentEmployee == nullptr){
++    int currentEmployee = isEmployeeExist(personName);
++    if(currentEmployee == NOT_FOUND){
+         if(numOfEmployees == MAX_PERSONS){
+             throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
+         }
+-        currentEmployee = new Person(personName);
+-        employees[numOfEmployees++] = currentEmployee;
++        Person newEmployee(personName);
++        currentEmployee = numOfEmployees;
++        employees[numOfEmployees++] = newEmployee;
+     }
+     Task newTask(task.getPriority(), task.getType(), task.getDescription());
+     newTask.setId(idCounter++);
+-    currentEmployee->assignTask(newTask);
++    employees[currentEmployee].assignTask(newTask);
+ }
+ 
+ void TaskManager::completeTask(const string &personName){
+-    Person* currentEmployee = isEmployeeExist(personName);
+-    if(currentEmployee == nullptr){
++    int currentEmployee = isEmployeeExist(personName);
++    if(currentEmployee == NOT_FOUND){
+        return;
+     }
+     try
+     {
+-        currentEmployee->completeTask();
++        employees[currentEmployee].completeTask();
+         
+     }
+     catch (const std::runtime_error& e)
+@@ -58,9 +59,9 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+         return;
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+-        SortedList<Task> oldTasks = this->employees[i]->getTasks();
++        SortedList<Task> oldTasks = this->employees[i].getTasks();
+         SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
+-        this->employees[i]->setTasks(newTasks);
++        this->employees[i].setTasks(newTasks);
+     }
+ 
+ }
+@@ -68,7 +69,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+ 
+ void TaskManager::printAllEmployees() const{
+     for(int i = 0; i < numOfEmployees; i++){
+-        std::cout << *employees[i] << std::endl;
++        std::cout << employees[i] << std::endl;
+     }
+ }
+ 
+@@ -92,7 +93,7 @@ void TaskManager::printTasksByType(TaskType type) const{
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+     SortedList<Task> allTasks;
+     for(int i = 0; i < this->numOfEmployees; i++){
+-        SortedList<Task> tasks(this->employees[i]->getTasks());
++        SortedList<Task> tasks(this->employees[i].getTasks());
+         for(auto currentTask : tasks){
+             allTasks.insert(currentTask);
+         }
+diff --git a/TaskManager.h b/TaskManager.h
+index 992c707..909637d 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -18,8 +18,8 @@ private:
+     static const int MAX_PERSONS = 10;
+     int idCounter;
+     int numOfEmployees;
+-    Person* employees[MAX_PERSONS];
+-    Person* isEmployeeExist(const string& personName);
++    Person employees[MAX_PERSONS];
++    int isEmployeeExist(const string& personName);
+     const Task setPriority(const Task& tasks, TaskType type, int priority);
+     SortedList<Task> getAllEmployeesTasks() const;
+ 
+
+commit 54cee0e14013897058629fb37dae5acd52b83cd8
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sun Jan 5 19:13:09 2025 +0200
+
+    fix > in add
+
+diff --git a/SortedList.h b/SortedList.h
+index 97a85b5..fd63b1e 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -67,7 +67,7 @@ namespace mtm {
+                     return;
+                 }
+                 //if we arrived at the orderly place of the new node
+-                if (newNode < this->next) {
++                if (newNode > this->next) {
+                     assert(!this->next->isTail());
+                     this->addImmediate(newNode);
+                     assert(this->isSorted());
+
+commit e4dfb1d8d405838796d3452527b0b68840e0371b
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sun Jan 5 19:09:13 2025 +0200
+
+    add > operator
+
+diff --git a/SortedList.h b/SortedList.h
+index 8d19288..97a85b5 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -17,7 +17,7 @@ namespace mtm {
+         class ConstIterator;
+         //class Iterator;
+         class SortedListNode {
+-            //TODO maybe delete these comment lines
++        //TODO maybe delete these comment lines
+             //the members of this class are only accessible by SortedList class
+         private:
+             friend class SortedList<T>;
+@@ -140,6 +140,15 @@ namespace mtm {
+                 return (this->data > other->data);
+             }
+ 
++            friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
++                assert(!lhs.isHead());
++                if (rhs.isTail()) {
++                    return true;
++                }
++                return (lhs.data > rhs.data);
++            }
++
++
+             bool operator<(SortedListNode* other) const {
+                 bool equal = *this == *other;
+                 bool greater = *this > *other;
+
+commit 1e6c054e84118ecea4901048a41a787479dbf4d6
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sun Jan 5 18:44:14 2025 +0200
+
+    changing TM c'tor
+
+diff --git a/TaskManager.h b/TaskManager.h
+index d5369e8..992c707 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -31,7 +31,7 @@ public:
+      *
+      * Note - you may add =default if needed.
+      */
+-    TaskManager() : idCounter(0), numOfEmployees(0) {};
++    TaskManager();
+ 
+     /**
+      * @brief Deleted copy constructor to prevent copying of TaskManager objects.
+
+commit 9045c6eb82e85637eed83e396e967e71fb86ec40
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sun Jan 5 18:43:03 2025 +0200
+
+    removing  static from idCounter
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 2fc9060..d1eef57 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -2,7 +2,7 @@
+ #include "TaskManager.h"
+ using namespace mtm;
+ 
+-int TaskManager::idCounter = 0;
++TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
+ 
+ Person* TaskManager::isEmployeeExist(const string& personName){
+     Person* currentEmployee = nullptr;
+diff --git a/TaskManager.h b/TaskManager.h
+index f2ee51d..d5369e8 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -16,8 +16,8 @@ private:
+      * @brief Maximum number of persons the TaskManager can handle.
+      */
+     static const int MAX_PERSONS = 10;
+-    static int idCounter;
+-    int numOfEmployees = 0;
++    int idCounter;
++    int numOfEmployees;
+     Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName);
+     const Task setPriority(const Task& tasks, TaskType type, int priority);
+@@ -31,7 +31,7 @@ public:
+      *
+      * Note - you may add =default if needed.
+      */
+-    TaskManager() = default;
++    TaskManager() : idCounter(0), numOfEmployees(0) {};
+ 
+     /**
+      * @brief Deleted copy constructor to prevent copying of TaskManager objects.
+
+commit a6d4adbfe69f4db7f0e586ddd38d579643a89cea
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sun Jan 5 18:38:23 2025 +0200
+
+    fix default constructor
+
+diff --git a/SortedList.h b/SortedList.h
+index cc122f7..8d19288 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -15,6 +15,7 @@ namespace mtm {
+         //wrapping function provides flexibility with static like parameters such as
+         //head and tail, without forcing a single instance of the list class.
+         class ConstIterator;
++        //class Iterator;
+         class SortedListNode {
+             //TODO maybe delete these comment lines
+             //the members of this class are only accessible by SortedList class
+@@ -31,8 +32,7 @@ namespace mtm {
+             }
+ 
+             //FIXME might be redundant
+-            SortedListNode(SortedListNode* other) {
+-                this();
++            SortedListNode(SortedListNode* other) : SortedListNode() {
+                 this->data = new T(other->data);
+             }
+ 
+@@ -204,6 +204,16 @@ namespace mtm {
+             return ConstIterator(this->tail);
+         }
+ 
++        /**
++        ConstIterator begin() {
++            return ConstIterator(this->head->next);
++        }
++
++        ConstIterator end() {
++            return ConstIterator(this->tail);
++        }
++        */
++
+         SortedList() : listLength(0){
+             try {
+                 this->head = new SortedListNode();
+@@ -314,7 +324,7 @@ namespace mtm {
+ 
+         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+         
+-        void remove(ConstIterator iter){
++        void remove(const ConstIterator& iter){
+             if(iter == this->end()) {
+                 return;
+             }
+@@ -379,13 +389,15 @@ namespace mtm {
+     class SortedList<T>::ConstIterator {
+         private:
+             friend class SortedList<T>;
+-            SortedListNode* current;
+-            ConstIterator(SortedListNode* current) : current(current) {}
++            const SortedListNode* current;
++            ConstIterator(const SortedListNode* current) : current(current) {}
+         public:
+-            ConstIterator(ConstIterator& other) = default;
++            ConstIterator(const ConstIterator& other) {
++                this->current = other.current;
++            }
+             ConstIterator& operator=(const ConstIterator& other) = default;
+             ~ConstIterator() = default;
+-            const T& operator*() const{
++            T& operator*() const{
+                 assert(!current->isHead());
+                 if(current->isTail()) {
+                     throw std::out_of_range("Iterator is out of range");
+
+commit 701211041a14220a115f8612ae1a5f62a1e7dfd7
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 22:14:52 2025 +0200
+
+    adding const
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index e71e2be..2fc9060 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -44,7 +44,7 @@ void TaskManager::completeTask(const string &personName){
+     }
+ }
+ 
+-Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
++const Task TaskManager::setPriority(const Task& tasks, TaskType type, int priority){
+     if(tasks.getType() == type){
+         Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
+         resultTasks.setId(tasks.getId());
+
+commit 8b75341e5c20f2330702565c2dd4ce884fe2e794
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 22:13:57 2025 +0200
+
+    adding const
+
+diff --git a/TaskManager.h b/TaskManager.h
+index d06a25f..f2ee51d 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -20,7 +20,7 @@ private:
+     int numOfEmployees = 0;
+     Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName);
+-    Task setPriority(Task tasks, TaskType type, int priority);
++    const Task setPriority(const Task& tasks, TaskType type, int priority);
+     SortedList<Task> getAllEmployeesTasks() const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+
+commit 684f8095f105676b02214a290bfce79cc6cd58d1
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 22:13:30 2025 +0200
+
+    moving isEmpty() up
+
+diff --git a/SortedList.h b/SortedList.h
+index b3842f7..cc122f7 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -14,6 +14,7 @@ namespace mtm {
+         //provides the de-facto interface for interacting with SortedListNode,
+         //wrapping function provides flexibility with static like parameters such as
+         //head and tail, without forcing a single instance of the list class.
++        class ConstIterator;
+         class SortedListNode {
+             //TODO maybe delete these comment lines
+             //the members of this class are only accessible by SortedList class
+@@ -158,8 +159,12 @@ namespace mtm {
+         SortedListNode* head;
+         SortedListNode* tail;
+ 
++        bool isEmpty() const{
++            return (this->listLength == 0);
++        }
++
+         bool isSorted() const {
+-            if (this->isEmpty()){
++            if ((this->isEmpty())){
+                 return true;
+             }
+             return head->isSorted();
+@@ -167,7 +172,7 @@ namespace mtm {
+ 
+         bool verifyLength() const {
+             int actualLength = 0;
+-            for (T& data : this) {
++            for(const T& data : *this) {
+                 ++actualLength;
+             }
+             return actualLength == this->listLength;
+@@ -177,9 +182,6 @@ namespace mtm {
+             return (this->isSorted())&&(this->verifyLength());
+         }
+ 
+-        inline bool isEmpty(){
+-            return this->listLength == 0;
+-        }
+ 
+         void deleteNode(SortedListNode* node) {
+             if (node == nullptr) {
+@@ -192,7 +194,7 @@ namespace mtm {
+ 
+         public:
+         //class NodeIterator;
+-        class ConstIterator;
++        //class ConstIterator;
+ 
+         ConstIterator begin() const {
+             return ConstIterator(this->head->next);
+
+commit 999c73182a4f49919f94ab13bb2e3b1346469295
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 20:48:41 2025 +0200
+
+    fixing conflicts
+
+diff --git a/SortedList.h b/SortedList.h
+index 5eb8caa..b3842f7 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -111,7 +111,7 @@ namespace mtm {
+                 // if (data == nullptr) {
+                 //     //TODO invalid argument
+                 // }
+-                SortedListNode * newNode = new SortedListNode(data);
++                SortedListNode* newNode = new SortedListNode(data);
+                 this->add(newNode);
+                 assert(this->isSorted());
+             }
+@@ -181,7 +181,6 @@ namespace mtm {
+             return this->listLength == 0;
+         }
+ 
+-        void deleteNode(SortedListNode* node) {
+         void deleteNode(SortedListNode* node) {
+             if (node == nullptr) {
+                 return;
+@@ -191,7 +190,7 @@ namespace mtm {
+             assert(this->verifyList());
+         }
+ 
+-    public:
++        public:
+         //class NodeIterator;
+         class ConstIterator;
+ 
+@@ -313,7 +312,7 @@ namespace mtm {
+ 
+         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+         
+-        void remove(ConstIterator& iter){
++        void remove(ConstIterator iter){
+             if(iter == this->end()) {
+                 return;
+             }
+@@ -374,7 +373,7 @@ namespace mtm {
+          */
+     };
+ 
+-    template <typename T>
++    template <class T>
+     class SortedList<T>::ConstIterator {
+         private:
+             friend class SortedList<T>;
+@@ -432,59 +431,59 @@ namespace mtm {
+     };
+ 
+ 
+-     template <class T>
+-    class SortedList<T>::NodeIterator {
+-        /**
+-         * the class should support the following public interface:
+-         * if needed, use =defualt / =delete
+-         *
+-         * constructors and destructor:
+-         * 1. a ctor(or ctors) your implementation needs
+-         * 2. copy constructor
+-         * 3. operator= - assignment operator
+-         * 4. ~ConstIterator() - destructor
+-         *
+-         * operators:
+-         * 5. operator* - returns the element the iterator points to
+-         * 6. operator++ - advances the iterator to the next element
+-         * 7. operator!= - returns true if the iterator points to a different element
+-         *
+-         */
+-        private:
+-        SortedListNode* current;
+-        int index;
+-        public:
+-
+-        NodeIterator() = delete;
+-        NodeIterator(SortedListNode* current) : current(current) {}
+-
+-        bool operator==(const NodeIterator& other) const {
+-            return this->current == other.current;
+-        }
+-
+-        bool operator!=(const NodeIterator& other) const {
+-            return !(this == other);
+-        }
+-
+-        bool operator<(const NodeIterator& other) const {
+-            return this->index < other.index;
+-        }
+-
+-        bool operator>(const NodeIterator& other) const {
+-            return (this != other) && (!(this < other));
+-        }
+-
+-        bool operator<=(const NodeIterator& other) const {
+-            return !(*this > other);
+-        }
+-
+-        bool operator>=(const NodeIterator& other) const {
+-            return !(*this < other);
+-        }
+-
+-        T operator*() const {
+-            return this->current;
+-        }
+-
+-    };
++    // template <class T>
++    // class SortedList<T>::NodeIterator {
++    //     /**
++    //      * the class should support the following public interface:
++    //      * if needed, use =defualt / =delete
++    //      *
++    //      * constructors and destructor:
++    //      * 1. a ctor(or ctors) your implementation needs
++    //      * 2. copy constructor
++    //      * 3. operator= - assignment operator
++    //      * 4. ~ConstIterator() - destructor
++    //      *
++    //      * operators:
++    //      * 5. operator* - returns the element the iterator points to
++    //      * 6. operator++ - advances the iterator to the next element
++    //      * 7. operator!= - returns true if the iterator points to a different element
++    //      *
++    //      */
++    //     private:
++    //     SortedListNode* current;
++    //     int index;
++    //     public:
++
++    //     NodeIterator() = delete;
++    //     NodeIterator(SortedListNode* current) : current(current) {}
++
++    //     bool operator==(const NodeIterator& other) const {
++    //         return this->current == other.current;
++    //     }
++
++    //     bool operator!=(const NodeIterator& other) const {
++    //         return !(this == other);
++    //     }
++
++    //     bool operator<(const NodeIterator& other) const {
++    //         return this->index < other.index;
++    //     }
++
++    //     bool operator>(const NodeIterator& other) const {
++    //         return (this != other) && (!(this < other));
++    //     }
++
++    //     bool operator<=(const NodeIterator& other) const {
++    //         return !(*this > other);
++    //     }
++
++    //     bool operator>=(const NodeIterator& other) const {
++    //         return !(*this < other);
++    //     }
++
++    //     T operator*() const {
++    //         return this->current;
++    //     }
++
++    // };
+ };
+\ No newline at end of file
+
+commit 0739a79536eb5b6b964c33a3e762344f497133af
+Merge: 5fa2b37 0cee188
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 20:42:12 2025 +0200
+
+    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3
+
+commit 5fa2b3725ac3931239928a0db2788fe23eb6bd7a
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 20:29:11 2025 +0200
+
+    moving  SortedListNode class back to private, removing <T>,
+
+diff --git a/SortedList.h b/SortedList.h
+index dcac80f..bd0711a 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -14,7 +14,145 @@ namespace mtm {
+         //provides the de-facto interface for interacting with SortedListNode,
+         //wrapping function provides flexibility with static like parameters such as
+         //head and tail, without forcing a single instance of the list class.
+-        class SortedListNode;
++        class SortedListNode {
++            //TODO maybe delete these comment lines
++            //the members of this class are only accessible by SortedList class
++        private:
++            friend class SortedList<T>;
++            SortedListNode* prev;
++            SortedListNode* next;
++            T* data;
++
++            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
++
++            SortedListNode(T data): prev(nullptr), next(nullptr) {
++                this->data = new T(data);
++            }
++
++            //FIXME might be redundant
++            SortedListNode(SortedListNode* other) {
++                this();
++                this->data = new T(other->data);
++            }
++
++            ~SortedListNode() {
++                this->prev = nullptr;
++                this->next = nullptr;
++                delete this->data;
++            }
++
++            void deleteNode() {
++                this->prev->next = this->next;
++                this->next->prev = this->prev;
++                this->next = nullptr;
++                this->prev = nullptr;
++                delete this;
++            }
++
++            void addImmediate(SortedListNode* newNode) {
++                assert(!this->isTail());
++                this->next->prev = newNode;
++                newNode->next = this->next;
++                this->next = newNode;
++                newNode->prev = this;
++            }
++
++            void add(SortedListNode* newNode) {
++                //if we arrived at the end of the chain
++                if (!this->hasNext()) {
++                    assert(this->next->isTail());
++                    this->addImmediate(newNode);
++                    assert(this->isSorted());
++                    return;
++                }
++                //if we arrived at the orderly place of the new node
++                if (newNode < this->next) {
++                    assert(!this->next->isTail());
++                    this->addImmediate(newNode);
++                    assert(this->isSorted());
++                    return;
++                }
++                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
++                this->next->add(newNode);
++                assert(this->isSorted());
++            }
++
++            // SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
++            // prev(prev), next(next), data(data) {}
++
++            /**
++             * overload of the isSorted function, to differentiate calls between
++             * the head and the rest of the chain
++             *
++             * @return if the list is sorted
++             */
++            bool isSorted(int) const {
++                if (this->isTail()){
++                    return true;
++                }
++                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
++            }
++
++        public:
++
++            inline bool isTail() const {
++                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
++            }
++
++            inline bool isHead() const {
++                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
++            }
++
++            inline bool hasNext()   const {
++                return !(this->next->isTail());
++            }
++
++            void insert(const T& data) {
++                // if (data == nullptr) {
++                //     //TODO invalid argument
++                // }
++                SortedListNode * newNode = new SortedListNode(data);
++                this->add(newNode);
++                assert(this->isSorted());
++            }
++
++            /**
++             *check if the list is sorted
++             *
++             * @return if the list is sorted
++             */
++            bool isSorted() const {
++                //the head breaks the sorted logic, if it is the head- skip it.
++                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
++            }
++
++            //FIXME CORRECT FOR SYNTAX
++            bool operator==(SortedListNode* other) const {
++                return (this->data == other->data);
++            }
++
++            bool operator!=(SortedListNode* other) const {
++                return !(*this == *other);
++            }
++
++            bool operator>(SortedListNode* other) const {
++                return (this->data > other->data);
++            }
++
++            bool operator<(SortedListNode* other) const {
++                bool equal = *this == *other;
++                bool greater = *this > *other;
++                return (!equal) && (!greater);
++            }
++
++            bool operator<=(SortedListNode* other) const {
++                return !(*this > *other);
++            }
++
++            bool operator>=(const SortedListNode* other) const {
++                return !(*this < *other);
++            }
++        };
+         private:
+         int listLength;
+         SortedListNode* head;
+@@ -43,7 +181,7 @@ namespace mtm {
+             return this->listLength == 0;
+         }
+ 
+-        void deleteNode(SortedListNode<T>* node) {
++        void deleteNode(SortedListNode* node) {
+             if (node == nullptr) {
+                 return;
+             }
+@@ -53,13 +191,21 @@ namespace mtm {
+         }
+ 
+     public:
+-        class NodeIterator;
++        //class NodeIterator;
+         class ConstIterator;
+ 
+-        SortedList<T>() : listLength(0){
++        ConstIterator begin() const {
++            return ConstIterator(this->head->next);
++        }
++
++        ConstIterator end() const {
++            return ConstIterator(this->tail);
++        }
++
++        SortedList() : listLength(0){
+             try {
+-                this->head = new SortedListNode<T>();
+-                this->tail = new SortedListNode<T>();
++                this->head = new SortedListNode();
++                this->tail = new SortedListNode();
+             } catch (std::bad_alloc& e) {
+                 delete this->head;
+                 delete this->tail;
+@@ -68,32 +214,40 @@ namespace mtm {
+             this->tail->prev = this->head;
+         }
+ 
+-        SortedList<T>(const SortedList& other): SortedList(){
+-            for(T& currentData : other) {
++        SortedList(const SortedList<T>& other): SortedList<T>(){
++            for(const T& currentData : other) {
+                 this->insert(currentData);
+             }
+             assert(this->verifyList());
+         }
+ 
+-        SortedList<T>& operator=(const SortedList& other) {
++        SortedList<T>& operator=(const SortedList<T>& other) {
+             if(this == &other) {
+                 return *this;
+             }
+             
+-            for(SortedList<T> current : *this) {
+-                this->remove(current);
+-            }
+-            // SortedListNode<T>* current = this->head->next;
+-            // while(current != this->tail) {
+-            //     SortedListNode<T>* next = current->next;
+-            //     delete current;
+-            //     current = next;
++            // for(ConstIterator iter : *this) {
++            //     this->remove(*iter);
+             // }
++            SortedListNode* current = this->head->next;
++            while(current != this->tail) {
++                SortedListNode* next = current->next;
++                delete current;
++                current = next;
++            }
+            this->listLength = 0;
+             if(other.head == nullptr) {
+                 return *this;
+             }
+-            for(T& currentData : other) { //TODO create iterator for SortedListNodes
++            // for(ConstIterator iter : other) {
++            //     this->insert(*iter);
++            // }
++            // ConstIterator otherCurrent = other.begin();
++            // while(otherCurrent != other.end()) {
++            //     this->insert(*otherCurrent);
++            //     ++otherCurrent;
++            // }
++            for(const T& currentData : other) { //TODO create iterator for SortedListNodes
+                 this->insert(currentData);
+             }
+             return *this;
+@@ -107,6 +261,26 @@ namespace mtm {
+             }
+         }
+ 
++        // void insert(const T& newElement) {
++        //     ConstIterator iter = this->begin();
++        //     while( newElement < *iter && iter != this->end()) {
++        //         ++iter;
++        //     }
++        //     if(iter == this->end()) {
++        //         SortedListNode* newNode = new SortedListNode(newElement);
++        //         this->tail->prev = newNode;
++        //         newNode->next = this->tail;
++        //         ++(this->listLength);
++        //         return;
++        //     }
++        //     SortedListNode* newNode = new SortedListNode(newElement);
++        //     newNode->prev = iter.current;
++        //     newNode->next = iter.current->next;
++        //     iter.current->next->prev = newNode;
++        //     iter.current->next = newNode;
++        //     ++(this->listLength);
++        // }
++
+         void insert(const T& newElement) {
+             this->head->insert(newElement);
+             ++(this->listLength);
+@@ -137,7 +311,7 @@ namespace mtm {
+ 
+         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+         
+-        void remove(ConstIterator<T>& iter){
++        void remove(ConstIterator iter){
+             if(iter == this->end()) {
+                 return;
+             }
+@@ -145,19 +319,19 @@ namespace mtm {
+                 this->head = this->head->next;
+             }
+             else{
+-                SortedListNode* nextNode = iter->next;
+-                SortedListNode* prevNode = iter->prev;
++                SortedListNode* nextNode = iter.current->next;
++                SortedListNode* prevNode = iter.current->prev;
+                 prevNode->next = nextNode;
+                 nextNode->prev = prevNode;
+             }
+-            delete iter;
++            delete iter.current;
+             (this->listLength)--;
+         }
+-
++        
+         template <class Condition>
+         SortedList<T> filter(Condition condition) const{
+             SortedList<T> filteredList;
+-            for(T& val : this){
++            for(const T& val : *this){
+                 if(condition(val)) {
+                     filteredList.insert(val);
+                 }
+@@ -168,19 +342,11 @@ namespace mtm {
+         template <class Function>
+         SortedList<T> apply(Function function) const{
+             SortedList<T> appliedList;
+-            for(T& val : this){
++            for(const T& val : *this){
+                 appliedList.insert(function(val));
+             }
+             return appliedList;
+         }
+-
+-        ConstIterator begin() const {
+-            return ConstIterator(this->head->next);
+-        }
+-
+-        ConstIterator end() const {
+-            return ConstIterator(this->tail);
+-        }
+         /**
+          *
+          * the class should support the following public interface:
+@@ -206,12 +372,12 @@ namespace mtm {
+          */
+     };
+ 
+-    template <class T>
++    template <typename T>
+     class SortedList<T>::ConstIterator {
+         private:
+             friend class SortedList<T>;
+-            SortedListNode<T>* current;
+-            ConstIterator(SortedListNode<T>* current) : current(current) {}
++            SortedListNode* current;
++            ConstIterator(SortedListNode* current) : current(current) {}
+         public:
+             ConstIterator(ConstIterator& other) = default;
+             ConstIterator& operator=(const ConstIterator& other) = default;
+@@ -236,6 +402,14 @@ namespace mtm {
+             bool operator>(const ConstIterator& other) const{
+                 return current->data > other.current->data;
+             }
++            bool operator==(const ConstIterator& other) const{
++                return current == other.current;
++            }
++            ConstIterator operator++(int){
++                ConstIterator temp = *this;
++                ++(*this);
++                return temp;
++            }
+ 
+     /**
+      * the class should support the following public interface:
+@@ -255,203 +429,63 @@ namespace mtm {
+      */
+     };
+ 
+-    template <class T>
+-    class SortedList<T>::SortedListNode {
+-            //TODO maybe delete these comment lines
+-            //the members of this class are only accessible by SortedList class
+-        private:
+-            friend class SortedList<T>;
+-            SortedListNode * prev;
+-            SortedListNode * next;
+-            T* data;
+-
+-            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+-
+-            SortedListNode(T data): prev(nullptr), next(nullptr) {
+-                this->data = new T(data);
+-            }
+-
+-            //FIXME might be redundant
+-            SortedListNode(SortedListNode<T>* other) {
+-                this();
+-                this->data = new T(other->data);
+-            }
+-
+-            ~SortedListNode() {
+-                this->prev = nullptr;
+-                this->next = nullptr;
+-                delete this->data;
+-            }
+-
+-            void deleteNode() {
+-                this->prev->next = this->next;
+-                this->next->prev = this->prev;
+-                this->next = nullptr;
+-                this->prev = nullptr;
+-                delete this;
+-            }
+-
+-            void addImmediate(SortedListNode<T>* newNode) {
+-                assert(!this->isTail());
+-                this->next->prev = newNode;
+-                newNode->next = this->next;
+-                this->next = newNode;
+-                newNode->prev = this;
+-            }
+-
+-            void add(SortedListNode<T>* newNode) {
+-                //if we arrived at the end of the chain
+-                if (!this->hasNext()) {
+-                    assert(this->next->isTail());
+-                    this->addImmediate(newNode);
+-                    assert(this->isSorted());
+-                    return;
+-                }
+-                //if we arrived at the orderly place of the new node
+-                if (newNode > this->next) {
+-                    assert(!this->next->isTail());
+-                    this->addImmediate(newNode);
+-                    assert(this->isSorted());
+-                    return;
+-                }
+-                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+-                this->next->add(newNode);
+-                assert(this->isSorted());
+-            }
+-
+-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
+-            prev(prev), next(next), data(data) {}
+-
+-            /**
+-             * overload of the isSorted function, to differentiate calls between
+-             * the head and the rest of the chain
+-             *
+-             * @return if the list is sorted
+-             */
+-            bool isSorted(int) const {
+-                if (this->isTail()){
+-                    return true;
+-                }
+-                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+-            }
+-
+-        public:
+-
+-            inline bool isTail() const {
+-                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+-            }
+-
+-            inline bool isHead() const {
+-                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+-            }
+-
+-            inline bool hasNext()   const {
+-                return !(this->next->isTail());
+-            }
+-
+-            void insert(T const& const data) {
+-                if (data == nullptr) {
+-                    //TODO invalid argument
+-                }
+-                SortedListNode * newNode = new SortedListNode(data);
+-                this->add(newNode);
+-                assert(this->isSorted());
+-            }
+-
+-            /**
+-             *check if the list is sorted
+-             *
+-             * @return if the list is sorted
+-             */
+-            bool isSorted() const {
+-                //the head breaks the sorted logic, if it is the head- skip it.
+-                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+-            }
+-
+-            //FIXME CORRECT FOR SYNTAX
+-            bool operator==(SortedListNode<T>* other) const {
+-                return (this->data == other->data);
+-            }
+-
+-            bool operator!=(SortedListNode<T>* other) const {
+-                return !(*this == *other);
+-            }
+-
+-            bool operator>(SortedListNode<T>* other) const {
+-                return (this->data > other->data);
+-            }
+-
+-            bool operator<(SortedListNode<T>* other) const {
+-                bool equal = *this == *other;
+-                bool greater = *this > *other;
+-                return (!equal) && (!greater);
+-            }
+ 
+-            bool operator<=(SortedListNode<T>* other) const {
+-                return !(*this > *other);
+-            }
+-
+-            bool operator>=(const SortedListNode<T>* other) const {
+-                return !(*this < *other);
+-            }
+-        };
+-
+-    template <class T>
+-    class SortedList<T>::NodeIterator {
+-        /**
+-         * the class should support the following public interface:
+-         * if needed, use =defualt / =delete
+-         *
+-         * constructors and destructor:
+-         * 1. a ctor(or ctors) your implementation needs
+-         * 2. copy constructor
+-         * 3. operator= - assignment operator
+-         * 4. ~ConstIterator() - destructor
+-         *
+-         * operators:
+-         * 5. operator* - returns the element the iterator points to
+-         * 6. operator++ - advances the iterator to the next element
+-         * 7. operator!= - returns true if the iterator points to a different element
+-         *
+-         */
+-        private:
+-        SortedListNode<T>* current;
+-        int index;
+-        public:
+-
+-        NodeIterator() = delete;
+-
+-        NodeIterator(SortedListNode<T>* current) : current(current) {}
+-
+-        bool operator==(const NodeIterator& other) const {
+-            return this->current == other.current;
+-        }
+-
+-        bool operator!=(const NodeIterator& other) const {
+-            return !(this == other);
+-        }
+-
+-        bool operator<(const NodeIterator& other) const {
+-            return this->index < other.index;
+-        }
+-
+-        bool operator>(const NodeIterator& other) const {
+-            return (this != other) && (!(this < other));
+-        }
+-
+-        bool operator<=(const NodeIterator& other) const {
+-            return !(*this > other);
+-        }
+-
+-        bool operator>=(const NodeIterator& other) const {
+-            return !(*this < other);
+-        }
+-
+-        T operator*() const {
+-            return this->current;
+-        }
+-
+-
+-
+-    };
++    // template <class T>
++    // class SortedList<T>::NodeIterator {
++    //     /**
++    //      * the class should support the following public interface:
++    //      * if needed, use =defualt / =delete
++    //      *
++    //      * constructors and destructor:
++    //      * 1. a ctor(or ctors) your implementation needs
++    //      * 2. copy constructor
++    //      * 3. operator= - assignment operator
++    //      * 4. ~ConstIterator() - destructor
++    //      *
++    //      * operators:
++    //      * 5. operator* - returns the element the iterator points to
++    //      * 6. operator++ - advances the iterator to the next element
++    //      * 7. operator!= - returns true if the iterator points to a different element
++    //      *
++    //      */
++    //     private:
++    //     SortedListNode<T>* current;
++    //     int index;
++    //     public:
++
++    //     NodeIterator() = delete;
++
++    //     NodeIterator(SortedListNode<T>* current) : current(current) {}
++
++    //     bool operator==(const NodeIterator& other) const {
++    //         return this->current == other.current;
++    //     }
++
++    //     bool operator!=(const NodeIterator& other) const {
++    //         return !(this == other);
++    //     }
++
++    //     bool operator<(const NodeIterator& other) const {
++    //         return this->index < other.index;
++    //     }
++
++    //     bool operator>(const NodeIterator& other) const {
++    //         return (this != other) && (!(this < other));
++    //     }
++
++    //     bool operator<=(const NodeIterator& other) const {
++    //         return !(*this > other);
++    //     }
++
++    //     bool operator>=(const NodeIterator& other) const {
++    //         return !(*this < other);
++    //     }
++
++    //     T operator*() const {
++    //         return this->current;
++    //     }
++
++
++
++    // };
+ };
+\ No newline at end of file
+
+commit 1a750c59af64c4fef70ede64ac9fdb9f11bef424
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 20:25:33 2025 +0200
+
+    moving setPriority up, and removing space
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index c0bf6a9..e71e2be 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -24,7 +24,7 @@ void TaskManager::assignTask(const string &personName, const Task &task){
+         employees[numOfEmployees++] = currentEmployee;
+     }
+     Task newTask(task.getPriority(), task.getType(), task.getDescription());
+-    newTask.setId(++idCounter);
++    newTask.setId(idCounter++);
+     currentEmployee->assignTask(newTask);
+ }
+ 
+@@ -36,6 +36,7 @@ void TaskManager::completeTask(const string &personName){
+     try
+     {
+         currentEmployee->completeTask();
++        
+     }
+     catch (const std::runtime_error& e)
+     {
+@@ -43,6 +44,15 @@ void TaskManager::completeTask(const string &personName){
+     }
+ }
+ 
++Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
++    if(tasks.getType() == type){
++        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
++        resultTasks.setId(tasks.getId());
++        return resultTasks;
++    }
++    return tasks;
++}
++
+ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     if(priority <= 0){
+         return;
+@@ -55,19 +65,10 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+ 
+ }
+ 
+-Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
+-    if(tasks.getType() == type){
+-        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
+-        resultTasks.setId(tasks.getId());
+-        return resultTasks;
+-    }
+-    return tasks;
+-}
+ 
+ void TaskManager::printAllEmployees() const{
+     for(int i = 0; i < numOfEmployees; i++){
+         std::cout << *employees[i] << std::endl;
+-        std::cout << std::endl;
+     }
+ }
+ 
+@@ -81,8 +82,8 @@ void TaskManager::printAllTasks() const{
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+-    SortedList<Task> tasksByType = allTasks.filter([type]( Task task) { return (task.getType() == type);});
+-    for(const Task& currentTask : tasksByType){
++    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
++    for(auto currentTask : tasksByType){
+         std::cout << currentTask << std::endl;
+     }
+     std::cout << std::endl;
+
+commit 0cee1886b116f0b80546cff060398b8df95ef168
+Merge: db897c4 b24e030
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 20:08:57 2025 +0200
+
+    Merge remote-tracking branch 'origin/main'
+
+commit db897c42533e394ea27e05d8f0fb0e4745fe2c82
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 20:08:05 2025 +0200
+
+    refresh code
+
+diff --git a/SortedList.h b/SortedList.h
+index dcac80f..9636528 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -43,7 +43,7 @@ namespace mtm {
+             return this->listLength == 0;
+         }
+ 
+-        void deleteNode(SortedListNode<T>* node) {
++        void deleteNode(SortedListNode* node) {
+             if (node == nullptr) {
+                 return;
+             }
+@@ -56,10 +56,10 @@ namespace mtm {
+         class NodeIterator;
+         class ConstIterator;
+ 
+-        SortedList<T>() : listLength(0){
++        SortedList<T>() : listLength(0), head(nullptr), tail(nullptr) {
+             try {
+-                this->head = new SortedListNode<T>();
+-                this->tail = new SortedListNode<T>();
++                this->head = new SortedListNode();
++                this->tail = new SortedListNode();
+             } catch (std::bad_alloc& e) {
+                 delete this->head;
+                 delete this->tail;
+@@ -98,6 +98,7 @@ namespace mtm {
+             }
+             return *this;
+         }
++
+         ~SortedList() {
+             SortedListNode* current = this->head;
+             while(current != nullptr) {
+@@ -137,7 +138,7 @@ namespace mtm {
+ 
+         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+         
+-        void remove(ConstIterator<T>& iter){
++        void remove(ConstIterator& iter){
+             if(iter == this->end()) {
+                 return;
+             }
+@@ -150,8 +151,8 @@ namespace mtm {
+                 prevNode->next = nextNode;
+                 nextNode->prev = prevNode;
+             }
+-            delete iter;
+-            (this->listLength)--;
++            //delete iter;
++            --(this->listLength);
+         }
+ 
+         template <class Condition>
+@@ -210,8 +211,8 @@ namespace mtm {
+     class SortedList<T>::ConstIterator {
+         private:
+             friend class SortedList<T>;
+-            SortedListNode<T>* current;
+-            ConstIterator(SortedListNode<T>* current) : current(current) {}
++            SortedListNode* current;
++            ConstIterator(SortedListNode* current) : current(current) {}
+         public:
+             ConstIterator(ConstIterator& other) = default;
+             ConstIterator& operator=(const ConstIterator& other) = default;
+@@ -267,15 +268,16 @@ namespace mtm {
+ 
+             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+ 
+-            SortedListNode(T data): prev(nullptr), next(nullptr) {
+-                this->data = new T(data);
++            SortedListNode(T& data): SortedListNode() {
++                try {
++                    this->data = new T(data);
++                } catch (std::bad_alloc& e) {
++                    delete this;
++                }
+             }
+ 
+             //FIXME might be redundant
+-            SortedListNode(SortedListNode<T>* other) {
+-                this();
+-                this->data = new T(other->data);
+-            }
++            SortedListNode(SortedListNode* other) : SortedListNode(other->data) {}
+ 
+             ~SortedListNode() {
+                 this->prev = nullptr;
+@@ -291,7 +293,7 @@ namespace mtm {
+                 delete this;
+             }
+ 
+-            void addImmediate(SortedListNode<T>* newNode) {
++            void addImmediate(SortedListNode* newNode) {
+                 assert(!this->isTail());
+                 this->next->prev = newNode;
+                 newNode->next = this->next;
+@@ -299,7 +301,7 @@ namespace mtm {
+                 newNode->prev = this;
+             }
+ 
+-            void add(SortedListNode<T>* newNode) {
++            void add(SortedListNode* newNode) {
+                 //if we arrived at the end of the chain
+                 if (!this->hasNext()) {
+                     assert(this->next->isTail());
+@@ -319,7 +321,7 @@ namespace mtm {
+                 assert(this->isSorted());
+             }
+ 
+-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
++            SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
+             prev(prev), next(next), data(data) {}
+ 
+             /**
+@@ -349,7 +351,7 @@ namespace mtm {
+                 return !(this->next->isTail());
+             }
+ 
+-            void insert(T const& const data) {
++            void insert(T const& data) {
+                 if (data == nullptr) {
+                     //TODO invalid argument
+                 }
+@@ -369,29 +371,29 @@ namespace mtm {
+             }
+ 
+             //FIXME CORRECT FOR SYNTAX
+-            bool operator==(SortedListNode<T>* other) const {
++            bool operator==(SortedListNode* other) const {
+                 return (this->data == other->data);
+             }
+ 
+-            bool operator!=(SortedListNode<T>* other) const {
++            bool operator!=(SortedListNode* other) const {
+                 return !(*this == *other);
+             }
+ 
+-            bool operator>(SortedListNode<T>* other) const {
++            bool operator>(SortedListNode* other) const {
+                 return (this->data > other->data);
+             }
+ 
+-            bool operator<(SortedListNode<T>* other) const {
++            bool operator<(SortedListNode* other) const {
+                 bool equal = *this == *other;
+                 bool greater = *this > *other;
+                 return (!equal) && (!greater);
+             }
+ 
+-            bool operator<=(SortedListNode<T>* other) const {
++            bool operator<=(SortedListNode* other) const {
+                 return !(*this > *other);
+             }
+ 
+-            bool operator>=(const SortedListNode<T>* other) const {
++            bool operator>=(const SortedListNode* other) const {
+                 return !(*this < *other);
+             }
+         };
+@@ -415,13 +417,13 @@ namespace mtm {
+          *
+          */
+         private:
+-        SortedListNode<T>* current;
++        SortedListNode* current;
+         int index;
+         public:
+ 
+         NodeIterator() = delete;
+ 
+-        NodeIterator(SortedListNode<T>* current) : current(current) {}
++        NodeIterator(SortedListNode* current) : current(current) {}
+ 
+         bool operator==(const NodeIterator& other) const {
+             return this->current == other.current;
+
+commit b24e030499a7cd2ec419e9220647920f6aca9492
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 18:42:43 2025 +0200
+
+    fixing TaskManager print funcs
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index f134e46..c0bf6a9 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -49,17 +49,16 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+         SortedList<Task> oldTasks = this->employees[i]->getTasks();
+-        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
++        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
+         this->employees[i]->setTasks(newTasks);
+     }
+ 
+ }
+ 
+-SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
+-    if(tasks.begin()->getType() == type){
+-        SortedList<Task> resultTasks;
+-        Task newTask = Task(tasks.begin()->getPriority() + priority, tasks.begin()->getType(), tasks.begin()->getDescription());
+-        resultTasks.insert(newTask);
++Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
++    if(tasks.getType() == type){
++        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
++        resultTasks.setId(tasks.getId());
+         return resultTasks;
+     }
+     return tasks;
+@@ -74,17 +73,17 @@ void TaskManager::printAllEmployees() const{
+ 
+ void TaskManager::printAllTasks() const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+-    for(SortedList<Task> currentTask : allTasks){
+-        std::cout << *currentTask.begin().data << std::endl;
++    for(auto currentTask : allTasks){
++        std::cout << currentTask << std::endl;
+     }
+     std::cout << std::endl;
+ }
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+     SortedList<Task> allTasks = getAllEmployeesTasks();
+-    SortedList<Task> tasksByType = allTasks.filter([type](SortedList<Task> sortedListTask) { return (sortedListTask.begin().getType() == type); });
+-    for(SortedList<Task> currentTask : tasksByType){
+-        std::cout << *currentTask.begin().data << std::endl;
++    SortedList<Task> tasksByType = allTasks.filter([type]( Task task) { return (task.getType() == type);});
++    for(const Task& currentTask : tasksByType){
++        std::cout << currentTask << std::endl;
+     }
+     std::cout << std::endl;
+    
+@@ -92,9 +91,9 @@ void TaskManager::printTasksByType(TaskType type) const{
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+     SortedList<Task> allTasks;
+     for(int i = 0; i < this->numOfEmployees; i++){
+-        SortedList<Task> tasks = this->employees[i]->getTasks();
+-        for(SortedList<Task> currentTask : tasks){
+-            allTasks.insert(currentTask.begin().data);
++        SortedList<Task> tasks(this->employees[i]->getTasks());
++        for(auto currentTask : tasks){
++            allTasks.insert(currentTask);
+         }
+     }
+     return allTasks;
+diff --git a/TaskManager.h b/TaskManager.h
+index f8ca722..d06a25f 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -20,7 +20,7 @@ private:
+     int numOfEmployees = 0;
+     Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName);
+-    SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
++    Task setPriority(Task tasks, TaskType type, int priority);
+     SortedList<Task> getAllEmployeesTasks() const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+
+commit c713a8026667efb7613161343ec0e66c333164e4
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 15:06:32 2025 +0200
+
+    Update SortedList.h
+
+diff --git a/SortedList.h b/SortedList.h
+index 06122d5..dcac80f 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -99,9 +99,9 @@ namespace mtm {
+             return *this;
+         }
+         ~SortedList() {
+-            SortedListNode<T>* current = this->head;
++            SortedListNode* current = this->head;
+             while(current != nullptr) {
+-                SortedListNode<T>* next = current->next;
++                SortedListNode* next = current->next;
+                 delete current;
+                 current = next;
+             }
+@@ -145,8 +145,8 @@ namespace mtm {
+                 this->head = this->head->next;
+             }
+             else{
+-                SortedListNode<T>* nextNode = iter->next;
+-                SortedListNode<T>* prevNode = iter->prev;
++                SortedListNode* nextNode = iter->next;
++                SortedListNode* prevNode = iter->prev;
+                 prevNode->next = nextNode;
+                 nextNode->prev = prevNode;
+             }
+
+commit 6ba105fa188ad39ed34c3aaa73a57df718251142
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 15:03:57 2025 +0200
+
+    add bad alloc  catch
+
+diff --git a/SortedList.h b/SortedList.h
+index 9fbca6b..06122d5 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -4,6 +4,7 @@
+ #include <stdexcept>
+ #include <cassert>
+ #include <functional>
++#include <new>
+ 
+ namespace mtm {
+     template <typename T>
+@@ -19,31 +20,6 @@ namespace mtm {
+         SortedListNode* head;
+         SortedListNode* tail;
+ 
+-        /**
+-         * //maybe can delete this function
+-        void addInitial(SortedListNode<T>* addThis){
+-            assert(this->isEmpty());
+-            this->head->add(addThis);
+-        }
+-         */
+-
+-
+-        /** //maybe can delete this function
+-        void add(SortedListNode<T>* addThis){
+-            if(this->isEmpty()){
+-                this->head->addImmediate(addThis);
+-                return;
+-            }
+-            for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
+-                if (addThis > node){
+-                    node->addPrevious(addThis); //TODO add addprevious method to nodes
+-                    return;
+-                }
+-            }
+-        }
+-         *
+-         */
+-
+         bool isSorted() const {
+             if (this->isEmpty()){
+                 return true;
+@@ -73,7 +49,7 @@ namespace mtm {
+             }
+             node->deleteNode();
+             --(this->listLength);
+-            assert(this->isSorted());
++            assert(this->verifyList());
+         }
+ 
+     public:
+@@ -81,19 +57,22 @@ namespace mtm {
+         class ConstIterator;
+ 
+         SortedList<T>() : listLength(0){
+-            this->head = new SortedListNode<T>();
+-            this->tail = new SortedListNode<T>();
++            try {
++                this->head = new SortedListNode<T>();
++                this->tail = new SortedListNode<T>();
++            } catch (std::bad_alloc& e) {
++                delete this->head;
++                delete this->tail;
++            }
+             this->head->next = this->tail;
+             this->tail->prev = this->head;
+         }
+ 
+-        SortedList<T>(const SortedList& other){
+-            this();
+-            if(other.head != nullptr){
+-                for(T& currentData : other) { //TODO create iterator for SortedListNodes
+-                    this->insert(currentData);
+-                }
++        SortedList<T>(const SortedList& other): SortedList(){
++            for(T& currentData : other) {
++                this->insert(currentData);
+             }
++            assert(this->verifyList());
+         }
+ 
+         SortedList<T>& operator=(const SortedList& other) {
+@@ -374,7 +353,7 @@ namespace mtm {
+                 if (data == nullptr) {
+                     //TODO invalid argument
+                 }
+-                SortedListNode<T> * newNode = new SortedListNode<T>(data);
++                SortedListNode * newNode = new SortedListNode(data);
+                 this->add(newNode);
+                 assert(this->isSorted());
+             }
+
+commit bced35e6545f6f007b737b89b1612d3f89eddfe7
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 15:03:10 2025 +0200
+
+    removing <T> from nodes
+
+diff --git a/SortedList.h b/SortedList.h
+index 3157a14..9fbca6b 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -14,10 +14,10 @@ namespace mtm {
+         //wrapping function provides flexibility with static like parameters such as
+         //head and tail, without forcing a single instance of the list class.
+         class SortedListNode;
+-    private:
++        private:
+         int listLength;
+-        SortedListNode<T>* head;
+-        SortedListNode<T>* tail;
++        SortedListNode* head;
++        SortedListNode* tail;
+ 
+         /**
+          * //maybe can delete this function
+@@ -276,14 +276,14 @@ namespace mtm {
+      */
+     };
+ 
+-    template <typename T>
++    template <class T>
+     class SortedList<T>::SortedListNode {
+             //TODO maybe delete these comment lines
+             //the members of this class are only accessible by SortedList class
+         private:
+             friend class SortedList<T>;
+-            SortedListNode<T> * prev;
+-            SortedListNode<T> * next;
++            SortedListNode * prev;
++            SortedListNode * next;
+             T* data;
+ 
+             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+
+commit f542a6ec1127d79172a165c882f71ee52f8a65b6
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 14:50:28 2025 +0200
+
+    Update SortedList.h
+
+diff --git a/SortedList.h b/SortedList.h
+index 3301a25..3157a14 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -53,7 +53,7 @@ namespace mtm {
+ 
+         bool verifyLength() const {
+             int actualLength = 0;
+-            for (SortedListNode<T>* node : this) {
++            for (T& data : this) {
+                 ++actualLength;
+             }
+             return actualLength == this->listLength;
+
+commit 9d518098f47b8134ede99944956a3187f4ab0a0d
+Merge: 6b8d1fb 8e9d98e
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 14:49:32 2025 +0200
+
+    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3
+
+commit 6b8d1fbf99b5c4c1586785d116d094c562e086e6
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 14:49:25 2025 +0200
+
+    edding scope to SortedList<T>::SortedListNode
+
+diff --git a/SortedList.h b/SortedList.h
+index 0a37def..f61b011 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -280,7 +280,7 @@ namespace mtm {
+     };
+ 
+     template <typename T>
+-    class SortedListNode {
++    class SortedList<T>::SortedListNode {
+             //TODO maybe delete these comment lines
+             //the members of this class are only accessible by SortedList class
+         private:
+
+commit 8e9d98e7899747a140954b0acb2cfae097754e35
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 14:46:14 2025 +0200
+
+    update copy constructor
+
+diff --git a/SortedList.h b/SortedList.h
+index 0a37def..c7513cf 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -87,14 +87,11 @@ namespace mtm {
+             this->tail->prev = this->head;
+         }
+ 
+-        SortedList<T>(const SortedList& other) : listLength(0){
+-            this->head = new SortedListNode<T>();
+-            this->tail = new SortedListNode<T>();
+-            this->head->next = this->tail;
+-            this->tail->prev = this->head;
++        SortedList<T>(const SortedList& other){
++            this();
+             if(other.head != nullptr){
+-                for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+-                    this->insert(currentOther.data);
++                for(T& currentData : other) { //TODO create iterator for SortedListNodes
++                    this->insert(currentData);
+                 }
+             }
+         }
+@@ -117,8 +114,8 @@ namespace mtm {
+             if(other.head == nullptr) {
+                 return *this;
+             }
+-            for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+-                this->insert(currentOther.data);
++            for(T& currentData : other) { //TODO create iterator for SortedListNodes
++                this->insert(currentData);
+             }
+             return *this;
+         }
+
+commit 0c42c335a9961c705e47ce704eff8bc9b9236b9b
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 14:45:13 2025 +0200
+
+    moving SortedListNode class outside of SortedList
+
+diff --git a/SortedList.h b/SortedList.h
+index 3c6af70..0a37def 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -13,148 +13,7 @@ namespace mtm {
+         //provides the de-facto interface for interacting with SortedListNode,
+         //wrapping function provides flexibility with static like parameters such as
+         //head and tail, without forcing a single instance of the list class.
+-        template <typename T>
+-        class SortedListNode {
+-            //TODO maybe delete these comment lines
+-            //the members of this class are only accessible by SortedList class
+-        private:
+-            friend class SortedList<T>;
+-            SortedListNode<T> * prev;
+-            SortedListNode<T> * next;
+-            T* data;
+-
+-            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+-
+-            SortedListNode(T data): prev(nullptr), next(nullptr) {
+-                this->data = new T(data);
+-            }
+-
+-            //FIXME might be redundant
+-            SortedListNode(SortedListNode<T>* other) {
+-                this();
+-                this->data = new T(other->data);
+-            }
+-
+-            ~SortedListNode() {
+-                this->prev = nullptr;
+-                this->next = nullptr;
+-                delete this->data;
+-            }
+-
+-            void deleteNode() {
+-                this->prev->next = this->next;
+-                this->next->prev = this->prev;
+-                this->next = nullptr;
+-                this->prev = nullptr;
+-                delete this;
+-            }
+-
+-
+-
+-            void addImmediate(SortedListNode<T>* newNode) {
+-                assert(!this->isTail());
+-                this->next->prev = newNode;
+-                newNode->next = this->next;
+-                this->next = newNode;
+-                newNode->prev = this;
+-            }
+-
+-            void add(SortedListNode<T>* newNode) {
+-                //if we arrived at the end of the chain
+-                if (!this->hasNext()) {
+-                    assert(this->next->isTail());
+-                    this->addImmediate(newNode);
+-                    assert(this->isSorted());
+-                    return;
+-                }
+-                //if we arrived at the orderly place of the new node
+-                if (newNode > this->next) {
+-                    assert(!this->next->isTail());
+-                    this->addImmediate(newNode);
+-                    assert(this->isSorted());
+-                    return;
+-                }
+-                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+-                this->next->add(newNode);
+-                assert(this->isSorted());
+-            }
+-
+-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
+-            prev(prev), next(next), data(data) {}
+-
+-            /**
+-             * overload of the isSorted function, to differentiate calls between
+-             * the head and the rest of the chain
+-             *
+-             * @return if the list is sorted
+-             */
+-            bool isSorted(int) const {
+-                if (this->isTail()){
+-                    return true;
+-                }
+-                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+-            }
+-
+-        public:
+-
+-            inline bool isTail() const {
+-                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+-            }
+-
+-            inline bool isHead() const {
+-                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+-            }
+-
+-            inline bool hasNext()   const {
+-                return !(this->next->isTail());
+-            }
+-
+-            void insert(T const& const data) {
+-                if (data == nullptr) {
+-                    //TODO invalid argument
+-                }
+-                SortedListNode<T> * newNode = new SortedListNode<T>(data);
+-                this->add(newNode);
+-                assert(this->isSorted());
+-            }
+-
+-            /**
+-             *check if the list is sorted
+-             *
+-             * @return if the list is sorted
+-             */
+-            bool isSorted() const {
+-                //the head breaks the sorted logic, if it is the head- skip it.
+-                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+-            }
+-
+-            //FIXME CORRECT FOR SYNTAX
+-            bool operator==(SortedListNode<T>* other) const {
+-                return (this->data == other->data);
+-            }
+-
+-            bool operator!=(SortedListNode<T>* other) const {
+-                return !(*this == *other);
+-            }
+-
+-            bool operator>(SortedListNode<T>* other) const {
+-                return (this->data > other->data);
+-            }
+-
+-            bool operator<(SortedListNode<T>* other) const {
+-                bool equal = *this == *other;
+-                bool greater = *this > *other;
+-                return (!equal) && (!greater);
+-            }
+-
+-            bool operator<=(SortedListNode<T>* other) const {
+-                return !(*this > *other);
+-            }
+-
+-            bool operator>=(const SortedListNode<T>* other) const {
+-                return !(*this < *other);
+-            }
+-        };
++        class SortedListNode;
+     private:
+         int listLength;
+         SortedListNode<T>* head;
+@@ -420,6 +279,147 @@ namespace mtm {
+      */
+     };
+ 
++    template <typename T>
++    class SortedListNode {
++            //TODO maybe delete these comment lines
++            //the members of this class are only accessible by SortedList class
++        private:
++            friend class SortedList<T>;
++            SortedListNode<T> * prev;
++            SortedListNode<T> * next;
++            T* data;
++
++            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
++
++            SortedListNode(T data): prev(nullptr), next(nullptr) {
++                this->data = new T(data);
++            }
++
++            //FIXME might be redundant
++            SortedListNode(SortedListNode<T>* other) {
++                this();
++                this->data = new T(other->data);
++            }
++
++            ~SortedListNode() {
++                this->prev = nullptr;
++                this->next = nullptr;
++                delete this->data;
++            }
++
++            void deleteNode() {
++                this->prev->next = this->next;
++                this->next->prev = this->prev;
++                this->next = nullptr;
++                this->prev = nullptr;
++                delete this;
++            }
++
++            void addImmediate(SortedListNode<T>* newNode) {
++                assert(!this->isTail());
++                this->next->prev = newNode;
++                newNode->next = this->next;
++                this->next = newNode;
++                newNode->prev = this;
++            }
++
++            void add(SortedListNode<T>* newNode) {
++                //if we arrived at the end of the chain
++                if (!this->hasNext()) {
++                    assert(this->next->isTail());
++                    this->addImmediate(newNode);
++                    assert(this->isSorted());
++                    return;
++                }
++                //if we arrived at the orderly place of the new node
++                if (newNode > this->next) {
++                    assert(!this->next->isTail());
++                    this->addImmediate(newNode);
++                    assert(this->isSorted());
++                    return;
++                }
++                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
++                this->next->add(newNode);
++                assert(this->isSorted());
++            }
++
++            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
++            prev(prev), next(next), data(data) {}
++
++            /**
++             * overload of the isSorted function, to differentiate calls between
++             * the head and the rest of the chain
++             *
++             * @return if the list is sorted
++             */
++            bool isSorted(int) const {
++                if (this->isTail()){
++                    return true;
++                }
++                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
++            }
++
++        public:
++
++            inline bool isTail() const {
++                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
++            }
++
++            inline bool isHead() const {
++                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
++            }
++
++            inline bool hasNext()   const {
++                return !(this->next->isTail());
++            }
++
++            void insert(T const& const data) {
++                if (data == nullptr) {
++                    //TODO invalid argument
++                }
++                SortedListNode<T> * newNode = new SortedListNode<T>(data);
++                this->add(newNode);
++                assert(this->isSorted());
++            }
++
++            /**
++             *check if the list is sorted
++             *
++             * @return if the list is sorted
++             */
++            bool isSorted() const {
++                //the head breaks the sorted logic, if it is the head- skip it.
++                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
++            }
++
++            //FIXME CORRECT FOR SYNTAX
++            bool operator==(SortedListNode<T>* other) const {
++                return (this->data == other->data);
++            }
++
++            bool operator!=(SortedListNode<T>* other) const {
++                return !(*this == *other);
++            }
++
++            bool operator>(SortedListNode<T>* other) const {
++                return (this->data > other->data);
++            }
++
++            bool operator<(SortedListNode<T>* other) const {
++                bool equal = *this == *other;
++                bool greater = *this > *other;
++                return (!equal) && (!greater);
++            }
++
++            bool operator<=(SortedListNode<T>* other) const {
++                return !(*this > *other);
++            }
++
++            bool operator>=(const SortedListNode<T>* other) const {
++                return !(*this < *other);
++            }
++        };
++
+     template <class T>
+     class SortedList<T>::NodeIterator {
+         /**
+
+commit 499a688d37e7b71e864021e5140d75b59d4d643f
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 14:38:02 2025 +0200
+
+    moving class decleration to public
+
+diff --git a/SortedList.h b/SortedList.h
+index b791850..3c6af70 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -9,8 +9,6 @@ namespace mtm {
+     template <typename T>
+     class SortedList {
+         //class SortedListNode; //TODO fix dependencies
+-        class ConstIterator;
+-        class NodeIterator;
+         //TODO maybe delete these comment lines
+         //provides the de-facto interface for interacting with SortedListNode,
+         //wrapping function provides flexibility with static like parameters such as
+@@ -220,6 +218,8 @@ namespace mtm {
+         }
+ 
+     public:
++        class NodeIterator;
++        class ConstIterator;
+ 
+         SortedList<T>() : listLength(0){
+             this->head = new SortedListNode<T>();
+@@ -369,7 +369,6 @@ namespace mtm {
+          * 11. filter - returns a new list with elements that satisfy a given condition V?
+          * 12. apply - returns a new list with elements that were modified by an operation V?
+          */
+-         class ConstIterator;
+     };
+ 
+     template <class T>
+
+commit 5454659792d9f569cccb83916cef97d83481d2df
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 14:32:46 2025 +0200
+
+    update to reuse existing code
+
+diff --git a/SortedList.h b/SortedList.h
+index 6ddbb86..b791850 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -383,13 +383,14 @@ namespace mtm {
+             ConstIterator& operator=(const ConstIterator& other) = default;
+             ~ConstIterator() = default;
+             const T& operator*() const{
+-                if(current == this->end()) {
++                assert(!current->isHead());
++                if(current->isTail()) {
+                     throw std::out_of_range("Iterator is out of range");
+                 }
+                 return *(current->data);
+             }
+             ConstIterator& operator++(){
+-                if(current == this->end()){
++                if(current->isTail()){
+                     throw std::out_of_range("Iterator is out of range");                
+                 }
+                 current = current->next;
+
+commit 927e3785eea6b1a8d57d238c4eb87e5794f71d06
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 14:28:14 2025 +0200
+
+    Update SortedList.h
+
+diff --git a/SortedList.h b/SortedList.h
+index 884fcae..6ddbb86 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -43,17 +43,15 @@ namespace mtm {
+                 delete this->data;
+             }
+ 
+-            inline bool isTail() const {
+-                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
++            void deleteNode() {
++                this->prev->next = this->next;
++                this->next->prev = this->prev;
++                this->next = nullptr;
++                this->prev = nullptr;
++                delete this;
+             }
+ 
+-            inline bool isHead() const {
+-                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+-            }
+ 
+-            inline bool hasNext()   const {
+-                return !(this->next->isTail());
+-            }
+ 
+             void addImmediate(SortedListNode<T>* newNode) {
+                 assert(!this->isTail());
+@@ -100,6 +98,19 @@ namespace mtm {
+             }
+ 
+         public:
++
++            inline bool isTail() const {
++                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
++            }
++
++            inline bool isHead() const {
++                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
++            }
++
++            inline bool hasNext()   const {
++                return !(this->next->isTail());
++            }
++
+             void insert(T const& const data) {
+                 if (data == nullptr) {
+                     //TODO invalid argument
+@@ -199,6 +210,15 @@ namespace mtm {
+             return this->listLength == 0;
+         }
+ 
++        void deleteNode(SortedListNode<T>* node) {
++            if (node == nullptr) {
++                return;
++            }
++            node->deleteNode();
++            --(this->listLength);
++            assert(this->isSorted());
++        }
++
+     public:
+ 
+         SortedList<T>() : listLength(0){
+
+commit a4e202438cf033dd89268d31e6d29b6c103b1ece
+Merge: 66c4305 099e4ac
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 14:19:07 2025 +0200
+
+    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3
+
+commit 66c43053e99417fee6c4a99998399ae718e33a7f
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 14:09:36 2025 +0200
+
+    creating ConstIterator class
+
+diff --git a/SortedList.h b/SortedList.h
+index 5a0ca82..6fa951a 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -138,7 +138,6 @@ namespace mtm {
+          *
+          */
+ 
+-
+         bool isSorted() const {
+             if (this->isEmpty()){
+                 return true;
+@@ -164,20 +163,20 @@ namespace mtm {
+ 
+     public:
+ 
+-        SortedList<T>() : length(0){
++        SortedList() : length(0){
+             this->head = new SortedListNode<T>();
+             this->tail = new SortedListNode<T>();
+             this->head->next = this->tail;
+             this->tail->prev = this->head;
+         }
+ 
+-        SortedList<T>(const SortedList& other) : length(0){
++        SortedList(const SortedList& other) : length(0){
+             this->head = new SortedListNode<T>();
+             this->tail = new SortedListNode<T>();
+             this->head->next = this->tail;
+             this->tail->prev = this->head;
+             if(other.head != nullptr){
+-                for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
++                for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                     this->insert(currentOther.data);
+                 }
+             }
+@@ -187,18 +186,20 @@ namespace mtm {
+             if(this == &other) {
+                 return *this;
+             }
+-            
+-            SortedListNode<T>* current = this->head->next;
+-            while(current != this->tail) {
+-                SortedListNode<T>* next = current->next;
+-                delete current;
+-                current = next;
++            for(SortedList<T> current : *this) {
++                this->remove(current);
+             }
++            // SortedListNode<T>* current = this->head->next;
++            // while(current != this->tail) {
++            //     SortedListNode<T>* next = current->next;
++            //     delete current;
++            //     current = next;
++            // }
+             this->length = 0;
+             if(other.head == nullptr) {
+                 return *this;
+             }
+-            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
++            for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                 this->insert(currentOther.data);
+             }
+             return *this;
+@@ -307,27 +308,54 @@ namespace mtm {
+          * 11. filter - returns a new list with elements that satisfy a given condition V?
+          * 12. apply - returns a new list with elements that were modified by an operation V?
+          */
+-
++         class ConstIterator;
+     };
+ 
+     template <class T>
+     class SortedList<T>::ConstIterator {
++        private:
++            friend class SortedList<T>;
++            SortedListNode<T>* current;
++            ConstIterator(SortedListNode<T>* current) : current(current) {}
++        public:
++            ConstIterator(ConstIterator& other) = default;
++            ConstIterator& operator=(const ConstIterator& other) = default;
++            ~ConstIterator() = default;
++            const T& operator*() const{
++                if(current == this->end()) {
++                    throw std::out_of_range("Iterator is out of range");
++                }
++                return *(current->data);
++            }
++            ConstIterator& operator++(){
++                if(current == this->end()){
++                    throw std::out_of_range("Iterator is out of range");                
++                }
++                current = current->next;
++                return *this;
++            }
++            bool operator!=(const ConstIterator& other) const{
++                return current != other.current;
++            }
++            bool operator>(const ConstIterator& other) const{
++                return current->data > other.current->data;
++            }
++
+     /**
+      * the class should support the following public interface:
+      * if needed, use =defualt / =delete
+      *
+      * constructors and destructor:
+-     * 1. a ctor(or ctors) your implementation needs
+-     * 2. copy constructor
+-     * 3. operator= - assignment operator
+-     * 4. ~ConstIterator() - destructor
++     * 1. a ctor(or ctors) your implementation needs V?
++     * 2. copy constructor V?
++     * 3. operator= - assignment operator V?
++     * 4. ~ConstIterator() - destructor V?
+      *
+      * operators:
+-     * 5. operator* - returns the element the iterator points to
+-     * 6. operator++ - advances the iterator to the next element
+-     * 7. operator!= - returns true if the iterator points to a different element
++     * 5. operator* - returns the element the iterator points to V?
++     * 6. operator++ - advances the iterator to the next element V?
++     * 7. operator!= - returns true if the iterator points to a different element V?
+      *
+      */
+     };
+-    }
+ };
+\ No newline at end of file
+
+commit 099e4ac09c104eb5e51318fee812f590772876b3
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Sat Jan 4 14:04:32 2025 +0200
+
+    add nodeiterator
+    add node operators
+
+diff --git a/SortedList.h b/SortedList.h
+index 5a0ca82..d5603ee 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -3,11 +3,14 @@
+ #include <iostream>
+ #include <stdexcept>
+ #include <cassert>
++#include <functional>
+ 
+ namespace mtm {
+-
+     template <typename T>
+     class SortedList {
++        //class SortedListNode; //TODO fix dependencies
++        class ConstIterator;
++        class NodeIterator;
+         //TODO maybe delete these comment lines
+         //provides the de-facto interface for interacting with SortedListNode,
+         //wrapping function provides flexibility with static like parameters such as
+@@ -28,6 +31,12 @@ namespace mtm {
+                 this->data = new T(data);
+             }
+ 
++            //FIXME might be redundant
++            SortedListNode(SortedListNode<T>* other) {
++                this();
++                this->data = new T(other->data);
++            }
++
+             ~SortedListNode() {
+                 this->prev = nullptr;
+                 this->next = nullptr;
+@@ -57,12 +66,14 @@ namespace mtm {
+             void add(SortedListNode<T>* newNode) {
+                 //if we arrived at the end of the chain
+                 if (!this->hasNext()) {
++                    assert(this->next->isTail());
+                     this->addImmediate(newNode);
+                     assert(this->isSorted());
+                     return;
+                 }
+                 //if we arrived at the orderly place of the new node
+                 if (newNode > this->next) {
++                    assert(!this->next->isTail());
+                     this->addImmediate(newNode);
+                     assert(this->isSorted());
+                     return;
+@@ -107,9 +118,36 @@ namespace mtm {
+                 //the head breaks the sorted logic, if it is the head- skip it.
+                 return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+             }
++
++            //FIXME CORRECT FOR SYNTAX
++            bool operator==(SortedListNode<T>* other) const {
++                return (this->data == other->data);
++            }
++
++            bool operator!=(SortedListNode<T>* other) const {
++                return !(*this == *other);
++            }
++
++            bool operator>(SortedListNode<T>* other) const {
++                return (this->data > other->data);
++            }
++
++            bool operator<(SortedListNode<T>* other) const {
++                bool equal = *this == *other;
++                bool greater = *this > *other;
++                return (!equal) && (!greater);
++            }
++
++            bool operator<=(SortedListNode<T>* other) const {
++                return !(*this > *other);
++            }
++
++            bool operator>=(const SortedListNode<T>* other) const {
++                return !(*this < *other);
++            }
+         };
+     private:
+-        int length;
++        int listLength;
+         SortedListNode<T>* head;
+         SortedListNode<T>* tail;
+ 
+@@ -151,7 +189,7 @@ namespace mtm {
+             for (SortedListNode<T>* node : this) {
+                 ++actualLength;
+             }
+-            return actualLength == this->length;
++            return actualLength == this->listLength;
+         }
+ 
+         bool verifyList() const {
+@@ -159,19 +197,19 @@ namespace mtm {
+         }
+ 
+         inline bool isEmpty(){
+-            return this->length == 0;
++            return this->listLength == 0;
+         }
+ 
+     public:
+ 
+-        SortedList<T>() : length(0){
++        SortedList<T>() : listLength(0){
+             this->head = new SortedListNode<T>();
+             this->tail = new SortedListNode<T>();
+             this->head->next = this->tail;
+             this->tail->prev = this->head;
+         }
+ 
+-        SortedList<T>(const SortedList& other) : length(0){
++        SortedList<T>(const SortedList& other) : listLength(0){
+             this->head = new SortedListNode<T>();
+             this->tail = new SortedListNode<T>();
+             this->head->next = this->tail;
+@@ -194,7 +232,7 @@ namespace mtm {
+                 delete current;
+                 current = next;
+             }
+-            this->length = 0;
++            this->listLength = 0;
+             if(other.head == nullptr) {
+                 return *this;
+             }
+@@ -214,7 +252,7 @@ namespace mtm {
+ 
+         void insert(const T& newElement) {
+             this->head->insert(newElement);
+-            ++this->length;
++            ++(this->listLength);
+             assert(this->verifyList());
+         }
+ 
+@@ -237,8 +275,10 @@ namespace mtm {
+ 
+ 
+         int length() const {
+-            return this->length;
++            return this->listLength;
+         }
++
++        //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
+         
+         void remove(ConstIterator<T>& iter){
+             if(iter == this->end()) {
+@@ -254,15 +294,15 @@ namespace mtm {
+                 nextNode->prev = prevNode;
+             }
+             delete iter;
+-            this->length--;
++            (this->listLength)--;
+         }
+ 
+         template <class Condition>
+         SortedList<T> filter(Condition condition) const{
+             SortedList<T> filteredList;
+-            for(const SortedListNode<T>& current : *this){
+-                if(condition(current.data)) {
+-                    filteredList.insert(current.data);
++            for(T& val : this){
++                if(condition(val)) {
++                    filteredList.insert(val);
+                 }
+             }
+             return filteredList;
+@@ -271,8 +311,8 @@ namespace mtm {
+         template <class Function>
+         SortedList<T> apply(Function function) const{
+             SortedList<T> appliedList;
+-            for(const SortedListNode<T>& current : *this){
+-                appliedList.insert((function(current)).data);
++            for(T& val : this){
++                appliedList.insert(function(val));
+             }
+             return appliedList;
+         }
+@@ -329,5 +369,63 @@ namespace mtm {
+      *
+      */
+     };
+-    }
++
++    template <class T>
++    class SortedList<T>::NodeIterator {
++        /**
++         * the class should support the following public interface:
++         * if needed, use =defualt / =delete
++         *
++         * constructors and destructor:
++         * 1. a ctor(or ctors) your implementation needs
++         * 2. copy constructor
++         * 3. operator= - assignment operator
++         * 4. ~ConstIterator() - destructor
++         *
++         * operators:
++         * 5. operator* - returns the element the iterator points to
++         * 6. operator++ - advances the iterator to the next element
++         * 7. operator!= - returns true if the iterator points to a different element
++         *
++         */
++        private:
++        SortedListNode<T>* current;
++        int index;
++        public:
++
++        NodeIterator() = delete;
++
++        NodeIterator(SortedListNode<T>* current) : current(current) {}
++
++        bool operator==(const NodeIterator& other) const {
++            return this->current == other.current;
++        }
++
++        bool operator!=(const NodeIterator& other) const {
++            return !(this == other);
++        }
++
++        bool operator<(const NodeIterator& other) const {
++            return this->index < other.index;
++        }
++
++        bool operator>(const NodeIterator& other) const {
++            return (this != other) && (!(this < other));
++        }
++
++        bool operator<=(const NodeIterator& other) const {
++            return !(*this > other);
++        }
++
++        bool operator>=(const NodeIterator& other) const {
++            return !(*this < other);
++        }
++
++        T operator*() const {
++            return this->current;
++        }
++
++
++
++    };
+ };
+\ No newline at end of file
+
+commit d08cf9576c9f5b7c1c662d75873a69a876a96dee
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 11:32:43 2025 +0200
+
+    fixing CC and operator=()
+
+diff --git a/.vscode/settings.json b/.vscode/settings.json
+new file mode 100644
+index 0000000..352ce2f
+--- /dev/null
++++ b/.vscode/settings.json
+@@ -0,0 +1,53 @@
++{
++    "files.associations": {
++        "iostream": "cpp",
++        "atomic": "cpp",
++        "bit": "cpp",
++        "cctype": "cpp",
++        "charconv": "cpp",
++        "clocale": "cpp",
++        "cmath": "cpp",
++        "compare": "cpp",
++        "concepts": "cpp",
++        "cstddef": "cpp",
++        "cstdint": "cpp",
++        "cstdio": "cpp",
++        "cstdlib": "cpp",
++        "cstring": "cpp",
++        "ctime": "cpp",
++        "cwchar": "cpp",
++        "exception": "cpp",
++        "format": "cpp",
++        "initializer_list": "cpp",
++        "ios": "cpp",
++        "iosfwd": "cpp",
++        "istream": "cpp",
++        "iterator": "cpp",
++        "limits": "cpp",
++        "locale": "cpp",
++        "memory": "cpp",
++        "new": "cpp",
++        "ostream": "cpp",
++        "stdexcept": "cpp",
++        "streambuf": "cpp",
++        "string": "cpp",
++        "system_error": "cpp",
++        "tuple": "cpp",
++        "type_traits": "cpp",
++        "typeinfo": "cpp",
++        "utility": "cpp",
++        "xfacet": "cpp",
++        "xiosbase": "cpp",
++        "xlocale": "cpp",
++        "xlocbuf": "cpp",
++        "xlocinfo": "cpp",
++        "xlocmes": "cpp",
++        "xlocmon": "cpp",
++        "xlocnum": "cpp",
++        "xloctime": "cpp",
++        "xmemory": "cpp",
++        "xstring": "cpp",
++        "xtr1common": "cpp",
++        "xutility": "cpp"
++    }
++}
+\ No newline at end of file
+diff --git a/SortedList.h b/SortedList.h
+index 6cbc440..5a0ca82 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -172,29 +172,15 @@ namespace mtm {
+         }
+ 
+         SortedList<T>(const SortedList& other) : length(0){
+-            if(other.head == nullptr) {
+-                this->head = nullptr;
+-                this->tail = nullptr;
+-                return;
+-            }
+-            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+-                this->insert(currentOther.data);
++            this->head = new SortedListNode<T>();
++            this->tail = new SortedListNode<T>();
++            this->head->next = this->tail;
++            this->tail->prev = this->head;
++            if(other.head != nullptr){
++                for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
++                    this->insert(currentOther.data);
++                }
+             }
+-            
+-            // SortedListNode<T>* currentOther = other.head;
+-            // SortedListNode<T>* currentNode = this->head;
+-            //  SortedListNode<T>* previousNode = nullptr;
+-            // while(currentOther != nullptr) {
+-            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+-            //     if(previousNode == nullptr) {
+-            //         this->head = currentNode;
+-            //     }
+-            //     if(previousNode != nullptr) {
+-            //         previousNode->next = currentNode;
+-            //     }
+-            //     this->tail = currentNode;
+-            //     previousNode = currentNode;
+-            //     currentOther = currentOther->next;
+         }
+ 
+         SortedList<T>& operator=(const SortedList& other) {
+@@ -202,14 +188,12 @@ namespace mtm {
+                 return *this;
+             }
+             
+-            SortedListNode<T>* current = this->head;
+-            while(current != nullptr) {
++            SortedListNode<T>* current = this->head->next;
++            while(current != this->tail) {
+                 SortedListNode<T>* next = current->next;
+                 delete current;
+                 current = next;
+             }
+-            this->head = nullptr;
+-            this->tail = nullptr;
+             this->length = 0;
+             if(other.head == nullptr) {
+                 return *this;
+@@ -217,21 +201,6 @@ namespace mtm {
+             for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                 this->insert(currentOther.data);
+             }
+-            // SortedListNode<T>* currentOther = other.head;
+-            // SortedListNode<T>* currentNode = this->head;
+-            // SortedListNode<T>* previousNode = nullptr;
+-            // while(currentOther != nullptr) {
+-            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+-            //     if(previousNode == nullptr) {
+-            //         this->head = currentNode;
+-            //     }
+-            //     if(previousNode != nullptr) {
+-            //         previousNode->next = currentNode;
+-            //     }
+-            //     this->tail = currentNode;
+-            //     previousNode = currentNode;
+-            //     currentOther = currentOther->next;
+-            // }
+             return *this;
+         }
+         ~SortedList() {
+@@ -309,7 +278,7 @@ namespace mtm {
+         }
+ 
+         ConstIterator begin() const {
+-            return ConstIterator(this->head);
++            return ConstIterator(this->head->next);
+         }
+ 
+         ConstIterator end() const {
+
+commit 2c68bdf8b69731a12d5d4b4e302f3abb4ea95aea
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Sat Jan 4 11:14:42 2025 +0200
+
+    fixing end() it
+
+diff --git a/SortedList.h b/SortedList.h
+index e378942..6cbc440 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -313,7 +313,7 @@ namespace mtm {
+         }
+ 
+         ConstIterator end() const {
+-            return ConstIterator(nullptr);
++            return ConstIterator(this->tail);
+         }
+         /**
+          *
+
+commit cc2da7994d41dd0195f8f1d7585ca17b0fdf5bcd
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Fri Jan 3 12:45:29 2025 +0200
+
+    add comments
+
+diff --git a/.idea/editor.xml b/.idea/editor.xml
+index 95d51a7..8434d3b 100644
+--- a/.idea/editor.xml
++++ b/.idea/editor.xml
+@@ -2,483 +2,244 @@
+ <project version="4">
+   <component name="BackendCodeEditorSettings">
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
+     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
+     <option name="/Default/CodeStyle/CodeFormatting/CppClangFormat/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
+     <option name="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
+     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue" value="true" type="bool" />
+@@ -576,5 +337,244 @@
+     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_SIZE/@EntryValue" value="4" type="int" />
+     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CONTINUOUS_LINE_INDENT/@EntryValue" value="Double" type="string" />
+     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TAB_WIDTH/@EntryValue" value="4" type="int" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
+   </component>
+ </project>
+\ No newline at end of file
+diff --git a/SortedList.h b/SortedList.h
+index bc3b36f..e378942 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -8,59 +8,125 @@ namespace mtm {
+ 
+     template <typename T>
+     class SortedList {
++        //TODO maybe delete these comment lines
++        //provides the de-facto interface for interacting with SortedListNode,
++        //wrapping function provides flexibility with static like parameters such as
++        //head and tail, without forcing a single instance of the list class.
+         template <typename T>
+         class SortedListNode {
+-            private:
++            //TODO maybe delete these comment lines
++            //the members of this class are only accessible by SortedList class
++        private:
+             friend class SortedList<T>;
+             SortedListNode<T> * prev;
+             SortedListNode<T> * next;
+             T* data;
+-            void add(SortedListNode<T> * newNode) {
+-                if (newNode > this->next){ //TODO create > operator, make null node smallest;
+-                    this->next->add(newNode);
+-                    return;
+-                }
++
++            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
++
++            SortedListNode(T data): prev(nullptr), next(nullptr) {
++                this->data = new T(data);
++            }
++
++            ~SortedListNode() {
++                this->prev = nullptr;
++                this->next = nullptr;
++                delete this->data;
++            }
++
++            inline bool isTail() const {
++                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
++            }
++
++            inline bool isHead() const {
++                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
++            }
++
++            inline bool hasNext()   const {
++                return !(this->next->isTail());
++            }
++
++            void addImmediate(SortedListNode<T>* newNode) {
++                assert(!this->isTail());
+                 this->next->prev = newNode;
+                 newNode->next = this->next;
+                 this->next = newNode;
+                 newNode->prev = this;
+             }
+-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) : prev(prev), next(next), data(data) {}
+-            public:
+-            void add(T const& const data) {
++
++            void add(SortedListNode<T>* newNode) {
++                //if we arrived at the end of the chain
++                if (!this->hasNext()) {
++                    this->addImmediate(newNode);
++                    assert(this->isSorted());
++                    return;
++                }
++                //if we arrived at the orderly place of the new node
++                if (newNode > this->next) {
++                    this->addImmediate(newNode);
++                    assert(this->isSorted());
++                    return;
++                }
++                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
++                this->next->add(newNode);
++                assert(this->isSorted());
++            }
++
++            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
++            prev(prev), next(next), data(data) {}
++
++            /**
++             * overload of the isSorted function, to differentiate calls between
++             * the head and the rest of the chain
++             *
++             * @return if the list is sorted
++             */
++            bool isSorted(int) const {
++                if (this->isTail()){
++                    return true;
++                }
++                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
++            }
++
++        public:
++            void insert(T const& const data) {
+                 if (data == nullptr) {
+                     //TODO invalid argument
+                 }
+                 SortedListNode<T> * newNode = new SortedListNode<T>(data);
+                 this->add(newNode);
+-            }
+-            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+-            ~SortedListNode() {
+-                this->prev = nullptr;
+-                this->next = nullptr;
+-                delete this->data;
++                assert(this->isSorted());
+             }
+ 
+-            bool isSorted(){ //FIXME make it so the head itself wont call this function, because otherwise it would break the logic
+-                if (this->next == nullptr){
+-                    return true;
+-                }
+-                return (this >= this->next) && (this->next->isSorted()); //TODO create >= operator
++            /**
++             *check if the list is sorted
++             *
++             * @return if the list is sorted
++             */
++            bool isSorted() const {
++                //the head breaks the sorted logic, if it is the head- skip it.
++                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+             }
+         };
+-        private:
++    private:
+         int length;
+         SortedListNode<T>* head;
+         SortedListNode<T>* tail;
+ 
++        /**
++         * //maybe can delete this function
+         void addInitial(SortedListNode<T>* addThis){
+             assert(this->isEmpty());
+             this->head->add(addThis);
+         }
++         */
+ 
++
++        /** //maybe can delete this function
+         void add(SortedListNode<T>* addThis){
+             if(this->isEmpty()){
+-                this->addInitial(addThis);
++                this->head->addImmediate(addThis);
++                return;
+             }
+             for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
+                 if (addThis > node){
+@@ -69,22 +135,43 @@ namespace mtm {
+                 }
+             }
+         }
++         *
++         */
++
+ 
+-        bool isSorted(){
++        bool isSorted() const {
+             if (this->isEmpty()){
+                 return true;
+             }
+             return head->isSorted();
+         }
+ 
++        bool verifyLength() const {
++            int actualLength = 0;
++            for (SortedListNode<T>* node : this) {
++                ++actualLength;
++            }
++            return actualLength == this->length;
++        }
++
++        bool verifyList() const {
++            return (this->isSorted())&&(this->verifyLength());
++        }
++
++        inline bool isEmpty(){
++            return this->length == 0;
++        }
++
+     public:
+-        SortedList() : length(0){
++
++        SortedList<T>() : length(0){
+             this->head = new SortedListNode<T>();
+             this->tail = new SortedListNode<T>();
+             this->head->next = this->tail;
+             this->tail->prev = this->head;
+         }
+-        SortedList(const SortedList& other) : length(0){
++
++        SortedList<T>(const SortedList& other) : length(0){
+             if(other.head == nullptr) {
+                 this->head = nullptr;
+                 this->tail = nullptr;
+@@ -109,13 +196,6 @@ namespace mtm {
+             //     previousNode = currentNode;
+             //     currentOther = currentOther->next;
+         }
+-        
+-        /**
+-         * no need to keep such basic utility private
+-         */
+-        inline bool isEmpty(){
+-            return this->length == 0;
+-        }
+ 
+         SortedList<T>& operator=(const SortedList& other) {
+             if(this == &other) {
+@@ -163,6 +243,13 @@ namespace mtm {
+             }
+         }
+ 
++        void insert(const T& newElement) {
++            this->head->insert(newElement);
++            ++this->length;
++            assert(this->verifyList());
++        }
++
++        /**
+         void insert(const T& newElement){
+             if (newElement == nullptr) {
+                     //TODO invalid argument
+@@ -172,10 +259,13 @@ namespace mtm {
+                 this->tail = this->head;
+                 this->length = 1;
+                 return;
+-            }  
++            }
+             this->head->add(newElement);
+             this->length++;
+         }
++         */
++
++
+ 
+         int length() const {
+             return this->length;
+diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
+index 2dd1bfe..e15ca9a 100644
+--- a/cmake-build-debug/Testing/Temporary/LastTest.log
++++ b/cmake-build-debug/Testing/Temporary/LastTest.log
+@@ -1,3 +1,3 @@
+-Start testing: Dec 31 08:10 IST
++Start testing: Jan 03 11:09 IST
+ ----------------------------------------------------------
+-End testing: Dec 31 08:10 IST
++End testing: Jan 03 11:09 IST
+
+commit 98938d5bebc6842979a36b6a471586cb958a2784
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Fri Jan 3 11:07:33 2025 +0200
+
+    add linkedlist assertion functions
+
+diff --git a/SortedList.h b/SortedList.h
+index 1e29b25..bc3b36f 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -34,11 +34,19 @@ namespace mtm {
+                 SortedListNode<T> * newNode = new SortedListNode<T>(data);
+                 this->add(newNode);
+             }
++            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+             ~SortedListNode() {
+                 this->prev = nullptr;
+                 this->next = nullptr;
+                 delete this->data;
+             }
++
++            bool isSorted(){ //FIXME make it so the head itself wont call this function, because otherwise it would break the logic
++                if (this->next == nullptr){
++                    return true;
++                }
++                return (this >= this->next) && (this->next->isSorted()); //TODO create >= operator
++            }
+         };
+         private:
+         int length;
+@@ -57,13 +65,25 @@ namespace mtm {
+             for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
+                 if (addThis > node){
+                     node->addPrevious(addThis); //TODO add addprevious method to nodes
+-                    break;
++                    return;
+                 }
+             }
+         }
+ 
++        bool isSorted(){
++            if (this->isEmpty()){
++                return true;
++            }
++            return head->isSorted();
++        }
++
+     public:
+-        SortedList() : length(0), head(nullptr), tail(nullptr) {}
++        SortedList() : length(0){
++            this->head = new SortedListNode<T>();
++            this->tail = new SortedListNode<T>();
++            this->head->next = this->tail;
++            this->tail->prev = this->head;
++        }
+         SortedList(const SortedList& other) : length(0){
+             if(other.head == nullptr) {
+                 this->head = nullptr;
+@@ -90,6 +110,9 @@ namespace mtm {
+             //     currentOther = currentOther->next;
+         }
+         
++        /**
++         * no need to keep such basic utility private
++         */
+         inline bool isEmpty(){
+             return this->length == 0;
+         }
+
+commit fc286dc81fb3b2d0159659ff4c29a74b9c4fe66b
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Fri Jan 3 09:38:14 2025 +0200
+
+    add linkedlist code
+
+diff --git a/SortedList.h b/SortedList.h
+index 145286d..1e29b25 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -2,6 +2,7 @@
+ 
+ #include <iostream>
+ #include <stdexcept>
++#include <cassert>
+ 
+ namespace mtm {
+ 
+@@ -15,7 +16,7 @@ namespace mtm {
+             SortedListNode<T> * next;
+             T* data;
+             void add(SortedListNode<T> * newNode) {
+-                if (newNode <= this->next){ //TODO create > operator, make null node smallest;
++                if (newNode > this->next){ //TODO create > operator, make null node smallest;
+                     this->next->add(newNode);
+                     return;
+                 }
+@@ -44,6 +45,23 @@ namespace mtm {
+         SortedListNode<T>* head;
+         SortedListNode<T>* tail;
+ 
++        void addInitial(SortedListNode<T>* addThis){
++            assert(this->isEmpty());
++            this->head->add(addThis);
++        }
++
++        void add(SortedListNode<T>* addThis){
++            if(this->isEmpty()){
++                this->addInitial(addThis);
++            }
++            for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
++                if (addThis > node){
++                    node->addPrevious(addThis); //TODO add addprevious method to nodes
++                    break;
++                }
++            }
++        }
++
+     public:
+         SortedList() : length(0), head(nullptr), tail(nullptr) {}
+         SortedList(const SortedList& other) : length(0){
+@@ -71,6 +89,10 @@ namespace mtm {
+             //     previousNode = currentNode;
+             //     currentOther = currentOther->next;
+         }
++        
++        inline bool isEmpty(){
++            return this->length == 0;
++        }
+ 
+         SortedList<T>& operator=(const SortedList& other) {
+             if(this == &other) {
+
+commit 24e6da1e72d0ed05efd28275ce3c586d73a4a0de
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Fri Jan 3 08:56:34 2025 +0200
+
+    add json configurations
+
+diff --git a/.idea/.gitignore b/.idea/.gitignore
+new file mode 100644
+index 0000000..13566b8
+--- /dev/null
++++ b/.idea/.gitignore
+@@ -0,0 +1,8 @@
++# Default ignored files
++/shelf/
++/workspace.xml
++# Editor-based HTTP Client requests
++/httpRequests/
++# Datasource local storage ignored files
++/dataSources/
++/dataSources.local.xml
+diff --git a/.idea/Matam_HW3.iml b/.idea/Matam_HW3.iml
+new file mode 100644
+index 0000000..f08604b
+--- /dev/null
++++ b/.idea/Matam_HW3.iml
+@@ -0,0 +1,2 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<module classpath="CMake" type="CPP_MODULE" version="4" />
+\ No newline at end of file
+diff --git a/.idea/editor.xml b/.idea/editor.xml
+new file mode 100644
+index 0000000..95d51a7
+--- /dev/null
++++ b/.idea/editor.xml
+@@ -0,0 +1,580 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="BackendCodeEditorSettings">
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
++    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppClangFormat/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_EXPRESSION/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_FOR_STMT/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_TERNARY/@EntryValue" value="ALIGN_ALL" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_CLASS_DEFINITION/@EntryValue" value="1" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue" value="2" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_CODE/@EntryValue" value="2" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_USER_LINEBREAKS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CASE_FROM_SWITCH/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_COMMENT/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INT_ALIGN_EQ/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SIMPLE_BLOCK_STYLE/@EntryValue" value="DO_NOT_CHANGE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COMMA_IN_TEMPLATE_ARGS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COMMA_IN_TEMPLATE_PARAMS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_FOR_SEMICOLON/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_FOR_SEMICOLON/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_UNARY_OPERATOR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_ARRAY_ACCESS_BRACKETS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_CAST_EXPRESSION_PARENTHESES/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_INITIALIZER_BRACES/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_METHOD_PARENTHESES/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_INITIALIZER_BRACES/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPECIAL_ELSE_IF_TREATMENT/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_CAST_EXPRESSION_PARENTHESES/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_BINARY_OPSIGN/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_TERNARY_OPSIGNS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TYPE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/OTHER_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CASE_BLOCK_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DECLARATION/@EntryValue" value="1" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DEFINITION/@EntryValue" value="1" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_WHILE_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_ELSE_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_CATCH_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/NAMESPACE_INDENTATION/@EntryValue" value="All" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_ARGUMENT/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_PARAMETER/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_TYPE_ARGUMENT/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_TYPE_PARAMETER/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_DECLARATIONS/@EntryValue" value="0" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_ACCESS_SPECIFIERS_FROM_CLASS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CLASS_MEMBERS_FROM_ACCESS_SPECIFIERS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/LINE_BREAK_AFTER_COLON_IN_MEMBER_INITIALIZER_LISTS/@EntryValue" value="ON_SINGLE_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/MEMBER_INITIALIZER_LIST_STYLE/@EntryValue" value="DO_NOT_CHANGE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_NAMESPACE_DEFINITIONS_ON_SAME_LINE/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COLON_IN_BITFIELD_DECLARATOR/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_COLON_IN_BITFIELD_DECLARATOR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_EXTENDS_COLON/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_EXTENDS_COLON/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_FOR_COLON/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_FOR_COLON/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_DATA_MEMBER/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_DATA_MEMBERS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_METHOD/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_NESTED_DECLARATOR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_DATA_MEMBER/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_DATA_MEMBERS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_METHOD/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_ABSTRACT_DECL/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_DATA_MEMBER/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_DATA_MEMBERS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_METHOD/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_ABSTRACT_DECL/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_DATA_MEMBER/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_DATA_MEMBERS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_METHOD/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_TEMPLATE_ARGS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BETWEEN_CLOSING_ANGLE_BRACKETS_IN_TEMPLATE_ARGS/@EntryValue" value="true" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_TEMPLATE_ARGS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_DECLARATION_PARENTHESES/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_BLOCKS/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_INVOCATION_LPAR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_INVOCATION_LPAR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_INVOCATION_RPAR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_DECLARATION_LPAR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_DECLARATION_LPAR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_DECLARATION_RPAR/@EntryValue" value="false" type="bool" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_ARGUMENTS_STYLE/@EntryValue" value="WRAP_IF_LONG" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_PARAMETERS_STYLE/@EntryValue" value="WRAP_IF_LONG" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BREAK_TEMPLATE_DECLARATION/@EntryValue" value="LINE_BREAK" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/NAMESPACE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/FREE_BLOCK_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INVOCABLE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INITIALIZER_BRACES/@EntryValue" value="END_OF_LINE_NO_SPACE" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_STYLE/@EntryValue" value="Space" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_SIZE/@EntryValue" value="4" type="int" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CONTINUOUS_LINE_INDENT/@EntryValue" value="Double" type="string" />
++    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TAB_WIDTH/@EntryValue" value="4" type="int" />
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/.idea/misc.xml b/.idea/misc.xml
+new file mode 100644
+index 0000000..0b76fe5
+--- /dev/null
++++ b/.idea/misc.xml
+@@ -0,0 +1,7 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="CMakePythonSetting">
++    <option name="pythonIntegrationState" value="YES" />
++  </component>
++  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
++</project>
+\ No newline at end of file
+diff --git a/.idea/modules.xml b/.idea/modules.xml
+new file mode 100644
+index 0000000..2f869e5
+--- /dev/null
++++ b/.idea/modules.xml
+@@ -0,0 +1,8 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectModuleManager">
++    <modules>
++      <module fileurl="file://$PROJECT_DIR$/.idea/Matam_HW3.iml" filepath="$PROJECT_DIR$/.idea/Matam_HW3.iml" />
++    </modules>
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/.idea/vcs.xml b/.idea/vcs.xml
+new file mode 100644
+index 0000000..35eb1dd
+--- /dev/null
++++ b/.idea/vcs.xml
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="VcsDirectoryMappings">
++    <mapping directory="" vcs="Git" />
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+new file mode 100644
+index 0000000..01c2f22
+--- /dev/null
++++ b/CMakeLists.txt
+@@ -0,0 +1,15 @@
++cmake_minimum_required(VERSION 3.29)
++project(Matam_HW3)
++
++set(CMAKE_CXX_STANDARD 14)
++
++include_directories(.)
++
++add_executable(Matam_HW3
++    main.cpp
++    Person.cpp
++    Person.h
++    SortedList.h
++    Task.cpp
++    Task.h
++    TaskManager.h)
+diff --git a/cmake-build-debug/.cmake/api/v1/query/cache-v2 b/cmake-build-debug/.cmake/api/v1/query/cache-v2
+new file mode 100644
+index 0000000..e69de29
+diff --git a/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1 b/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1
+new file mode 100644
+index 0000000..e69de29
+diff --git a/cmake-build-debug/.cmake/api/v1/query/codemodel-v2 b/cmake-build-debug/.cmake/api/v1/query/codemodel-v2
+new file mode 100644
+index 0000000..e69de29
+diff --git a/cmake-build-debug/.cmake/api/v1/query/toolchains-v1 b/cmake-build-debug/.cmake/api/v1/query/toolchains-v1
+new file mode 100644
+index 0000000..e69de29
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json
+new file mode 100644
+index 0000000..3340ebc
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json
+@@ -0,0 +1,1163 @@
++{
++	"entries" : 
++	[
++		{
++			"name" : "CMAKE_ADDR2LINE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "CMAKE_ADDR2LINE-NOTFOUND"
++		},
++		{
++			"name" : "CMAKE_AR",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/ar"
++		},
++		{
++			"name" : "CMAKE_BUILD_TYPE",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ..."
++				}
++			],
++			"type" : "STRING",
++			"value" : "Debug"
++		},
++		{
++			"name" : "CMAKE_CACHEFILE_DIR",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "This is the directory where this CMakeCache.txt was created"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug"
++		},
++		{
++			"name" : "CMAKE_CACHE_MAJOR_VERSION",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Major version of cmake used to create the current loaded cache"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "3"
++		},
++		{
++			"name" : "CMAKE_CACHE_MINOR_VERSION",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Minor version of cmake used to create the current loaded cache"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "29"
++		},
++		{
++			"name" : "CMAKE_CACHE_PATCH_VERSION",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Patch version of cmake used to create the current loaded cache"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "6"
++		},
++		{
++			"name" : "CMAKE_COLOR_DIAGNOSTICS",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Enable colored diagnostics throughout."
++				}
++			],
++			"type" : "BOOL",
++			"value" : "ON"
++		},
++		{
++			"name" : "CMAKE_COMMAND",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to CMake executable."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake"
++		},
++		{
++			"name" : "CMAKE_CPACK_COMMAND",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to cpack program executable."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack"
++		},
++		{
++			"name" : "CMAKE_CTEST_COMMAND",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to ctest program executable."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest"
++		},
++		{
++			"name" : "CMAKE_CXX_COMPILER",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "CXX compiler"
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/c++"
++		},
++		{
++			"name" : "CMAKE_CXX_FLAGS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the CXX compiler during all build types."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_CXX_FLAGS_DEBUG",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the CXX compiler during DEBUG builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-g"
++		},
++		{
++			"name" : "CMAKE_CXX_FLAGS_MINSIZEREL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the CXX compiler during MINSIZEREL builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-Os -DNDEBUG"
++		},
++		{
++			"name" : "CMAKE_CXX_FLAGS_RELEASE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the CXX compiler during RELEASE builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-O3 -DNDEBUG"
++		},
++		{
++			"name" : "CMAKE_CXX_FLAGS_RELWITHDEBINFO",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the CXX compiler during RELWITHDEBINFO builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-O2 -g -DNDEBUG"
++		},
++		{
++			"name" : "CMAKE_C_COMPILER",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "C compiler"
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/cc"
++		},
++		{
++			"name" : "CMAKE_C_FLAGS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the C compiler during all build types."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_C_FLAGS_DEBUG",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the C compiler during DEBUG builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-g"
++		},
++		{
++			"name" : "CMAKE_C_FLAGS_MINSIZEREL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the C compiler during MINSIZEREL builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-Os -DNDEBUG"
++		},
++		{
++			"name" : "CMAKE_C_FLAGS_RELEASE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the C compiler during RELEASE builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-O3 -DNDEBUG"
++		},
++		{
++			"name" : "CMAKE_C_FLAGS_RELWITHDEBINFO",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the C compiler during RELWITHDEBINFO builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : "-O2 -g -DNDEBUG"
++		},
++		{
++			"name" : "CMAKE_DLLTOOL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "CMAKE_DLLTOOL-NOTFOUND"
++		},
++		{
++			"name" : "CMAKE_EXECUTABLE_FORMAT",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Executable file format"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "MACHO"
++		},
++		{
++			"name" : "CMAKE_EXE_LINKER_FLAGS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during all build types."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_EXE_LINKER_FLAGS_DEBUG",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during DEBUG builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_EXE_LINKER_FLAGS_MINSIZEREL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during MINSIZEREL builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_EXE_LINKER_FLAGS_RELEASE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during RELEASE builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during RELWITHDEBINFO builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_EXPORT_COMPILE_COMMANDS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Enable/Disable output of compile commands during generation."
++				}
++			],
++			"type" : "BOOL",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_EXTRA_GENERATOR",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Name of external makefile project generator."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_FIND_PACKAGE_REDIRECTS_DIR",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake."
++				}
++			],
++			"type" : "STATIC",
++			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/pkgRedirects"
++		},
++		{
++			"name" : "CMAKE_GENERATOR",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Name of generator."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "Ninja"
++		},
++		{
++			"name" : "CMAKE_GENERATOR_INSTANCE",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Generator instance identifier."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_GENERATOR_PLATFORM",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Name of generator platform."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_GENERATOR_TOOLSET",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Name of generator toolset."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_HOME_DIRECTORY",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Source directory with the top level CMakeLists.txt file for this project"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
++		},
++		{
++			"name" : "CMAKE_INSTALL_NAME_TOOL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/usr/bin/install_name_tool"
++		},
++		{
++			"name" : "CMAKE_INSTALL_PREFIX",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Install path prefix, prepended onto install directories."
++				}
++			],
++			"type" : "PATH",
++			"value" : "/usr/local"
++		},
++		{
++			"name" : "CMAKE_LINKER",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/ld"
++		},
++		{
++			"name" : "CMAKE_MAKE_PROGRAM",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "No help, variable specified on the command line."
++				}
++			],
++			"type" : "UNINITIALIZED",
++			"value" : "/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja"
++		},
++		{
++			"name" : "CMAKE_MODULE_LINKER_FLAGS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of modules during all build types."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_MODULE_LINKER_FLAGS_DEBUG",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of modules during DEBUG builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of modules during MINSIZEREL builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELEASE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of modules during RELEASE builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_NM",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/nm"
++		},
++		{
++			"name" : "CMAKE_NUMBER_OF_MAKEFILES",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "number of local generators"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "1"
++		},
++		{
++			"name" : "CMAKE_OBJCOPY",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "CMAKE_OBJCOPY-NOTFOUND"
++		},
++		{
++			"name" : "CMAKE_OBJDUMP",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/objdump"
++		},
++		{
++			"name" : "CMAKE_OSX_ARCHITECTURES",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Build architectures for OSX"
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_OSX_DEPLOYMENT_TARGET",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Minimum OS X version to target for deployment (at runtime); newer APIs weak linked. Set to empty string for default value."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_OSX_SYSROOT",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "The product will be built against the headers and libraries located inside the indicated SDK."
++				}
++			],
++			"type" : "PATH",
++			"value" : "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
++		},
++		{
++			"name" : "CMAKE_PLATFORM_INFO_INITIALIZED",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Platform information initialized"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "1"
++		},
++		{
++			"name" : "CMAKE_PROJECT_DESCRIPTION",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake"
++				}
++			],
++			"type" : "STATIC",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_PROJECT_HOMEPAGE_URL",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake"
++				}
++			],
++			"type" : "STATIC",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_PROJECT_NAME",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake"
++				}
++			],
++			"type" : "STATIC",
++			"value" : "Matam_HW3"
++		},
++		{
++			"name" : "CMAKE_RANLIB",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/ranlib"
++		},
++		{
++			"name" : "CMAKE_READELF",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "CMAKE_READELF-NOTFOUND"
++		},
++		{
++			"name" : "CMAKE_ROOT",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to CMake installation."
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29"
++		},
++		{
++			"name" : "CMAKE_SHARED_LINKER_FLAGS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of shared libraries during all build types."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_SHARED_LINKER_FLAGS_DEBUG",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of shared libraries during DEBUG builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELEASE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of shared libraries during RELEASE builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_SKIP_INSTALL_RPATH",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "If set, runtime paths are not added when installing shared libraries, but are added when building."
++				}
++			],
++			"type" : "BOOL",
++			"value" : "NO"
++		},
++		{
++			"name" : "CMAKE_SKIP_RPATH",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "If set, runtime paths are not added when using shared libraries."
++				}
++			],
++			"type" : "BOOL",
++			"value" : "NO"
++		},
++		{
++			"name" : "CMAKE_STATIC_LINKER_FLAGS",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of static libraries during all build types."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_STATIC_LINKER_FLAGS_DEBUG",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of static libraries during DEBUG builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of static libraries during MINSIZEREL builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELEASE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of static libraries during RELEASE builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds."
++				}
++			],
++			"type" : "STRING",
++			"value" : ""
++		},
++		{
++			"name" : "CMAKE_STRIP",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/strip"
++		},
++		{
++			"name" : "CMAKE_TAPI",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "Path to a program."
++				}
++			],
++			"type" : "FILEPATH",
++			"value" : "/Library/Developer/CommandLineTools/usr/bin/tapi"
++		},
++		{
++			"name" : "CMAKE_UNAME",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "uname command"
++				}
++			],
++			"type" : "INTERNAL",
++			"value" : "/usr/bin/uname"
++		},
++		{
++			"name" : "CMAKE_VERBOSE_MAKEFILE",
++			"properties" : 
++			[
++				{
++					"name" : "ADVANCED",
++					"value" : "1"
++				},
++				{
++					"name" : "HELPSTRING",
++					"value" : "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo."
++				}
++			],
++			"type" : "BOOL",
++			"value" : "FALSE"
++		},
++		{
++			"name" : "Matam_HW3_BINARY_DIR",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake"
++				}
++			],
++			"type" : "STATIC",
++			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug"
++		},
++		{
++			"name" : "Matam_HW3_IS_TOP_LEVEL",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake"
++				}
++			],
++			"type" : "STATIC",
++			"value" : "ON"
++		},
++		{
++			"name" : "Matam_HW3_SOURCE_DIR",
++			"properties" : 
++			[
++				{
++					"name" : "HELPSTRING",
++					"value" : "Value Computed by CMake"
++				}
++			],
++			"type" : "STATIC",
++			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
++		}
++	],
++	"kind" : "cache",
++	"version" : 
++	{
++		"major" : 2,
++		"minor" : 0
++	}
++}
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json
+new file mode 100644
+index 0000000..fe72958
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json
+@@ -0,0 +1,1234 @@
++{
++	"inputs" : 
++	[
++		{
++			"path" : "CMakeLists.txt"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in"
++		},
++		{
++			"isGenerated" : true,
++			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in"
++		},
++		{
++			"isGenerated" : true,
++			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in"
++		},
++		{
++			"isGenerated" : true,
++			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in"
++		},
++		{
++			"isGenerated" : true,
++			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake"
++		},
++		{
++			"isCMake" : true,
++			"isExternal" : true,
++			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in"
++		},
++		{
++			"isGenerated" : true,
++			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake"
++		}
++	],
++	"kind" : "cmakeFiles",
++	"paths" : 
++	{
++		"build" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug",
++		"source" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
++	},
++	"version" : 
++	{
++		"major" : 1,
++		"minor" : 0
++	}
++}
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json
+new file mode 100644
+index 0000000..4a41589
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json
+@@ -0,0 +1,60 @@
++{
++	"configurations" : 
++	[
++		{
++			"directories" : 
++			[
++				{
++					"build" : ".",
++					"jsonFile" : "directory-.-Debug-f5ebdc15457944623624.json",
++					"minimumCMakeVersion" : 
++					{
++						"string" : "3.29"
++					},
++					"projectIndex" : 0,
++					"source" : ".",
++					"targetIndexes" : 
++					[
++						0
++					]
++				}
++			],
++			"name" : "Debug",
++			"projects" : 
++			[
++				{
++					"directoryIndexes" : 
++					[
++						0
++					],
++					"name" : "Matam_HW3",
++					"targetIndexes" : 
++					[
++						0
++					]
++				}
++			],
++			"targets" : 
++			[
++				{
++					"directoryIndex" : 0,
++					"id" : "Matam_HW3::@6890427a1f51a3e7e1df",
++					"jsonFile" : "target-Matam_HW3-Debug-44b1d4437c129c88259c.json",
++					"name" : "Matam_HW3",
++					"projectIndex" : 0
++				}
++			]
++		}
++	],
++	"kind" : "codemodel",
++	"paths" : 
++	{
++		"build" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug",
++		"source" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
++	},
++	"version" : 
++	{
++		"major" : 2,
++		"minor" : 7
++	}
++}
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json
+new file mode 100644
+index 0000000..3a67af9
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json
+@@ -0,0 +1,14 @@
++{
++	"backtraceGraph" : 
++	{
++		"commands" : [],
++		"files" : [],
++		"nodes" : []
++	},
++	"installers" : [],
++	"paths" : 
++	{
++		"build" : ".",
++		"source" : "."
++	}
++}
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json b/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json
+new file mode 100644
+index 0000000..19b68c3
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json
+@@ -0,0 +1,108 @@
++{
++	"cmake" : 
++	{
++		"generator" : 
++		{
++			"multiConfig" : false,
++			"name" : "Ninja"
++		},
++		"paths" : 
++		{
++			"cmake" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake",
++			"cpack" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack",
++			"ctest" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest",
++			"root" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29"
++		},
++		"version" : 
++		{
++			"isDirty" : false,
++			"major" : 3,
++			"minor" : 29,
++			"patch" : 6,
++			"string" : "3.29.6",
++			"suffix" : ""
++		}
++	},
++	"objects" : 
++	[
++		{
++			"jsonFile" : "codemodel-v2-56ce83c7749e9e427dea.json",
++			"kind" : "codemodel",
++			"version" : 
++			{
++				"major" : 2,
++				"minor" : 7
++			}
++		},
++		{
++			"jsonFile" : "cache-v2-c2b892a1b412afc9a1ef.json",
++			"kind" : "cache",
++			"version" : 
++			{
++				"major" : 2,
++				"minor" : 0
++			}
++		},
++		{
++			"jsonFile" : "cmakeFiles-v1-9ecd9743db4676d4803c.json",
++			"kind" : "cmakeFiles",
++			"version" : 
++			{
++				"major" : 1,
++				"minor" : 0
++			}
++		},
++		{
++			"jsonFile" : "toolchains-v1-bb57840159693364638b.json",
++			"kind" : "toolchains",
++			"version" : 
++			{
++				"major" : 1,
++				"minor" : 0
++			}
++		}
++	],
++	"reply" : 
++	{
++		"cache-v2" : 
++		{
++			"jsonFile" : "cache-v2-c2b892a1b412afc9a1ef.json",
++			"kind" : "cache",
++			"version" : 
++			{
++				"major" : 2,
++				"minor" : 0
++			}
++		},
++		"cmakeFiles-v1" : 
++		{
++			"jsonFile" : "cmakeFiles-v1-9ecd9743db4676d4803c.json",
++			"kind" : "cmakeFiles",
++			"version" : 
++			{
++				"major" : 1,
++				"minor" : 0
++			}
++		},
++		"codemodel-v2" : 
++		{
++			"jsonFile" : "codemodel-v2-56ce83c7749e9e427dea.json",
++			"kind" : "codemodel",
++			"version" : 
++			{
++				"major" : 2,
++				"minor" : 7
++			}
++		},
++		"toolchains-v1" : 
++		{
++			"jsonFile" : "toolchains-v1-bb57840159693364638b.json",
++			"kind" : "toolchains",
++			"version" : 
++			{
++				"major" : 1,
++				"minor" : 0
++			}
++		}
++	}
++}
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json b/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json
+new file mode 100644
+index 0000000..00af0e1
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json
+@@ -0,0 +1,159 @@
++{
++	"artifacts" : 
++	[
++		{
++			"path" : "Matam_HW3"
++		}
++	],
++	"backtrace" : 1,
++	"backtraceGraph" : 
++	{
++		"commands" : 
++		[
++			"add_executable",
++			"include_directories"
++		],
++		"files" : 
++		[
++			"CMakeLists.txt"
++		],
++		"nodes" : 
++		[
++			{
++				"file" : 0
++			},
++			{
++				"command" : 0,
++				"file" : 0,
++				"line" : 8,
++				"parent" : 0
++			},
++			{
++				"command" : 1,
++				"file" : 0,
++				"line" : 6,
++				"parent" : 0
++			}
++		]
++	},
++	"compileGroups" : 
++	[
++		{
++			"compileCommandFragments" : 
++			[
++				{
++					"fragment" : "-g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics"
++				}
++			],
++			"includes" : 
++			[
++				{
++					"backtrace" : 2,
++					"path" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/."
++				}
++			],
++			"language" : "CXX",
++			"languageStandard" : 
++			{
++				"backtraces" : 
++				[
++					1
++				],
++				"standard" : "14"
++			},
++			"sourceIndexes" : 
++			[
++				0,
++				1,
++				4
++			]
++		}
++	],
++	"id" : "Matam_HW3::@6890427a1f51a3e7e1df",
++	"link" : 
++	{
++		"commandFragments" : 
++		[
++			{
++				"fragment" : "-g",
++				"role" : "flags"
++			},
++			{
++				"fragment" : "",
++				"role" : "flags"
++			}
++		],
++		"language" : "CXX"
++	},
++	"name" : "Matam_HW3",
++	"nameOnDisk" : "Matam_HW3",
++	"paths" : 
++	{
++		"build" : ".",
++		"source" : "."
++	},
++	"sourceGroups" : 
++	[
++		{
++			"name" : "Source Files",
++			"sourceIndexes" : 
++			[
++				0,
++				1,
++				4
++			]
++		},
++		{
++			"name" : "Header Files",
++			"sourceIndexes" : 
++			[
++				2,
++				3,
++				5,
++				6
++			]
++		}
++	],
++	"sources" : 
++	[
++		{
++			"backtrace" : 1,
++			"compileGroupIndex" : 0,
++			"path" : "main.cpp",
++			"sourceGroupIndex" : 0
++		},
++		{
++			"backtrace" : 1,
++			"compileGroupIndex" : 0,
++			"path" : "Person.cpp",
++			"sourceGroupIndex" : 0
++		},
++		{
++			"backtrace" : 1,
++			"path" : "Person.h",
++			"sourceGroupIndex" : 1
++		},
++		{
++			"backtrace" : 1,
++			"path" : "SortedList.h",
++			"sourceGroupIndex" : 1
++		},
++		{
++			"backtrace" : 1,
++			"compileGroupIndex" : 0,
++			"path" : "Task.cpp",
++			"sourceGroupIndex" : 0
++		},
++		{
++			"backtrace" : 1,
++			"path" : "Task.h",
++			"sourceGroupIndex" : 1
++		},
++		{
++			"backtrace" : 1,
++			"path" : "TaskManager.h",
++			"sourceGroupIndex" : 1
++		}
++	],
++	"type" : "EXECUTABLE"
++}
+diff --git a/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json
+new file mode 100644
+index 0000000..11da80c
+--- /dev/null
++++ b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json
+@@ -0,0 +1,93 @@
++{
++	"kind" : "toolchains",
++	"toolchains" : 
++	[
++		{
++			"compiler" : 
++			{
++				"id" : "AppleClang",
++				"implicit" : 
++				{
++					"includeDirectories" : 
++					[
++						"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include",
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include",
++						"/Library/Developer/CommandLineTools/usr/include"
++					],
++					"linkDirectories" : 
++					[
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib",
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift"
++					],
++					"linkFrameworkDirectories" : 
++					[
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks"
++					],
++					"linkLibraries" : []
++				},
++				"path" : "/Library/Developer/CommandLineTools/usr/bin/cc",
++				"version" : "15.0.0.15000309"
++			},
++			"language" : "C",
++			"sourceFileExtensions" : 
++			[
++				"c",
++				"m"
++			]
++		},
++		{
++			"compiler" : 
++			{
++				"id" : "AppleClang",
++				"implicit" : 
++				{
++					"includeDirectories" : 
++					[
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1",
++						"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include",
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include",
++						"/Library/Developer/CommandLineTools/usr/include"
++					],
++					"linkDirectories" : 
++					[
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib",
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift"
++					],
++					"linkFrameworkDirectories" : 
++					[
++						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks"
++					],
++					"linkLibraries" : 
++					[
++						"c++"
++					]
++				},
++				"path" : "/Library/Developer/CommandLineTools/usr/bin/c++",
++				"version" : "15.0.0.15000309"
++			},
++			"language" : "CXX",
++			"sourceFileExtensions" : 
++			[
++				"C",
++				"M",
++				"c++",
++				"cc",
++				"cpp",
++				"cxx",
++				"mm",
++				"mpp",
++				"CPP",
++				"ixx",
++				"cppm",
++				"ccm",
++				"cxxm",
++				"c++m"
++			]
++		}
++	],
++	"version" : 
++	{
++		"major" : 1,
++		"minor" : 0
++	}
++}
+diff --git a/cmake-build-debug/CMakeCache.txt b/cmake-build-debug/CMakeCache.txt
+new file mode 100644
+index 0000000..bfa03f3
+--- /dev/null
++++ b/cmake-build-debug/CMakeCache.txt
+@@ -0,0 +1,363 @@
++# This is the CMakeCache file.
++# For build in directory: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++# It was generated by CMake: /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake
++# You can edit this file to change values found and used by cmake.
++# If you do not want to change any of the values, simply exit the editor.
++# If you do want to change a value, simply edit, save, and exit the editor.
++# The syntax for the file is as follows:
++# KEY:TYPE=VALUE
++# KEY is the name of a variable in the cache.
++# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
++# VALUE is the current value for the KEY.
++
++########################
++# EXTERNAL cache entries
++########################
++
++//Path to a program.
++CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND
++
++//Path to a program.
++CMAKE_AR:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ar
++
++//Choose the type of build, options are: None Debug Release RelWithDebInfo
++// MinSizeRel ...
++CMAKE_BUILD_TYPE:STRING=Debug
++
++//Enable colored diagnostics throughout.
++CMAKE_COLOR_DIAGNOSTICS:BOOL=ON
++
++//CXX compiler
++CMAKE_CXX_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/c++
++
++//Flags used by the CXX compiler during all build types.
++CMAKE_CXX_FLAGS:STRING=
++
++//Flags used by the CXX compiler during DEBUG builds.
++CMAKE_CXX_FLAGS_DEBUG:STRING=-g
++
++//Flags used by the CXX compiler during MINSIZEREL builds.
++CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
++
++//Flags used by the CXX compiler during RELEASE builds.
++CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
++
++//Flags used by the CXX compiler during RELWITHDEBINFO builds.
++CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
++
++//C compiler
++CMAKE_C_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/cc
++
++//Flags used by the C compiler during all build types.
++CMAKE_C_FLAGS:STRING=
++
++//Flags used by the C compiler during DEBUG builds.
++CMAKE_C_FLAGS_DEBUG:STRING=-g
++
++//Flags used by the C compiler during MINSIZEREL builds.
++CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
++
++//Flags used by the C compiler during RELEASE builds.
++CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
++
++//Flags used by the C compiler during RELWITHDEBINFO builds.
++CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
++
++//Path to a program.
++CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND
++
++//Flags used by the linker during all build types.
++CMAKE_EXE_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during DEBUG builds.
++CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during MINSIZEREL builds.
++CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during RELEASE builds.
++CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during RELWITHDEBINFO builds.
++CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//Enable/Disable output of compile commands during generation.
++CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=
++
++//Value Computed by CMake.
++CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/pkgRedirects
++
++//Path to a program.
++CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool
++
++//Install path prefix, prepended onto install directories.
++CMAKE_INSTALL_PREFIX:PATH=/usr/local
++
++//Path to a program.
++CMAKE_LINKER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ld
++
++//No help, variable specified on the command line.
++CMAKE_MAKE_PROGRAM:UNINITIALIZED=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
++
++//Flags used by the linker during the creation of modules during
++// all build types.
++CMAKE_MODULE_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during the creation of modules during
++// DEBUG builds.
++CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during the creation of modules during
++// MINSIZEREL builds.
++CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during the creation of modules during
++// RELEASE builds.
++CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during the creation of modules during
++// RELWITHDEBINFO builds.
++CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//Path to a program.
++CMAKE_NM:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/nm
++
++//Path to a program.
++CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND
++
++//Path to a program.
++CMAKE_OBJDUMP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/objdump
++
++//Build architectures for OSX
++CMAKE_OSX_ARCHITECTURES:STRING=
++
++//Minimum OS X version to target for deployment (at runtime); newer
++// APIs weak linked. Set to empty string for default value.
++CMAKE_OSX_DEPLOYMENT_TARGET:STRING=
++
++//The product will be built against the headers and libraries located
++// inside the indicated SDK.
++CMAKE_OSX_SYSROOT:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk
++
++//Value Computed by CMake
++CMAKE_PROJECT_DESCRIPTION:STATIC=
++
++//Value Computed by CMake
++CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
++
++//Value Computed by CMake
++CMAKE_PROJECT_NAME:STATIC=Matam_HW3
++
++//Path to a program.
++CMAKE_RANLIB:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ranlib
++
++//Path to a program.
++CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND
++
++//Flags used by the linker during the creation of shared libraries
++// during all build types.
++CMAKE_SHARED_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during DEBUG builds.
++CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during MINSIZEREL builds.
++CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during RELEASE builds.
++CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during RELWITHDEBINFO builds.
++CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//If set, runtime paths are not added when installing shared libraries,
++// but are added when building.
++CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
++
++//If set, runtime paths are not added when using shared libraries.
++CMAKE_SKIP_RPATH:BOOL=NO
++
++//Flags used by the linker during the creation of static libraries
++// during all build types.
++CMAKE_STATIC_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during DEBUG builds.
++CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during MINSIZEREL builds.
++CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during RELEASE builds.
++CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during RELWITHDEBINFO builds.
++CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//Path to a program.
++CMAKE_STRIP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/strip
++
++//Path to a program.
++CMAKE_TAPI:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/tapi
++
++//If this value is on, makefiles will be generated without the
++// .SILENT directive, and all commands will be echoed to the console
++// during the make.  This is useful for debugging only. With Visual
++// Studio IDE projects all commands are done without /nologo.
++CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
++
++//Value Computed by CMake
++Matam_HW3_BINARY_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++
++//Value Computed by CMake
++Matam_HW3_IS_TOP_LEVEL:STATIC=ON
++
++//Value Computed by CMake
++Matam_HW3_SOURCE_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
++
++
++########################
++# INTERNAL cache entries
++########################
++
++//ADVANCED property for variable: CMAKE_ADDR2LINE
++CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_AR
++CMAKE_AR-ADVANCED:INTERNAL=1
++//This is the directory where this CMakeCache.txt was created
++CMAKE_CACHEFILE_DIR:INTERNAL=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++//Major version of cmake used to create the current loaded cache
++CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
++//Minor version of cmake used to create the current loaded cache
++CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
++//Patch version of cmake used to create the current loaded cache
++CMAKE_CACHE_PATCH_VERSION:INTERNAL=6
++//Path to CMake executable.
++CMAKE_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake
++//Path to cpack program executable.
++CMAKE_CPACK_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack
++//Path to ctest program executable.
++CMAKE_CTEST_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest
++//ADVANCED property for variable: CMAKE_CXX_COMPILER
++CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS
++CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
++CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
++CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
++CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
++CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_COMPILER
++CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS
++CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
++CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
++CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
++CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
++CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_DLLTOOL
++CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
++//Executable file format
++CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
++CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
++CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
++CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
++CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
++CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
++//Name of external makefile project generator.
++CMAKE_EXTRA_GENERATOR:INTERNAL=
++//Name of generator.
++CMAKE_GENERATOR:INTERNAL=Ninja
++//Generator instance identifier.
++CMAKE_GENERATOR_INSTANCE:INTERNAL=
++//Name of generator platform.
++CMAKE_GENERATOR_PLATFORM:INTERNAL=
++//Name of generator toolset.
++CMAKE_GENERATOR_TOOLSET:INTERNAL=
++//Source directory with the top level CMakeLists.txt file for this
++// project
++CMAKE_HOME_DIRECTORY:INTERNAL=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
++//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
++CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_LINKER
++CMAKE_LINKER-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
++CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
++CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
++CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
++CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_NM
++CMAKE_NM-ADVANCED:INTERNAL=1
++//number of local generators
++CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
++//ADVANCED property for variable: CMAKE_OBJCOPY
++CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_OBJDUMP
++CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
++//Platform information initialized
++CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RANLIB
++CMAKE_RANLIB-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_READELF
++CMAKE_READELF-ADVANCED:INTERNAL=1
++//Path to CMake installation.
++CMAKE_ROOT:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
++CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
++CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
++CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
++CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
++CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SKIP_RPATH
++CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
++CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
++CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
++CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
++CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STRIP
++CMAKE_STRIP-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_TAPI
++CMAKE_TAPI-ADVANCED:INTERNAL=1
++//uname command
++CMAKE_UNAME:INTERNAL=/usr/bin/uname
++//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
++CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
++
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake
+new file mode 100644
+index 0000000..8ce3f9e
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake
+@@ -0,0 +1,80 @@
++set(CMAKE_C_COMPILER "/Library/Developer/CommandLineTools/usr/bin/cc")
++set(CMAKE_C_COMPILER_ARG1 "")
++set(CMAKE_C_COMPILER_ID "AppleClang")
++set(CMAKE_C_COMPILER_VERSION "15.0.0.15000309")
++set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
++set(CMAKE_C_COMPILER_WRAPPER "")
++set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")
++set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")
++set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23")
++set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
++set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
++set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
++set(CMAKE_C17_COMPILE_FEATURES "c_std_17")
++set(CMAKE_C23_COMPILE_FEATURES "c_std_23")
++
++set(CMAKE_C_PLATFORM_ID "Darwin")
++set(CMAKE_C_SIMULATE_ID "")
++set(CMAKE_C_COMPILER_FRONTEND_VARIANT "GNU")
++set(CMAKE_C_SIMULATE_VERSION "")
++
++
++
++
++set(CMAKE_AR "/Library/Developer/CommandLineTools/usr/bin/ar")
++set(CMAKE_C_COMPILER_AR "")
++set(CMAKE_RANLIB "/Library/Developer/CommandLineTools/usr/bin/ranlib")
++set(CMAKE_C_COMPILER_RANLIB "")
++set(CMAKE_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
++set(CMAKE_LINKER_LINK "")
++set(CMAKE_LINKER_LLD "")
++set(CMAKE_C_COMPILER_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
++set(CMAKE_C_COMPILER_LINKER_ID "AppleClang")
++set(CMAKE_C_COMPILER_LINKER_VERSION 1053.12)
++set(CMAKE_C_COMPILER_LINKER_FRONTEND_VARIANT GNU)
++set(CMAKE_MT "")
++set(CMAKE_TAPI "/Library/Developer/CommandLineTools/usr/bin/tapi")
++set(CMAKE_COMPILER_IS_GNUCC )
++set(CMAKE_C_COMPILER_LOADED 1)
++set(CMAKE_C_COMPILER_WORKS TRUE)
++set(CMAKE_C_ABI_COMPILED TRUE)
++
++set(CMAKE_C_COMPILER_ENV_VAR "CC")
++
++set(CMAKE_C_COMPILER_ID_RUN 1)
++set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
++set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
++set(CMAKE_C_LINKER_PREFERENCE 10)
++set(CMAKE_C_LINKER_DEPFILE_SUPPORTED FALSE)
++
++# Save compiler ABI information.
++set(CMAKE_C_SIZEOF_DATA_PTR "8")
++set(CMAKE_C_COMPILER_ABI "")
++set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")
++set(CMAKE_C_LIBRARY_ARCHITECTURE "")
++
++if(CMAKE_C_SIZEOF_DATA_PTR)
++  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
++endif()
++
++if(CMAKE_C_COMPILER_ABI)
++  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
++endif()
++
++if(CMAKE_C_LIBRARY_ARCHITECTURE)
++  set(CMAKE_LIBRARY_ARCHITECTURE "")
++endif()
++
++set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
++if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
++  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
++endif()
++
++
++
++
++
++set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include")
++set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")
++set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift")
++set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks")
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake
+new file mode 100644
+index 0000000..e63d0df
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake
+@@ -0,0 +1,92 @@
++set(CMAKE_CXX_COMPILER "/Library/Developer/CommandLineTools/usr/bin/c++")
++set(CMAKE_CXX_COMPILER_ARG1 "")
++set(CMAKE_CXX_COMPILER_ID "AppleClang")
++set(CMAKE_CXX_COMPILER_VERSION "15.0.0.15000309")
++set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
++set(CMAKE_CXX_COMPILER_WRAPPER "")
++set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "98")
++set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
++set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
++set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
++set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
++set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
++set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
++set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
++set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
++
++set(CMAKE_CXX_PLATFORM_ID "Darwin")
++set(CMAKE_CXX_SIMULATE_ID "")
++set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
++set(CMAKE_CXX_SIMULATE_VERSION "")
++
++
++
++
++set(CMAKE_AR "/Library/Developer/CommandLineTools/usr/bin/ar")
++set(CMAKE_CXX_COMPILER_AR "")
++set(CMAKE_RANLIB "/Library/Developer/CommandLineTools/usr/bin/ranlib")
++set(CMAKE_CXX_COMPILER_RANLIB "")
++set(CMAKE_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
++set(CMAKE_LINKER_LINK "")
++set(CMAKE_LINKER_LLD "")
++set(CMAKE_CXX_COMPILER_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
++set(CMAKE_CXX_COMPILER_LINKER_ID "AppleClang")
++set(CMAKE_CXX_COMPILER_LINKER_VERSION 1053.12)
++set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT GNU)
++set(CMAKE_MT "")
++set(CMAKE_TAPI "/Library/Developer/CommandLineTools/usr/bin/tapi")
++set(CMAKE_COMPILER_IS_GNUCXX )
++set(CMAKE_CXX_COMPILER_LOADED 1)
++set(CMAKE_CXX_COMPILER_WORKS TRUE)
++set(CMAKE_CXX_ABI_COMPILED TRUE)
++
++set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
++
++set(CMAKE_CXX_COMPILER_ID_RUN 1)
++set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m)
++set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
++
++foreach (lang IN ITEMS C OBJC OBJCXX)
++  if (CMAKE_${lang}_COMPILER_ID_RUN)
++    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
++      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
++    endforeach()
++  endif()
++endforeach()
++
++set(CMAKE_CXX_LINKER_PREFERENCE 30)
++set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
++set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED FALSE)
++
++# Save compiler ABI information.
++set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
++set(CMAKE_CXX_COMPILER_ABI "")
++set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
++set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
++
++if(CMAKE_CXX_SIZEOF_DATA_PTR)
++  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
++endif()
++
++if(CMAKE_CXX_COMPILER_ABI)
++  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
++endif()
++
++if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
++  set(CMAKE_LIBRARY_ARCHITECTURE "")
++endif()
++
++set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
++if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
++  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
++endif()
++
++
++
++
++
++set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include")
++set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++")
++set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift")
++set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks")
++set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR "")
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin
+new file mode 100755
+index 0000000..d8331b3
+Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin differ
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin
+new file mode 100755
+index 0000000..7659026
+Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin differ
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake
+new file mode 100644
+index 0000000..4ba5c26
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake
+@@ -0,0 +1,15 @@
++set(CMAKE_HOST_SYSTEM "Darwin-23.6.0")
++set(CMAKE_HOST_SYSTEM_NAME "Darwin")
++set(CMAKE_HOST_SYSTEM_VERSION "23.6.0")
++set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
++
++
++
++set(CMAKE_SYSTEM "Darwin-23.6.0")
++set(CMAKE_SYSTEM_NAME "Darwin")
++set(CMAKE_SYSTEM_VERSION "23.6.0")
++set(CMAKE_SYSTEM_PROCESSOR "x86_64")
++
++set(CMAKE_CROSSCOMPILING "FALSE")
++
++set(CMAKE_SYSTEM_LOADED 1)
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c
+new file mode 100644
+index 0000000..508c4cd
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c
+@@ -0,0 +1,895 @@
++#ifdef __cplusplus
++# error "A C++ compiler has been selected for C."
++#endif
++
++#if defined(__18CXX)
++# define ID_VOID_MAIN
++#endif
++#if defined(__CLASSIC_C__)
++/* cv-qualifiers did not exist in K&R C */
++# define const
++# define volatile
++#endif
++
++#if !defined(__has_include)
++/* If the compiler does not have __has_include, pretend the answer is
++   always no.  */
++#  define __has_include(x) 0
++#endif
++
++
++/* Version number components: V=Version, R=Revision, P=Patch
++   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
++
++#if defined(__INTEL_COMPILER) || defined(__ICC)
++# define COMPILER_ID "Intel"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_ID "GNU"
++# endif
++  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
++     except that a few beta releases use the old format with V=2021.  */
++# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
++#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
++#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
++#  if defined(__INTEL_COMPILER_UPDATE)
++#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
++#  else
++#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
++#  endif
++# else
++#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
++#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
++   /* The third version component from --version is an update index,
++      but no macro is provided for it.  */
++#  define COMPILER_VERSION_PATCH DEC(0)
++# endif
++# if defined(__INTEL_COMPILER_BUILD_DATE)
++   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
++#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
++# endif
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++# elif defined(__GNUG__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
++# endif
++# if defined(__GNUC_MINOR__)
++#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
++# define COMPILER_ID "IntelLLVM"
++#if defined(_MSC_VER)
++# define SIMULATE_ID "MSVC"
++#endif
++#if defined(__GNUC__)
++# define SIMULATE_ID "GNU"
++#endif
++/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
++ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
++ * VVVV is no smaller than the current year when a version is released.
++ */
++#if __INTEL_LLVM_COMPILER < 1000000L
++# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
++# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
++#else
++# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
++# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
++# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
++#endif
++#if defined(_MSC_VER)
++  /* _MSC_VER = VVRR */
++# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++#endif
++#if defined(__GNUC__)
++# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++#elif defined(__GNUG__)
++# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
++#endif
++#if defined(__GNUC_MINOR__)
++# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++#endif
++#if defined(__GNUC_PATCHLEVEL__)
++# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++#endif
++
++#elif defined(__PATHCC__)
++# define COMPILER_ID "PathScale"
++# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
++# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
++# if defined(__PATHCC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
++# endif
++
++#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
++# define COMPILER_ID "Embarcadero"
++# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
++# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
++# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
++
++#elif defined(__BORLANDC__)
++# define COMPILER_ID "Borland"
++  /* __BORLANDC__ = 0xVRR */
++# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
++# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
++
++#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
++# define COMPILER_ID "Watcom"
++   /* __WATCOMC__ = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__WATCOMC__)
++# define COMPILER_ID "OpenWatcom"
++   /* __WATCOMC__ = VVRP + 1100 */
++# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__SUNPRO_C)
++# define COMPILER_ID "SunPro"
++# if __SUNPRO_C >= 0x5100
++   /* __SUNPRO_C = 0xVRRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
++# else
++   /* __SUNPRO_CC = 0xVRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
++# endif
++
++#elif defined(__HP_cc)
++# define COMPILER_ID "HP"
++  /* __HP_cc = VVRRPP */
++# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
++# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
++# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
++
++#elif defined(__DECC)
++# define COMPILER_ID "Compaq"
++  /* __DECC_VER = VVRRTPPPP */
++# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
++# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
++# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
++
++#elif defined(__IBMC__) && defined(__COMPILER_VER__)
++# define COMPILER_ID "zOS"
++  /* __IBMC__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
++
++#elif defined(__open_xl__) && defined(__clang__)
++# define COMPILER_ID "IBMClang"
++# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
++# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
++# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
++# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
++
++
++#elif defined(__ibmxl__) && defined(__clang__)
++# define COMPILER_ID "XLClang"
++# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
++# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
++# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
++# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
++
++
++#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
++# define COMPILER_ID "XL"
++  /* __IBMC__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
++
++#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
++# define COMPILER_ID "VisualAge"
++  /* __IBMC__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
++
++#elif defined(__NVCOMPILER)
++# define COMPILER_ID "NVHPC"
++# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
++# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
++# if defined(__NVCOMPILER_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
++# endif
++
++#elif defined(__PGI)
++# define COMPILER_ID "PGI"
++# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
++# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
++# if defined(__PGIC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
++# endif
++
++#elif defined(__clang__) && defined(__cray__)
++# define COMPILER_ID "CrayClang"
++# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
++# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
++# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
++# define COMPILER_VERSION_INTERNAL_STR __clang_version__
++
++
++#elif defined(_CRAYC)
++# define COMPILER_ID "Cray"
++# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
++# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
++
++#elif defined(__TI_COMPILER_VERSION__)
++# define COMPILER_ID "TI"
++  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
++# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
++# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
++# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
++
++#elif defined(__CLANG_FUJITSU)
++# define COMPILER_ID "FujitsuClang"
++# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
++# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
++# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
++# define COMPILER_VERSION_INTERNAL_STR __clang_version__
++
++
++#elif defined(__FUJITSU)
++# define COMPILER_ID "Fujitsu"
++# if defined(__FCC_version__)
++#   define COMPILER_VERSION __FCC_version__
++# elif defined(__FCC_major__)
++#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
++#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
++#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
++# endif
++# if defined(__fcc_version)
++#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
++# elif defined(__FCC_VERSION)
++#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
++# endif
++
++
++#elif defined(__ghs__)
++# define COMPILER_ID "GHS"
++/* __GHS_VERSION_NUMBER = VVVVRP */
++# ifdef __GHS_VERSION_NUMBER
++# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
++# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
++# endif
++
++#elif defined(__TASKING__)
++# define COMPILER_ID "Tasking"
++  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
++  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
++# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
++
++#elif defined(__ORANGEC__)
++# define COMPILER_ID "OrangeC"
++# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
++# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
++# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
++
++#elif defined(__TINYC__)
++# define COMPILER_ID "TinyCC"
++
++#elif defined(__BCC__)
++# define COMPILER_ID "Bruce"
++
++#elif defined(__SCO_VERSION__)
++# define COMPILER_ID "SCO"
++
++#elif defined(__ARMCC_VERSION) && !defined(__clang__)
++# define COMPILER_ID "ARMCC"
++#if __ARMCC_VERSION >= 1000000
++  /* __ARMCC_VERSION = VRRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
++#else
++  /* __ARMCC_VERSION = VRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
++#endif
++
++
++#elif defined(__clang__) && defined(__apple_build_version__)
++# define COMPILER_ID "AppleClang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
++
++#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
++# define COMPILER_ID "ARMClang"
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
++# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
++
++#elif defined(__clang__) && defined(__ti__)
++# define COMPILER_ID "TIClang"
++  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
++  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
++  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
++# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
++
++#elif defined(__clang__)
++# define COMPILER_ID "Clang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++
++#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
++# define COMPILER_ID "LCC"
++# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
++# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
++# if defined(__LCC_MINOR__)
++#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
++# endif
++# if defined(__GNUC__) && defined(__GNUC_MINOR__)
++#  define SIMULATE_ID "GNU"
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++#  if defined(__GNUC_PATCHLEVEL__)
++#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++#  endif
++# endif
++
++#elif defined(__GNUC__)
++# define COMPILER_ID "GNU"
++# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
++# if defined(__GNUC_MINOR__)
++#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif defined(_MSC_VER)
++# define COMPILER_ID "MSVC"
++  /* _MSC_VER = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
++# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
++# if defined(_MSC_FULL_VER)
++#  if _MSC_VER >= 1400
++    /* _MSC_FULL_VER = VVRRPPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
++#  else
++    /* _MSC_FULL_VER = VVRRPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
++#  endif
++# endif
++# if defined(_MSC_BUILD)
++#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
++# endif
++
++#elif defined(_ADI_COMPILER)
++# define COMPILER_ID "ADSP"
++#if defined(__VERSIONNUM__)
++  /* __VERSIONNUM__ = 0xVVRRPPTT */
++#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
++#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
++#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
++#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
++#endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# define COMPILER_ID "IAR"
++# if defined(__VER__) && defined(__ICCARM__)
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
++#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
++#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
++#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
++#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# endif
++
++#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
++# define COMPILER_ID "SDCC"
++# if defined(__SDCC_VERSION_MAJOR)
++#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
++#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
++#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
++# else
++  /* SDCC = VRP */
++#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
++#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
++#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
++# endif
++
++
++/* These compilers are either not known or too old to define an
++  identification macro.  Try to identify the platform and guess that
++  it is the native compiler.  */
++#elif defined(__hpux) || defined(__hpua)
++# define COMPILER_ID "HP"
++
++#else /* unknown compiler */
++# define COMPILER_ID ""
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
++#ifdef SIMULATE_ID
++char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
++#endif
++
++#ifdef __QNXNTO__
++char const* qnxnto = "INFO" ":" "qnxnto[]";
++#endif
++
++#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
++char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
++#endif
++
++#define STRINGIFY_HELPER(X) #X
++#define STRINGIFY(X) STRINGIFY_HELPER(X)
++
++/* Identify known platforms by name.  */
++#if defined(__linux) || defined(__linux__) || defined(linux)
++# define PLATFORM_ID "Linux"
++
++#elif defined(__MSYS__)
++# define PLATFORM_ID "MSYS"
++
++#elif defined(__CYGWIN__)
++# define PLATFORM_ID "Cygwin"
++
++#elif defined(__MINGW32__)
++# define PLATFORM_ID "MinGW"
++
++#elif defined(__APPLE__)
++# define PLATFORM_ID "Darwin"
++
++#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
++# define PLATFORM_ID "Windows"
++
++#elif defined(__FreeBSD__) || defined(__FreeBSD)
++# define PLATFORM_ID "FreeBSD"
++
++#elif defined(__NetBSD__) || defined(__NetBSD)
++# define PLATFORM_ID "NetBSD"
++
++#elif defined(__OpenBSD__) || defined(__OPENBSD)
++# define PLATFORM_ID "OpenBSD"
++
++#elif defined(__sun) || defined(sun)
++# define PLATFORM_ID "SunOS"
++
++#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
++# define PLATFORM_ID "AIX"
++
++#elif defined(__hpux) || defined(__hpux__)
++# define PLATFORM_ID "HP-UX"
++
++#elif defined(__HAIKU__)
++# define PLATFORM_ID "Haiku"
++
++#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
++# define PLATFORM_ID "BeOS"
++
++#elif defined(__QNX__) || defined(__QNXNTO__)
++# define PLATFORM_ID "QNX"
++
++#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
++# define PLATFORM_ID "Tru64"
++
++#elif defined(__riscos) || defined(__riscos__)
++# define PLATFORM_ID "RISCos"
++
++#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
++# define PLATFORM_ID "SINIX"
++
++#elif defined(__UNIX_SV__)
++# define PLATFORM_ID "UNIX_SV"
++
++#elif defined(__bsdos__)
++# define PLATFORM_ID "BSDOS"
++
++#elif defined(_MPRAS) || defined(MPRAS)
++# define PLATFORM_ID "MP-RAS"
++
++#elif defined(__osf) || defined(__osf__)
++# define PLATFORM_ID "OSF1"
++
++#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
++# define PLATFORM_ID "SCO_SV"
++
++#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
++# define PLATFORM_ID "ULTRIX"
++
++#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
++# define PLATFORM_ID "Xenix"
++
++#elif defined(__WATCOMC__)
++# if defined(__LINUX__)
++#  define PLATFORM_ID "Linux"
++
++# elif defined(__DOS__)
++#  define PLATFORM_ID "DOS"
++
++# elif defined(__OS2__)
++#  define PLATFORM_ID "OS2"
++
++# elif defined(__WINDOWS__)
++#  define PLATFORM_ID "Windows3x"
++
++# elif defined(__VXWORKS__)
++#  define PLATFORM_ID "VxWorks"
++
++# else /* unknown platform */
++#  define PLATFORM_ID
++# endif
++
++#elif defined(__INTEGRITY)
++# if defined(INT_178B)
++#  define PLATFORM_ID "Integrity178"
++
++# else /* regular Integrity */
++#  define PLATFORM_ID "Integrity"
++# endif
++
++# elif defined(_ADI_COMPILER)
++#  define PLATFORM_ID "ADSP"
++
++#else /* unknown platform */
++# define PLATFORM_ID
++
++#endif
++
++/* For windows compilers MSVC and Intel we can determine
++   the architecture of the compiler being used.  This is because
++   the compilers do not have flags that can change the architecture,
++   but rather depend on which compiler is being used
++*/
++#if defined(_WIN32) && defined(_MSC_VER)
++# if defined(_M_IA64)
++#  define ARCHITECTURE_ID "IA64"
++
++# elif defined(_M_ARM64EC)
++#  define ARCHITECTURE_ID "ARM64EC"
++
++# elif defined(_M_X64) || defined(_M_AMD64)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# elif defined(_M_ARM64)
++#  define ARCHITECTURE_ID "ARM64"
++
++# elif defined(_M_ARM)
++#  if _M_ARM == 4
++#   define ARCHITECTURE_ID "ARMV4I"
++#  elif _M_ARM == 5
++#   define ARCHITECTURE_ID "ARMV5I"
++#  else
++#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
++#  endif
++
++# elif defined(_M_MIPS)
++#  define ARCHITECTURE_ID "MIPS"
++
++# elif defined(_M_SH)
++#  define ARCHITECTURE_ID "SHx"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__WATCOMC__)
++# if defined(_M_I86)
++#  define ARCHITECTURE_ID "I86"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# if defined(__ICCARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__ICCRX__)
++#  define ARCHITECTURE_ID "RX"
++
++# elif defined(__ICCRH850__)
++#  define ARCHITECTURE_ID "RH850"
++
++# elif defined(__ICCRL78__)
++#  define ARCHITECTURE_ID "RL78"
++
++# elif defined(__ICCRISCV__)
++#  define ARCHITECTURE_ID "RISCV"
++
++# elif defined(__ICCAVR__)
++#  define ARCHITECTURE_ID "AVR"
++
++# elif defined(__ICC430__)
++#  define ARCHITECTURE_ID "MSP430"
++
++# elif defined(__ICCV850__)
++#  define ARCHITECTURE_ID "V850"
++
++# elif defined(__ICC8051__)
++#  define ARCHITECTURE_ID "8051"
++
++# elif defined(__ICCSTM8__)
++#  define ARCHITECTURE_ID "STM8"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__ghs__)
++# if defined(__PPC64__)
++#  define ARCHITECTURE_ID "PPC64"
++
++# elif defined(__ppc__)
++#  define ARCHITECTURE_ID "PPC"
++
++# elif defined(__ARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__x86_64__)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(__i386__)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__clang__) && defined(__ti__)
++# if defined(__ARM_ARCH)
++#  define ARCHITECTURE_ID "Arm"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__TI_COMPILER_VERSION__)
++# if defined(__TI_ARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__MSP430__)
++#  define ARCHITECTURE_ID "MSP430"
++
++# elif defined(__TMS320C28XX__)
++#  define ARCHITECTURE_ID "TMS320C28x"
++
++# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
++#  define ARCHITECTURE_ID "TMS320C6x"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++# elif defined(__ADSPSHARC__)
++#  define ARCHITECTURE_ID "SHARC"
++
++# elif defined(__ADSPBLACKFIN__)
++#  define ARCHITECTURE_ID "Blackfin"
++
++#elif defined(__TASKING__)
++
++# if defined(__CTC__) || defined(__CPTC__)
++#  define ARCHITECTURE_ID "TriCore"
++
++# elif defined(__CMCS__)
++#  define ARCHITECTURE_ID "MCS"
++
++# elif defined(__CARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__CARC__)
++#  define ARCHITECTURE_ID "ARC"
++
++# elif defined(__C51__)
++#  define ARCHITECTURE_ID "8051"
++
++# elif defined(__CPCP__)
++#  define ARCHITECTURE_ID "PCP"
++
++# else
++#  define ARCHITECTURE_ID ""
++# endif
++
++#else
++#  define ARCHITECTURE_ID
++#endif
++
++/* Convert integer to decimal digit literals.  */
++#define DEC(n)                   \
++  ('0' + (((n) / 10000000)%10)), \
++  ('0' + (((n) / 1000000)%10)),  \
++  ('0' + (((n) / 100000)%10)),   \
++  ('0' + (((n) / 10000)%10)),    \
++  ('0' + (((n) / 1000)%10)),     \
++  ('0' + (((n) / 100)%10)),      \
++  ('0' + (((n) / 10)%10)),       \
++  ('0' +  ((n) % 10))
++
++/* Convert integer to hex digit literals.  */
++#define HEX(n)             \
++  ('0' + ((n)>>28 & 0xF)), \
++  ('0' + ((n)>>24 & 0xF)), \
++  ('0' + ((n)>>20 & 0xF)), \
++  ('0' + ((n)>>16 & 0xF)), \
++  ('0' + ((n)>>12 & 0xF)), \
++  ('0' + ((n)>>8  & 0xF)), \
++  ('0' + ((n)>>4  & 0xF)), \
++  ('0' + ((n)     & 0xF))
++
++/* Construct a string literal encoding the version number. */
++#ifdef COMPILER_VERSION
++char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
++
++/* Construct a string literal encoding the version number components. */
++#elif defined(COMPILER_VERSION_MAJOR)
++char const info_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
++  COMPILER_VERSION_MAJOR,
++# ifdef COMPILER_VERSION_MINOR
++  '.', COMPILER_VERSION_MINOR,
++#  ifdef COMPILER_VERSION_PATCH
++   '.', COMPILER_VERSION_PATCH,
++#   ifdef COMPILER_VERSION_TWEAK
++    '.', COMPILER_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct a string literal encoding the internal version number. */
++#ifdef COMPILER_VERSION_INTERNAL
++char const info_version_internal[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
++  'i','n','t','e','r','n','a','l','[',
++  COMPILER_VERSION_INTERNAL,']','\0'};
++#elif defined(COMPILER_VERSION_INTERNAL_STR)
++char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
++#endif
++
++/* Construct a string literal encoding the version number components. */
++#ifdef SIMULATE_VERSION_MAJOR
++char const info_simulate_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
++  SIMULATE_VERSION_MAJOR,
++# ifdef SIMULATE_VERSION_MINOR
++  '.', SIMULATE_VERSION_MINOR,
++#  ifdef SIMULATE_VERSION_PATCH
++   '.', SIMULATE_VERSION_PATCH,
++#   ifdef SIMULATE_VERSION_TWEAK
++    '.', SIMULATE_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
++char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
++
++
++
++#if !defined(__STDC__) && !defined(__clang__)
++# if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)
++#  define C_VERSION "90"
++# else
++#  define C_VERSION
++# endif
++#elif __STDC_VERSION__ > 201710L
++# define C_VERSION "23"
++#elif __STDC_VERSION__ >= 201710L
++# define C_VERSION "17"
++#elif __STDC_VERSION__ >= 201000L
++# define C_VERSION "11"
++#elif __STDC_VERSION__ >= 199901L
++# define C_VERSION "99"
++#else
++# define C_VERSION "90"
++#endif
++const char* info_language_standard_default =
++  "INFO" ":" "standard_default[" C_VERSION "]";
++
++const char* info_language_extensions_default = "INFO" ":" "extensions_default["
++#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
++     defined(__TI_COMPILER_VERSION__)) &&                                     \
++  !defined(__STRICT_ANSI__)
++  "ON"
++#else
++  "OFF"
++#endif
++"]";
++
++/*--------------------------------------------------------------------------*/
++
++#ifdef ID_VOID_MAIN
++void main() {}
++#else
++# if defined(__CLASSIC_C__)
++int main(argc, argv) int argc; char *argv[];
++# else
++int main(int argc, char* argv[])
++# endif
++{
++  int require = 0;
++  require += info_compiler[argc];
++  require += info_platform[argc];
++  require += info_arch[argc];
++#ifdef COMPILER_VERSION_MAJOR
++  require += info_version[argc];
++#endif
++#ifdef COMPILER_VERSION_INTERNAL
++  require += info_version_internal[argc];
++#endif
++#ifdef SIMULATE_ID
++  require += info_simulate[argc];
++#endif
++#ifdef SIMULATE_VERSION_MAJOR
++  require += info_simulate_version[argc];
++#endif
++#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
++  require += info_cray[argc];
++#endif
++  require += info_language_standard_default[argc];
++  require += info_language_extensions_default[argc];
++  (void)argv;
++  return require;
++}
++#endif
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o
+new file mode 100644
+index 0000000..12edb26
+Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o differ
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp
+new file mode 100644
+index 0000000..9a5e8f8
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp
+@@ -0,0 +1,878 @@
++/* This source file must have a .cpp extension so that all C++ compilers
++   recognize the extension without flags.  Borland does not know .cxx for
++   example.  */
++#ifndef __cplusplus
++# error "A C compiler has been selected for C++."
++#endif
++
++#if !defined(__has_include)
++/* If the compiler does not have __has_include, pretend the answer is
++   always no.  */
++#  define __has_include(x) 0
++#endif
++
++
++/* Version number components: V=Version, R=Revision, P=Patch
++   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
++
++#if defined(__INTEL_COMPILER) || defined(__ICC)
++# define COMPILER_ID "Intel"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_ID "GNU"
++# endif
++  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
++     except that a few beta releases use the old format with V=2021.  */
++# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
++#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
++#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
++#  if defined(__INTEL_COMPILER_UPDATE)
++#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
++#  else
++#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
++#  endif
++# else
++#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
++#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
++   /* The third version component from --version is an update index,
++      but no macro is provided for it.  */
++#  define COMPILER_VERSION_PATCH DEC(0)
++# endif
++# if defined(__INTEL_COMPILER_BUILD_DATE)
++   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
++#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
++# endif
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++# elif defined(__GNUG__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
++# endif
++# if defined(__GNUC_MINOR__)
++#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
++# define COMPILER_ID "IntelLLVM"
++#if defined(_MSC_VER)
++# define SIMULATE_ID "MSVC"
++#endif
++#if defined(__GNUC__)
++# define SIMULATE_ID "GNU"
++#endif
++/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
++ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
++ * VVVV is no smaller than the current year when a version is released.
++ */
++#if __INTEL_LLVM_COMPILER < 1000000L
++# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
++# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
++#else
++# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
++# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
++# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
++#endif
++#if defined(_MSC_VER)
++  /* _MSC_VER = VVRR */
++# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++#endif
++#if defined(__GNUC__)
++# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++#elif defined(__GNUG__)
++# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
++#endif
++#if defined(__GNUC_MINOR__)
++# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++#endif
++#if defined(__GNUC_PATCHLEVEL__)
++# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++#endif
++
++#elif defined(__PATHCC__)
++# define COMPILER_ID "PathScale"
++# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
++# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
++# if defined(__PATHCC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
++# endif
++
++#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
++# define COMPILER_ID "Embarcadero"
++# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
++# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
++# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
++
++#elif defined(__BORLANDC__)
++# define COMPILER_ID "Borland"
++  /* __BORLANDC__ = 0xVRR */
++# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
++# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
++
++#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
++# define COMPILER_ID "Watcom"
++   /* __WATCOMC__ = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__WATCOMC__)
++# define COMPILER_ID "OpenWatcom"
++   /* __WATCOMC__ = VVRP + 1100 */
++# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__SUNPRO_CC)
++# define COMPILER_ID "SunPro"
++# if __SUNPRO_CC >= 0x5100
++   /* __SUNPRO_CC = 0xVRRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
++# else
++   /* __SUNPRO_CC = 0xVRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
++# endif
++
++#elif defined(__HP_aCC)
++# define COMPILER_ID "HP"
++  /* __HP_aCC = VVRRPP */
++# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
++# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
++# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
++
++#elif defined(__DECCXX)
++# define COMPILER_ID "Compaq"
++  /* __DECCXX_VER = VVRRTPPPP */
++# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
++# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
++# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
++
++#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
++# define COMPILER_ID "zOS"
++  /* __IBMCPP__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
++
++#elif defined(__open_xl__) && defined(__clang__)
++# define COMPILER_ID "IBMClang"
++# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
++# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
++# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
++# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
++
++
++#elif defined(__ibmxl__) && defined(__clang__)
++# define COMPILER_ID "XLClang"
++# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
++# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
++# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
++# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
++
++
++#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
++# define COMPILER_ID "XL"
++  /* __IBMCPP__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
++
++#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
++# define COMPILER_ID "VisualAge"
++  /* __IBMCPP__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
++
++#elif defined(__NVCOMPILER)
++# define COMPILER_ID "NVHPC"
++# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
++# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
++# if defined(__NVCOMPILER_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
++# endif
++
++#elif defined(__PGI)
++# define COMPILER_ID "PGI"
++# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
++# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
++# if defined(__PGIC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
++# endif
++
++#elif defined(__clang__) && defined(__cray__)
++# define COMPILER_ID "CrayClang"
++# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
++# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
++# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
++# define COMPILER_VERSION_INTERNAL_STR __clang_version__
++
++
++#elif defined(_CRAYC)
++# define COMPILER_ID "Cray"
++# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
++# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
++
++#elif defined(__TI_COMPILER_VERSION__)
++# define COMPILER_ID "TI"
++  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
++# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
++# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
++# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
++
++#elif defined(__CLANG_FUJITSU)
++# define COMPILER_ID "FujitsuClang"
++# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
++# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
++# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
++# define COMPILER_VERSION_INTERNAL_STR __clang_version__
++
++
++#elif defined(__FUJITSU)
++# define COMPILER_ID "Fujitsu"
++# if defined(__FCC_version__)
++#   define COMPILER_VERSION __FCC_version__
++# elif defined(__FCC_major__)
++#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
++#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
++#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
++# endif
++# if defined(__fcc_version)
++#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
++# elif defined(__FCC_VERSION)
++#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
++# endif
++
++
++#elif defined(__ghs__)
++# define COMPILER_ID "GHS"
++/* __GHS_VERSION_NUMBER = VVVVRP */
++# ifdef __GHS_VERSION_NUMBER
++# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
++# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
++# endif
++
++#elif defined(__TASKING__)
++# define COMPILER_ID "Tasking"
++  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
++  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
++# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
++
++#elif defined(__ORANGEC__)
++# define COMPILER_ID "OrangeC"
++# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
++# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
++# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
++
++#elif defined(__SCO_VERSION__)
++# define COMPILER_ID "SCO"
++
++#elif defined(__ARMCC_VERSION) && !defined(__clang__)
++# define COMPILER_ID "ARMCC"
++#if __ARMCC_VERSION >= 1000000
++  /* __ARMCC_VERSION = VRRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
++#else
++  /* __ARMCC_VERSION = VRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
++#endif
++
++
++#elif defined(__clang__) && defined(__apple_build_version__)
++# define COMPILER_ID "AppleClang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
++
++#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
++# define COMPILER_ID "ARMClang"
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
++# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
++
++#elif defined(__clang__) && defined(__ti__)
++# define COMPILER_ID "TIClang"
++  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
++  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
++  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
++# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
++
++#elif defined(__clang__)
++# define COMPILER_ID "Clang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++
++#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
++# define COMPILER_ID "LCC"
++# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
++# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
++# if defined(__LCC_MINOR__)
++#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
++# endif
++# if defined(__GNUC__) && defined(__GNUC_MINOR__)
++#  define SIMULATE_ID "GNU"
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++#  if defined(__GNUC_PATCHLEVEL__)
++#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++#  endif
++# endif
++
++#elif defined(__GNUC__) || defined(__GNUG__)
++# define COMPILER_ID "GNU"
++# if defined(__GNUC__)
++#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
++# else
++#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
++# endif
++# if defined(__GNUC_MINOR__)
++#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif defined(_MSC_VER)
++# define COMPILER_ID "MSVC"
++  /* _MSC_VER = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
++# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
++# if defined(_MSC_FULL_VER)
++#  if _MSC_VER >= 1400
++    /* _MSC_FULL_VER = VVRRPPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
++#  else
++    /* _MSC_FULL_VER = VVRRPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
++#  endif
++# endif
++# if defined(_MSC_BUILD)
++#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
++# endif
++
++#elif defined(_ADI_COMPILER)
++# define COMPILER_ID "ADSP"
++#if defined(__VERSIONNUM__)
++  /* __VERSIONNUM__ = 0xVVRRPPTT */
++#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
++#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
++#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
++#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
++#endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# define COMPILER_ID "IAR"
++# if defined(__VER__) && defined(__ICCARM__)
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
++#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
++#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
++#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
++#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# endif
++
++
++/* These compilers are either not known or too old to define an
++  identification macro.  Try to identify the platform and guess that
++  it is the native compiler.  */
++#elif defined(__hpux) || defined(__hpua)
++# define COMPILER_ID "HP"
++
++#else /* unknown compiler */
++# define COMPILER_ID ""
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
++#ifdef SIMULATE_ID
++char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
++#endif
++
++#ifdef __QNXNTO__
++char const* qnxnto = "INFO" ":" "qnxnto[]";
++#endif
++
++#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
++char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
++#endif
++
++#define STRINGIFY_HELPER(X) #X
++#define STRINGIFY(X) STRINGIFY_HELPER(X)
++
++/* Identify known platforms by name.  */
++#if defined(__linux) || defined(__linux__) || defined(linux)
++# define PLATFORM_ID "Linux"
++
++#elif defined(__MSYS__)
++# define PLATFORM_ID "MSYS"
++
++#elif defined(__CYGWIN__)
++# define PLATFORM_ID "Cygwin"
++
++#elif defined(__MINGW32__)
++# define PLATFORM_ID "MinGW"
++
++#elif defined(__APPLE__)
++# define PLATFORM_ID "Darwin"
++
++#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
++# define PLATFORM_ID "Windows"
++
++#elif defined(__FreeBSD__) || defined(__FreeBSD)
++# define PLATFORM_ID "FreeBSD"
++
++#elif defined(__NetBSD__) || defined(__NetBSD)
++# define PLATFORM_ID "NetBSD"
++
++#elif defined(__OpenBSD__) || defined(__OPENBSD)
++# define PLATFORM_ID "OpenBSD"
++
++#elif defined(__sun) || defined(sun)
++# define PLATFORM_ID "SunOS"
++
++#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
++# define PLATFORM_ID "AIX"
++
++#elif defined(__hpux) || defined(__hpux__)
++# define PLATFORM_ID "HP-UX"
++
++#elif defined(__HAIKU__)
++# define PLATFORM_ID "Haiku"
++
++#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
++# define PLATFORM_ID "BeOS"
++
++#elif defined(__QNX__) || defined(__QNXNTO__)
++# define PLATFORM_ID "QNX"
++
++#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
++# define PLATFORM_ID "Tru64"
++
++#elif defined(__riscos) || defined(__riscos__)
++# define PLATFORM_ID "RISCos"
++
++#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
++# define PLATFORM_ID "SINIX"
++
++#elif defined(__UNIX_SV__)
++# define PLATFORM_ID "UNIX_SV"
++
++#elif defined(__bsdos__)
++# define PLATFORM_ID "BSDOS"
++
++#elif defined(_MPRAS) || defined(MPRAS)
++# define PLATFORM_ID "MP-RAS"
++
++#elif defined(__osf) || defined(__osf__)
++# define PLATFORM_ID "OSF1"
++
++#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
++# define PLATFORM_ID "SCO_SV"
++
++#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
++# define PLATFORM_ID "ULTRIX"
++
++#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
++# define PLATFORM_ID "Xenix"
++
++#elif defined(__WATCOMC__)
++# if defined(__LINUX__)
++#  define PLATFORM_ID "Linux"
++
++# elif defined(__DOS__)
++#  define PLATFORM_ID "DOS"
++
++# elif defined(__OS2__)
++#  define PLATFORM_ID "OS2"
++
++# elif defined(__WINDOWS__)
++#  define PLATFORM_ID "Windows3x"
++
++# elif defined(__VXWORKS__)
++#  define PLATFORM_ID "VxWorks"
++
++# else /* unknown platform */
++#  define PLATFORM_ID
++# endif
++
++#elif defined(__INTEGRITY)
++# if defined(INT_178B)
++#  define PLATFORM_ID "Integrity178"
++
++# else /* regular Integrity */
++#  define PLATFORM_ID "Integrity"
++# endif
++
++# elif defined(_ADI_COMPILER)
++#  define PLATFORM_ID "ADSP"
++
++#else /* unknown platform */
++# define PLATFORM_ID
++
++#endif
++
++/* For windows compilers MSVC and Intel we can determine
++   the architecture of the compiler being used.  This is because
++   the compilers do not have flags that can change the architecture,
++   but rather depend on which compiler is being used
++*/
++#if defined(_WIN32) && defined(_MSC_VER)
++# if defined(_M_IA64)
++#  define ARCHITECTURE_ID "IA64"
++
++# elif defined(_M_ARM64EC)
++#  define ARCHITECTURE_ID "ARM64EC"
++
++# elif defined(_M_X64) || defined(_M_AMD64)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# elif defined(_M_ARM64)
++#  define ARCHITECTURE_ID "ARM64"
++
++# elif defined(_M_ARM)
++#  if _M_ARM == 4
++#   define ARCHITECTURE_ID "ARMV4I"
++#  elif _M_ARM == 5
++#   define ARCHITECTURE_ID "ARMV5I"
++#  else
++#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
++#  endif
++
++# elif defined(_M_MIPS)
++#  define ARCHITECTURE_ID "MIPS"
++
++# elif defined(_M_SH)
++#  define ARCHITECTURE_ID "SHx"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__WATCOMC__)
++# if defined(_M_I86)
++#  define ARCHITECTURE_ID "I86"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# if defined(__ICCARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__ICCRX__)
++#  define ARCHITECTURE_ID "RX"
++
++# elif defined(__ICCRH850__)
++#  define ARCHITECTURE_ID "RH850"
++
++# elif defined(__ICCRL78__)
++#  define ARCHITECTURE_ID "RL78"
++
++# elif defined(__ICCRISCV__)
++#  define ARCHITECTURE_ID "RISCV"
++
++# elif defined(__ICCAVR__)
++#  define ARCHITECTURE_ID "AVR"
++
++# elif defined(__ICC430__)
++#  define ARCHITECTURE_ID "MSP430"
++
++# elif defined(__ICCV850__)
++#  define ARCHITECTURE_ID "V850"
++
++# elif defined(__ICC8051__)
++#  define ARCHITECTURE_ID "8051"
++
++# elif defined(__ICCSTM8__)
++#  define ARCHITECTURE_ID "STM8"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__ghs__)
++# if defined(__PPC64__)
++#  define ARCHITECTURE_ID "PPC64"
++
++# elif defined(__ppc__)
++#  define ARCHITECTURE_ID "PPC"
++
++# elif defined(__ARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__x86_64__)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(__i386__)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__clang__) && defined(__ti__)
++# if defined(__ARM_ARCH)
++#  define ARCHITECTURE_ID "Arm"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__TI_COMPILER_VERSION__)
++# if defined(__TI_ARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__MSP430__)
++#  define ARCHITECTURE_ID "MSP430"
++
++# elif defined(__TMS320C28XX__)
++#  define ARCHITECTURE_ID "TMS320C28x"
++
++# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
++#  define ARCHITECTURE_ID "TMS320C6x"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++# elif defined(__ADSPSHARC__)
++#  define ARCHITECTURE_ID "SHARC"
++
++# elif defined(__ADSPBLACKFIN__)
++#  define ARCHITECTURE_ID "Blackfin"
++
++#elif defined(__TASKING__)
++
++# if defined(__CTC__) || defined(__CPTC__)
++#  define ARCHITECTURE_ID "TriCore"
++
++# elif defined(__CMCS__)
++#  define ARCHITECTURE_ID "MCS"
++
++# elif defined(__CARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__CARC__)
++#  define ARCHITECTURE_ID "ARC"
++
++# elif defined(__C51__)
++#  define ARCHITECTURE_ID "8051"
++
++# elif defined(__CPCP__)
++#  define ARCHITECTURE_ID "PCP"
++
++# else
++#  define ARCHITECTURE_ID ""
++# endif
++
++#else
++#  define ARCHITECTURE_ID
++#endif
++
++/* Convert integer to decimal digit literals.  */
++#define DEC(n)                   \
++  ('0' + (((n) / 10000000)%10)), \
++  ('0' + (((n) / 1000000)%10)),  \
++  ('0' + (((n) / 100000)%10)),   \
++  ('0' + (((n) / 10000)%10)),    \
++  ('0' + (((n) / 1000)%10)),     \
++  ('0' + (((n) / 100)%10)),      \
++  ('0' + (((n) / 10)%10)),       \
++  ('0' +  ((n) % 10))
++
++/* Convert integer to hex digit literals.  */
++#define HEX(n)             \
++  ('0' + ((n)>>28 & 0xF)), \
++  ('0' + ((n)>>24 & 0xF)), \
++  ('0' + ((n)>>20 & 0xF)), \
++  ('0' + ((n)>>16 & 0xF)), \
++  ('0' + ((n)>>12 & 0xF)), \
++  ('0' + ((n)>>8  & 0xF)), \
++  ('0' + ((n)>>4  & 0xF)), \
++  ('0' + ((n)     & 0xF))
++
++/* Construct a string literal encoding the version number. */
++#ifdef COMPILER_VERSION
++char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
++
++/* Construct a string literal encoding the version number components. */
++#elif defined(COMPILER_VERSION_MAJOR)
++char const info_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
++  COMPILER_VERSION_MAJOR,
++# ifdef COMPILER_VERSION_MINOR
++  '.', COMPILER_VERSION_MINOR,
++#  ifdef COMPILER_VERSION_PATCH
++   '.', COMPILER_VERSION_PATCH,
++#   ifdef COMPILER_VERSION_TWEAK
++    '.', COMPILER_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct a string literal encoding the internal version number. */
++#ifdef COMPILER_VERSION_INTERNAL
++char const info_version_internal[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
++  'i','n','t','e','r','n','a','l','[',
++  COMPILER_VERSION_INTERNAL,']','\0'};
++#elif defined(COMPILER_VERSION_INTERNAL_STR)
++char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
++#endif
++
++/* Construct a string literal encoding the version number components. */
++#ifdef SIMULATE_VERSION_MAJOR
++char const info_simulate_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
++  SIMULATE_VERSION_MAJOR,
++# ifdef SIMULATE_VERSION_MINOR
++  '.', SIMULATE_VERSION_MINOR,
++#  ifdef SIMULATE_VERSION_PATCH
++   '.', SIMULATE_VERSION_PATCH,
++#   ifdef SIMULATE_VERSION_TWEAK
++    '.', SIMULATE_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
++char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
++
++
++
++#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
++#  if defined(__INTEL_CXX11_MODE__)
++#    if defined(__cpp_aggregate_nsdmi)
++#      define CXX_STD 201402L
++#    else
++#      define CXX_STD 201103L
++#    endif
++#  else
++#    define CXX_STD 199711L
++#  endif
++#elif defined(_MSC_VER) && defined(_MSVC_LANG)
++#  define CXX_STD _MSVC_LANG
++#else
++#  define CXX_STD __cplusplus
++#endif
++
++const char* info_language_standard_default = "INFO" ":" "standard_default["
++#if CXX_STD > 202002L
++  "23"
++#elif CXX_STD > 201703L
++  "20"
++#elif CXX_STD >= 201703L
++  "17"
++#elif CXX_STD >= 201402L
++  "14"
++#elif CXX_STD >= 201103L
++  "11"
++#else
++  "98"
++#endif
++"]";
++
++const char* info_language_extensions_default = "INFO" ":" "extensions_default["
++#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
++     defined(__TI_COMPILER_VERSION__)) &&                                     \
++  !defined(__STRICT_ANSI__)
++  "ON"
++#else
++  "OFF"
++#endif
++"]";
++
++/*--------------------------------------------------------------------------*/
++
++int main(int argc, char* argv[])
++{
++  int require = 0;
++  require += info_compiler[argc];
++  require += info_platform[argc];
++  require += info_arch[argc];
++#ifdef COMPILER_VERSION_MAJOR
++  require += info_version[argc];
++#endif
++#ifdef COMPILER_VERSION_INTERNAL
++  require += info_version_internal[argc];
++#endif
++#ifdef SIMULATE_ID
++  require += info_simulate[argc];
++#endif
++#ifdef SIMULATE_VERSION_MAJOR
++  require += info_simulate_version[argc];
++#endif
++#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
++  require += info_cray[argc];
++#endif
++  require += info_language_standard_default[argc];
++  require += info_language_extensions_default[argc];
++  (void)argv;
++  return require;
++}
+diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o
+new file mode 100644
+index 0000000..4678bba
+Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o differ
+diff --git a/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
+new file mode 100644
+index 0000000..23fe12a
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
+@@ -0,0 +1,433 @@
++
++---
++events:
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake:205 (message)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      The system is: Darwin - 23.6.0 - x86_64
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
++      Compiler: /Library/Developer/CommandLineTools/usr/bin/cc 
++      Build flags: 
++      Id flags:  
++      
++      The output was:
++      1
++      ld: library 'System' not found
++      clang: error: linker command failed with exit code 1 (use -v to see invocation)
++      
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
++      Compiler: /Library/Developer/CommandLineTools/usr/bin/cc 
++      Build flags: 
++      Id flags: -c 
++      
++      The output was:
++      0
++      
++      
++      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.o"
++      
++      The C compiler identification is AppleClang, found in:
++        /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
++      Compiler: /Library/Developer/CommandLineTools/usr/bin/c++ 
++      Build flags: 
++      Id flags:  
++      
++      The output was:
++      1
++      ld: library 'c++' not found
++      clang: error: linker command failed with exit code 1 (use -v to see invocation)
++      
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
++      Compiler: /Library/Developer/CommandLineTools/usr/bin/c++ 
++      Build flags: 
++      Id flags: -c 
++      
++      The output was:
++      0
++      
++      
++      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.o"
++      
++      The CXX compiler identification is AppleClang, found in:
++        /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o
++      
++  -
++    kind: "try_compile-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:67 (try_compile)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    checks:
++      - "Detecting C compiler ABI info"
++    directories:
++      source: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy"
++      binary: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy"
++    cmakeVariables:
++      CMAKE_C_FLAGS: ""
++      CMAKE_C_FLAGS_DEBUG: "-g"
++      CMAKE_EXE_LINKER_FLAGS: ""
++      CMAKE_OSX_ARCHITECTURES: ""
++      CMAKE_OSX_DEPLOYMENT_TARGET: ""
++      CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
++    buildResult:
++      variable: "CMAKE_C_ABI_COMPILED"
++      cached: true
++      stdout: |
++        Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy'
++        
++        Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_5df0d
++        [1/2] /Library/Developer/CommandLineTools/usr/bin/cc   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl,-v -MD -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c
++        Apple clang version 15.0.0 (clang-1500.3.9.4)
++        Target: x86_64-apple-darwin23.6.0
++        Thread model: posix
++        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
++        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
++         "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -x c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c
++        clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0
++        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"
++        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"
++        #include "..." search starts here:
++        #include <...> search starts here:
++         /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include
++         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include
++         /Library/Developer/CommandLineTools/usr/include
++         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)
++        End of search list.
++        [2/2] : && /Library/Developer/CommandLineTools/usr/bin/cc -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -v -Wl,-v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -o cmTC_5df0d   && :
++        Apple clang version 15.0.0 (clang-1500.3.9.4)
++        Target: x86_64-apple-darwin23.6.0
++        Thread model: posix
++        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
++         "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_5df0d -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a
++        @(#)PROGRAM:ld PROJECT:ld-1053.12
++        BUILD 15:44:24 Feb  3 2024
++        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
++        will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
++        LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
++        TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
++        Library search paths:
++        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib
++        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift
++        Framework search paths:
++        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks
++        
++      exitCode: 0
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:137 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Parsed C implicit include dir info: rv=done
++        found start of include info
++        found start of implicit include info
++          add: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
++          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
++          add: [/Library/Developer/CommandLineTools/usr/include]
++        end of search list found
++        collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
++        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
++        collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
++        implicit include dirs: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include]
++      
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:173 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Parsed C implicit link information:
++        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
++        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?))("|,| |$)]
++        ignore line: [Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy']
++        ignore line: []
++        ignore line: [Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_5df0d]
++        ignore line: [[1/2] /Library/Developer/CommandLineTools/usr/bin/cc   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl -v -MD -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c]
++        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
++        ignore line: [Target: x86_64-apple-darwin23.6.0]
++        ignore line: [Thread model: posix]
++        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
++        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
++        ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -x c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c]
++        ignore line: [clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0]
++        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"]
++        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"]
++        ignore line: [#include "..." search starts here:]
++        ignore line: [#include <...> search starts here:]
++        ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
++        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
++        ignore line: [ /Library/Developer/CommandLineTools/usr/include]
++        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)]
++        ignore line: [End of search list.]
++        ignore line: [[2/2] : && /Library/Developer/CommandLineTools/usr/bin/cc -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl -search_paths_first -Wl -headerpad_max_install_names -v -Wl -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -o cmTC_5df0d   && :]
++        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
++        ignore line: [Target: x86_64-apple-darwin23.6.0]
++        ignore line: [Thread model: posix]
++        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
++        link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_5df0d -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
++          arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
++          arg [-demangle] ==> ignore
++          arg [-lto_library] ==> ignore, skip following value
++          arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
++          arg [-dynamic] ==> ignore
++          arg [-arch] ==> ignore
++          arg [x86_64] ==> ignore
++          arg [-platform_version] ==> ignore
++          arg [macos] ==> ignore
++          arg [14.0.0] ==> ignore
++          arg [14.4] ==> ignore
++          arg [-syslibroot] ==> ignore
++          arg [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk] ==> ignore
++          arg [-o] ==> ignore
++          arg [cmTC_5df0d] ==> ignore
++          arg [-search_paths_first] ==> ignore
++          arg [-headerpad_max_install_names] ==> ignore
++          arg [-v] ==> ignore
++          arg [CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o] ==> ignore
++          arg [-lSystem] ==> lib [System]
++          arg [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
++        linker tool for 'C': /Library/Developer/CommandLineTools/usr/bin/ld
++        Library search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
++        Framework search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
++        remove lib [System]
++        remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
++        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib]
++        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
++        collapse framework dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
++        implicit libs: []
++        implicit objs: []
++        implicit dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
++        implicit fwks: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
++      
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:210 (cmake_determine_linker_id)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Running the C compiler's linker: "/Library/Developer/CommandLineTools/usr/bin/ld" "-v"
++      @(#)PROGRAM:ld PROJECT:ld-1053.12
++      BUILD 15:44:24 Feb  3 2024
++      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
++      will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
++      LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
++      TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
++  -
++    kind: "try_compile-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:67 (try_compile)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    checks:
++      - "Detecting CXX compiler ABI info"
++    directories:
++      source: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP"
++      binary: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP"
++    cmakeVariables:
++      CMAKE_CXX_FLAGS: ""
++      CMAKE_CXX_FLAGS_DEBUG: "-g"
++      CMAKE_CXX_SCAN_FOR_MODULES: "OFF"
++      CMAKE_EXE_LINKER_FLAGS: ""
++      CMAKE_OSX_ARCHITECTURES: ""
++      CMAKE_OSX_DEPLOYMENT_TARGET: ""
++      CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
++    buildResult:
++      variable: "CMAKE_CXX_ABI_COMPILED"
++      cached: true
++      stdout: |
++        Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP'
++        
++        Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_1e587
++        [1/2] /Library/Developer/CommandLineTools/usr/bin/c++   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl,-v -MD -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp
++        Apple clang version 15.0.0 (clang-1500.3.9.4)
++        Target: x86_64-apple-darwin23.6.0
++        Thread model: posix
++        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
++        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
++         "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp
++        clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0
++        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"
++        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"
++        #include "..." search starts here:
++        #include <...> search starts here:
++         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1
++         /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include
++         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include
++         /Library/Developer/CommandLineTools/usr/include
++         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)
++        End of search list.
++        [2/2] : && /Library/Developer/CommandLineTools/usr/bin/c++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -v -Wl,-v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_1e587   && :
++        Apple clang version 15.0.0 (clang-1500.3.9.4)
++        Target: x86_64-apple-darwin23.6.0
++        Thread model: posix
++        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
++         "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_1e587 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a
++        @(#)PROGRAM:ld PROJECT:ld-1053.12
++        BUILD 15:44:24 Feb  3 2024
++        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
++        will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
++        LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
++        TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
++        Library search paths:
++        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib
++        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift
++        Framework search paths:
++        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks
++        
++      exitCode: 0
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:137 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Parsed CXX implicit include dir info: rv=done
++        found start of include info
++        found start of implicit include info
++          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
++          add: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
++          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
++          add: [/Library/Developer/CommandLineTools/usr/include]
++        end of search list found
++        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
++        collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
++        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
++        collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
++        implicit include dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include]
++      
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:173 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Parsed CXX implicit link information:
++        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
++        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?))("|,| |$)]
++        ignore line: [Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP']
++        ignore line: []
++        ignore line: [Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_1e587]
++        ignore line: [[1/2] /Library/Developer/CommandLineTools/usr/bin/c++   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl -v -MD -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp]
++        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
++        ignore line: [Target: x86_64-apple-darwin23.6.0]
++        ignore line: [Thread model: posix]
++        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
++        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
++        ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp]
++        ignore line: [clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0]
++        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"]
++        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"]
++        ignore line: [#include "..." search starts here:]
++        ignore line: [#include <...> search starts here:]
++        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
++        ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
++        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
++        ignore line: [ /Library/Developer/CommandLineTools/usr/include]
++        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)]
++        ignore line: [End of search list.]
++        ignore line: [[2/2] : && /Library/Developer/CommandLineTools/usr/bin/c++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl -search_paths_first -Wl -headerpad_max_install_names -v -Wl -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_1e587   && :]
++        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
++        ignore line: [Target: x86_64-apple-darwin23.6.0]
++        ignore line: [Thread model: posix]
++        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
++        link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_1e587 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
++          arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
++          arg [-demangle] ==> ignore
++          arg [-lto_library] ==> ignore, skip following value
++          arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
++          arg [-dynamic] ==> ignore
++          arg [-arch] ==> ignore
++          arg [x86_64] ==> ignore
++          arg [-platform_version] ==> ignore
++          arg [macos] ==> ignore
++          arg [14.0.0] ==> ignore
++          arg [14.4] ==> ignore
++          arg [-syslibroot] ==> ignore
++          arg [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk] ==> ignore
++          arg [-o] ==> ignore
++          arg [cmTC_1e587] ==> ignore
++          arg [-search_paths_first] ==> ignore
++          arg [-headerpad_max_install_names] ==> ignore
++          arg [-v] ==> ignore
++          arg [CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
++          arg [-lc++] ==> lib [c++]
++          arg [-lSystem] ==> lib [System]
++          arg [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
++        linker tool for 'CXX': /Library/Developer/CommandLineTools/usr/bin/ld
++        Library search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
++        Framework search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
++        remove lib [System]
++        remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
++        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib]
++        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
++        collapse framework dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
++        implicit libs: [c++]
++        implicit objs: []
++        implicit dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
++        implicit fwks: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
++      
++      
++  -
++    kind: "message-v1"
++    backtrace:
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:210 (cmake_determine_linker_id)"
++      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
++      - "CMakeLists.txt:2 (project)"
++    message: |
++      Running the CXX compiler's linker: "/Library/Developer/CommandLineTools/usr/bin/ld" "-v"
++      @(#)PROGRAM:ld PROJECT:ld-1053.12
++      BUILD 15:44:24 Feb  3 2024
++      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
++      will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
++      LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
++      TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
++...
+diff --git a/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
+new file mode 100644
+index 0000000..43977dc
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
+@@ -0,0 +1,3 @@
++/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/Matam_HW3.dir
++/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/edit_cache.dir
++/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/rebuild_cache.dir
+diff --git a/cmake-build-debug/CMakeFiles/clion-Debug-log.txt b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
+new file mode 100644
+index 0000000..f12a101
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
+@@ -0,0 +1,16 @@
++/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -G Ninja -S /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++-- The C compiler identification is AppleClang 15.0.0.15000309
++-- The CXX compiler identification is AppleClang 15.0.0.15000309
++-- Detecting C compiler ABI info
++-- Detecting C compiler ABI info - done
++-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc - skipped
++-- Detecting C compile features
++-- Detecting C compile features - done
++-- Detecting CXX compiler ABI info
++-- Detecting CXX compiler ABI info - done
++-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ - skipped
++-- Detecting CXX compile features
++-- Detecting CXX compile features - done
++-- Configuring done (2.0s)
++-- Generating done (0.0s)
++-- Build files have been written to: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+diff --git a/cmake-build-debug/CMakeFiles/clion-environment.txt b/cmake-build-debug/CMakeFiles/clion-environment.txt
+new file mode 100644
+index 0000000..a84bfe2
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/clion-environment.txt
+@@ -0,0 +1,4 @@
++ToolSet: 1.0 (local)Ninja: 1.12.0@/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
++Options: 
++
++Options:-DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
+\ No newline at end of file
+diff --git a/cmake-build-debug/CMakeFiles/cmake.check_cache b/cmake-build-debug/CMakeFiles/cmake.check_cache
+new file mode 100644
+index 0000000..3dccd73
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/cmake.check_cache
+@@ -0,0 +1 @@
++# This file is generated by cmake for dependency checking of the CMakeCache.txt file
+diff --git a/cmake-build-debug/CMakeFiles/rules.ninja b/cmake-build-debug/CMakeFiles/rules.ninja
+new file mode 100644
+index 0000000..20b58b9
+--- /dev/null
++++ b/cmake-build-debug/CMakeFiles/rules.ninja
+@@ -0,0 +1,64 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "Ninja" Generator, CMake Version 3.29
++
++# This file contains all the rules used to get the outputs files
++# built from the input files.
++# It is included in the main 'build.ninja'.
++
++# =============================================================================
++# Project: Matam_HW3
++# Configurations: Debug
++# =============================================================================
++# =============================================================================
++
++#############################################
++# Rule for compiling CXX files.
++
++rule CXX_COMPILER__Matam_HW3_unscanned_Debug
++  depfile = $DEP_FILE
++  deps = gcc
++  command = ${LAUNCHER}${CODE_CHECK}/Library/Developer/CommandLineTools/usr/bin/c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
++  description = Building CXX object $out
++
++
++#############################################
++# Rule for linking CXX executable.
++
++rule CXX_EXECUTABLE_LINKER__Matam_HW3_Debug
++  command = $PRE_LINK && /Library/Developer/CommandLineTools/usr/bin/c++ $FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
++  description = Linking CXX executable $TARGET_FILE
++  restat = $RESTAT
++
++
++#############################################
++# Rule for running custom commands.
++
++rule CUSTOM_COMMAND
++  command = $COMMAND
++  description = $DESC
++
++
++#############################################
++# Rule for re-running cmake.
++
++rule RERUN_CMAKE
++  command = /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake --regenerate-during-build -S/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++  description = Re-running CMake...
++  generator = 1
++
++
++#############################################
++# Rule for cleaning all built files.
++
++rule CLEAN
++  command = /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja $FILE_ARG -t clean $TARGETS
++  description = Cleaning all built files...
++
++
++#############################################
++# Rule for printing all primary targets available.
++
++rule HELP
++  command = /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -t targets
++  description = All primary targets available:
++
+diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
+new file mode 100644
+index 0000000..2dd1bfe
+--- /dev/null
++++ b/cmake-build-debug/Testing/Temporary/LastTest.log
+@@ -0,0 +1,3 @@
++Start testing: Dec 31 08:10 IST
++----------------------------------------------------------
++End testing: Dec 31 08:10 IST
+diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
+new file mode 100644
+index 0000000..0d90ed2
+--- /dev/null
++++ b/cmake-build-debug/build.ninja
+@@ -0,0 +1,164 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "Ninja" Generator, CMake Version 3.29
++
++# This file contains all the build statements describing the
++# compilation DAG.
++
++# =============================================================================
++# Write statements declared in CMakeLists.txt:
++# 
++# Which is the root file.
++# =============================================================================
++
++# =============================================================================
++# Project: Matam_HW3
++# Configurations: Debug
++# =============================================================================
++
++#############################################
++# Minimal version of Ninja required by this file
++
++ninja_required_version = 1.5
++
++
++#############################################
++# Set configuration variable for custom commands.
++
++CONFIGURATION = Debug
++# =============================================================================
++# Include auxiliary files.
++
++
++#############################################
++# Include rules file.
++
++include CMakeFiles/rules.ninja
++
++# =============================================================================
++
++#############################################
++# Logical path to working directory; prefix for absolute paths.
++
++cmake_ninja_workdir = /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/
++# =============================================================================
++# Object build statements for EXECUTABLE target Matam_HW3
++
++
++#############################################
++# Order-only phony target for Matam_HW3
++
++build cmake_object_order_depends_target_Matam_HW3: phony || .
++
++build CMakeFiles/Matam_HW3.dir/main.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/main.cpp || cmake_object_order_depends_target_Matam_HW3
++  DEP_FILE = CMakeFiles/Matam_HW3.dir/main.cpp.o.d
++  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
++  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
++  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
++  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
++  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
++  TARGET_PDB = Matam_HW3.pdb
++
++build CMakeFiles/Matam_HW3.dir/Person.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/Person.cpp || cmake_object_order_depends_target_Matam_HW3
++  DEP_FILE = CMakeFiles/Matam_HW3.dir/Person.cpp.o.d
++  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
++  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
++  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
++  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
++  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
++  TARGET_PDB = Matam_HW3.pdb
++
++build CMakeFiles/Matam_HW3.dir/Task.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/Task.cpp || cmake_object_order_depends_target_Matam_HW3
++  DEP_FILE = CMakeFiles/Matam_HW3.dir/Task.cpp.o.d
++  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
++  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
++  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
++  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
++  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
++  TARGET_PDB = Matam_HW3.pdb
++
++
++# =============================================================================
++# Link build statements for EXECUTABLE target Matam_HW3
++
++
++#############################################
++# Link the executable Matam_HW3
++
++build Matam_HW3: CXX_EXECUTABLE_LINKER__Matam_HW3_Debug CMakeFiles/Matam_HW3.dir/main.cpp.o CMakeFiles/Matam_HW3.dir/Person.cpp.o CMakeFiles/Matam_HW3.dir/Task.cpp.o
++  FLAGS = -g -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk
++  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
++  POST_BUILD = :
++  PRE_LINK = :
++  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
++  TARGET_FILE = Matam_HW3
++  TARGET_PDB = Matam_HW3.pdb
++
++
++#############################################
++# Utility command for edit_cache
++
++build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
++  COMMAND = cd /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug && /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
++  DESC = No interactive CMake dialog available...
++  restat = 1
++
++build edit_cache: phony CMakeFiles/edit_cache.util
++
++
++#############################################
++# Utility command for rebuild_cache
++
++build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
++  COMMAND = cd /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug && /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake --regenerate-during-build -S/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++  DESC = Running CMake to regenerate build system...
++  pool = console
++  restat = 1
++
++build rebuild_cache: phony CMakeFiles/rebuild_cache.util
++
++# =============================================================================
++# Target aliases.
++
++# =============================================================================
++# Folder targets.
++
++# =============================================================================
++
++#############################################
++# Folder: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
++
++build all: phony Matam_HW3
++
++# =============================================================================
++# Built-in targets
++
++
++#############################################
++# Re-run CMake if any of its inputs changed.
++
++build build.ninja: RERUN_CMAKE | /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/CMakeLists.txt CMakeCache.txt CMakeFiles/3.29.6/CMakeCCompiler.cmake CMakeFiles/3.29.6/CMakeCXXCompiler.cmake CMakeFiles/3.29.6/CMakeSystem.cmake
++  pool = console
++
++
++#############################################
++# A missing CMake input file is not an error.
++
++build /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/CMakeLists.txt CMakeCache.txt CMakeFiles/3.29.6/CMakeCCompiler.cmake CMakeFiles/3.29.6/CMakeCXXCompiler.cmake CMakeFiles/3.29.6/CMakeSystem.cmake: phony
++
++
++#############################################
++# Clean all the built files.
++
++build clean: CLEAN
++
++
++#############################################
++# Print all primary targets available.
++
++build help: HELP
++
++
++#############################################
++# Make the all target the default.
++
++default all
+diff --git a/cmake-build-debug/cmake_install.cmake b/cmake-build-debug/cmake_install.cmake
+new file mode 100644
+index 0000000..0ad05a0
+--- /dev/null
++++ b/cmake-build-debug/cmake_install.cmake
+@@ -0,0 +1,49 @@
++# Install script for directory: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
++
++# Set the install prefix
++if(NOT DEFINED CMAKE_INSTALL_PREFIX)
++  set(CMAKE_INSTALL_PREFIX "/usr/local")
++endif()
++string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
++
++# Set the install configuration name.
++if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
++  if(BUILD_TYPE)
++    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
++           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
++  else()
++    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
++  endif()
++  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
++endif()
++
++# Set the component getting installed.
++if(NOT CMAKE_INSTALL_COMPONENT)
++  if(COMPONENT)
++    message(STATUS "Install component: \"${COMPONENT}\"")
++    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
++  else()
++    set(CMAKE_INSTALL_COMPONENT)
++  endif()
++endif()
++
++# Is this installation the result of a crosscompile?
++if(NOT DEFINED CMAKE_CROSSCOMPILING)
++  set(CMAKE_CROSSCOMPILING "FALSE")
++endif()
++
++# Set default install directory permissions.
++if(NOT DEFINED CMAKE_OBJDUMP)
++  set(CMAKE_OBJDUMP "/Library/Developer/CommandLineTools/usr/bin/objdump")
++endif()
++
++if(CMAKE_INSTALL_COMPONENT)
++  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
++else()
++  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
++endif()
++
++string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
++       "${CMAKE_INSTALL_MANIFEST_FILES}")
++file(WRITE "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
++     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
+
+commit 7da9ff648f3a2b3c5254ded0c1e71cc9ffca223f
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 19:56:01 2025 +0200
+
+    fixing id funcs
+
+diff --git a/SortedList.h b/SortedList.h
+index 4e0fc01..145286d 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -136,7 +136,7 @@ namespace mtm {
+             return this->length;
+         }
+         
+-        void remove(ConstIterator& iter){
++        void remove(ConstIterator<T>& iter){
+             if(iter == this->end()) {
+                 return;
+             }
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 60cc7f2..f134e46 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -2,6 +2,8 @@
+ #include "TaskManager.h"
+ using namespace mtm;
+ 
++int TaskManager::idCounter = 0;
++
+ Person* TaskManager::isEmployeeExist(const string& personName){
+     Person* currentEmployee = nullptr;
+     for (int i = 0; i < numOfEmployees; i++){
+@@ -21,7 +23,9 @@ void TaskManager::assignTask(const string &personName, const Task &task){
+         currentEmployee = new Person(personName);
+         employees[numOfEmployees++] = currentEmployee;
+     }
+-    currentEmployee->assignTask(task);
++    Task newTask(task.getPriority(), task.getType(), task.getDescription());
++    newTask.setId(++idCounter);
++    currentEmployee->assignTask(newTask);
+ }
+ 
+ void TaskManager::completeTask(const string &personName){
+@@ -73,6 +77,7 @@ void TaskManager::printAllTasks() const{
+     for(SortedList<Task> currentTask : allTasks){
+         std::cout << *currentTask.begin().data << std::endl;
+     }
++    std::cout << std::endl;
+ }
+ 
+ void TaskManager::printTasksByType(TaskType type) const{
+@@ -81,6 +86,7 @@ void TaskManager::printTasksByType(TaskType type) const{
+     for(SortedList<Task> currentTask : tasksByType){
+         std::cout << *currentTask.begin().data << std::endl;
+     }
++    std::cout << std::endl;
+    
+ }
+ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+diff --git a/TaskManager.h b/TaskManager.h
+index 66d8130..f8ca722 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -16,6 +16,7 @@ private:
+      * @brief Maximum number of persons the TaskManager can handle.
+      */
+     static const int MAX_PERSONS = 10;
++    static int idCounter;
+     int numOfEmployees = 0;
+     Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName);
+@@ -81,4 +82,4 @@ public:
+      * @brief Prints all tasks assigned to all employees.
+      */
+     void printAllTasks() const;
+-};
++};
+\ No newline at end of file
+
+commit 6ebfe623ea0e597fd33e0bec8b0b31ec8aa285de
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 18:14:29 2025 +0200
+
+    fixing vonst and typos
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index c9b9ded..60cc7f2 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -2,35 +2,36 @@
+ #include "TaskManager.h"
+ using namespace mtm;
+ 
+-Person* TaskManager::isEmployeeExist(const string& personName) const{
++Person* TaskManager::isEmployeeExist(const string& personName){
++    Person* currentEmployee = nullptr;
+     for (int i = 0; i < numOfEmployees; i++){
+         if (employees[i]->getName() == personName){
+-            return employees[i];
++            currentEmployee = employees[i];
+         }
+     }
+-    return nullptr;
++    return currentEmployee;
+ }
+ 
+ void TaskManager::assignTask(const string &personName, const Task &task){
+-    Person* cuurentEmployee = isEmployeeExist(personName);
+-    if(cuurentEmployee==nullptr){
++    Person* currentEmployee = isEmployeeExist(personName);
++    if(currentEmployee == nullptr){
+         if(numOfEmployees == MAX_PERSONS){
+             throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
+         }
+-        cuurentEmployee = new Person(personName);
+-        employees[numOfEmployees++] = cuurentEmployee;
++        currentEmployee = new Person(personName);
++        employees[numOfEmployees++] = currentEmployee;
+     }
+-    cuurentEmployee->assignTask(task);
++    currentEmployee->assignTask(task);
+ }
+ 
+ void TaskManager::completeTask(const string &personName){
+-    Person* cuurentEmployee = isEmployeeExist(personName);
+-    if(cuurentEmployee == nullptr){
++    Person* currentEmployee = isEmployeeExist(personName);
++    if(currentEmployee == nullptr){
+        return;
+     }
+     try
+     {
+-        cuurentEmployee->completeTask();
++        currentEmployee->completeTask();
+     }
+     catch (const std::runtime_error& e)
+     {
+@@ -44,9 +45,10 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
+     }
+     for(int i = 0; i < numOfEmployees; i++){
+         SortedList<Task> oldTasks = this->employees[i]->getTasks();
+-
+         SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
++        this->employees[i]->setTasks(newTasks);
+     }
++
+ }
+ 
+ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
+diff --git a/TaskManager.h b/TaskManager.h
+index 6102d16..66d8130 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -18,7 +18,7 @@ private:
+     static const int MAX_PERSONS = 10;
+     int numOfEmployees = 0;
+     Person* employees[MAX_PERSONS];
+-    Person* isEmployeeExist(const string& personName) const;
++    Person* isEmployeeExist(const string& personName);
+     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
+     SortedList<Task> getAllEmployeesTasks() const;
+ 
+
+commit 7647d87289720cf326f0c1e01e13965f0f90a8af
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 17:42:03 2025 +0200
+
+    fixing getAllEmployeesTasks
+
+diff --git a/TaskManager.h b/TaskManager.h
+index 322e1fe..6102d16 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -20,7 +20,7 @@ private:
+     Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName) const;
+     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
+-    SortedList<Task> getAllEmployeesTasks(const Person* employees, int numOfEmployees);
++    SortedList<Task> getAllEmployeesTasks() const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+ 
+
+commit 19081f0a620e6714609126cc12545ed09b192369
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 17:39:24 2025 +0200
+
+    creating printTasksByType and help func getAllEmployeesTasks
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 18b10a4..c9b9ded 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -67,14 +67,28 @@ void TaskManager::printAllEmployees() const{
+ }
+ 
+ void TaskManager::printAllTasks() const{
++    SortedList<Task> allTasks = getAllEmployeesTasks();
++    for(SortedList<Task> currentTask : allTasks){
++        std::cout << *currentTask.begin().data << std::endl;
++    }
++}
++
++void TaskManager::printTasksByType(TaskType type) const{
++    SortedList<Task> allTasks = getAllEmployeesTasks();
++    SortedList<Task> tasksByType = allTasks.filter([type](SortedList<Task> sortedListTask) { return (sortedListTask.begin().getType() == type); });
++    for(SortedList<Task> currentTask : tasksByType){
++        std::cout << *currentTask.begin().data << std::endl;
++    }
++   
++}
++SortedList<Task> TaskManager::getAllEmployeesTasks() const{
+     SortedList<Task> allTasks;
+-    for(int i = 0; i < numOfEmployees; i++){
+-        SortedList<Task> tasks = employees[i]->getTasks();
++    for(int i = 0; i < this->numOfEmployees; i++){
++        SortedList<Task> tasks = this->employees[i]->getTasks();
+         for(SortedList<Task> currentTask : tasks){
+             allTasks.insert(currentTask.begin().data);
+         }
+     }
+-    for(SortedList<Task> currentTask : allTasks){
+-        std::cout << *currentTask.begin().data << std::endl;
+-    }
++    return allTasks;
+ }
++
+diff --git a/TaskManager.h b/TaskManager.h
+index 46865a3..322e1fe 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -20,6 +20,7 @@ private:
+     Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName) const;
+     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
++    SortedList<Task> getAllEmployeesTasks(const Person* employees, int numOfEmployees);
+ 
+     // Note - Additional private fields and methods can be added if needed.
+ 
+
+commit 92959be25c3aaf09ab210c4d239a49af11820dcf
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 17:26:52 2025 +0200
+
+    creating printAllTasks()
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 9299970..18b10a4 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -62,6 +62,19 @@ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type,
+ void TaskManager::printAllEmployees() const{
+     for(int i = 0; i < numOfEmployees; i++){
+         std::cout << *employees[i] << std::endl;
++        std::cout << std::endl;
+     }
+ }
+ 
++void TaskManager::printAllTasks() const{
++    SortedList<Task> allTasks;
++    for(int i = 0; i < numOfEmployees; i++){
++        SortedList<Task> tasks = employees[i]->getTasks();
++        for(SortedList<Task> currentTask : tasks){
++            allTasks.insert(currentTask.begin().data);
++        }
++    }
++    for(SortedList<Task> currentTask : allTasks){
++        std::cout << *currentTask.begin().data << std::endl;
++    }
++}
+
+commit e04f3a85ad476f48aa568a5b1fab579cb9487438
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 17:13:07 2025 +0200
+
+    creating printAllEmployees()
+
+diff --git a/SortedList.h b/SortedList.h
+index 2da277c..4e0fc01 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -193,15 +193,15 @@ namespace mtm {
+          *
+          * iterator:
+          * 5. class ConstIterator;
+-         * 6. begin method
+-         * 7. end method
++         * 6. begin method V?
++         * 7. end method V?
+          *
+          * functions:
+          * 8. insert - inserts a new element to the list V
+          * 9. remove - removes an element from the list V
+          * 10. length - returns the number of elements in the list V
+-         * 11. filter - returns a new list with elements that satisfy a given condition V
+-         * 12. apply - returns a new list with elements that were modified by an operation V
++         * 11. filter - returns a new list with elements that satisfy a given condition V?
++         * 12. apply - returns a new list with elements that were modified by an operation V?
+          */
+ 
+     };
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 31ad921..9299970 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -59,3 +59,9 @@ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type,
+     return tasks;
+ }
+ 
++void TaskManager::printAllEmployees() const{
++    for(int i = 0; i < numOfEmployees; i++){
++        std::cout << *employees[i] << std::endl;
++    }
++}
++
+
+commit 76a6228d8515358a8ecc262072c26f6948c0b6ed
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 17:07:45 2025 +0200
+
+    creating bumpPriorityByType func
+
+diff --git a/SortedList.h b/SortedList.h
+index 84e06d4..2da277c 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -168,11 +168,18 @@ namespace mtm {
+         SortedList<T> apply(Function function) const{
+             SortedList<T> appliedList;
+             for(const SortedListNode<T>& current : *this){
+-                appliedList.insert(function(current.data));
++                appliedList.insert((function(current)).data);
+             }
+             return appliedList;
+         }
+-        
++
++        ConstIterator begin() const {
++            return ConstIterator(this->head);
++        }
++
++        ConstIterator end() const {
++            return ConstIterator(nullptr);
++        }
+         /**
+          *
+          * the class should support the following public interface:
+@@ -193,8 +200,8 @@ namespace mtm {
+          * 8. insert - inserts a new element to the list V
+          * 9. remove - removes an element from the list V
+          * 10. length - returns the number of elements in the list V
+-         * 11. filter - returns a new list with elements that satisfy a given condition
+-         * 12. apply - returns a new list with elements that were modified by an operation
++         * 11. filter - returns a new list with elements that satisfy a given condition V
++         * 12. apply - returns a new list with elements that were modified by an operation V
+          */
+ 
+     };
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 7e37fa8..31ad921 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -2,7 +2,7 @@
+ #include "TaskManager.h"
+ using namespace mtm;
+ 
+-mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
++Person* TaskManager::isEmployeeExist(const string& personName) const{
+     for (int i = 0; i < numOfEmployees; i++){
+         if (employees[i]->getName() == personName){
+             return employees[i];
+@@ -11,7 +11,7 @@ mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
+     return nullptr;
+ }
+ 
+-void mtm::TaskManager::assignTask(const string &personName, const Task &task){
++void TaskManager::assignTask(const string &personName, const Task &task){
+     Person* cuurentEmployee = isEmployeeExist(personName);
+     if(cuurentEmployee==nullptr){
+         if(numOfEmployees == MAX_PERSONS){
+@@ -23,7 +23,7 @@ void mtm::TaskManager::assignTask(const string &personName, const Task &task){
+     cuurentEmployee->assignTask(task);
+ }
+ 
+-void mtm::TaskManager::completeTask(const string &personName){
++void TaskManager::completeTask(const string &personName){
+     Person* cuurentEmployee = isEmployeeExist(personName);
+     if(cuurentEmployee == nullptr){
+        return;
+@@ -36,4 +36,26 @@ void mtm::TaskManager::completeTask(const string &personName){
+     {
+         std::cout << e.what() << std::endl;
+     }
+-}
+\ No newline at end of file
++}
++
++void TaskManager::bumpPriorityByType(TaskType type, int priority){
++    if(priority <= 0){
++        return;
++    }
++    for(int i = 0; i < numOfEmployees; i++){
++        SortedList<Task> oldTasks = this->employees[i]->getTasks();
++
++        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
++    }
++}
++
++SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
++    if(tasks.begin()->getType() == type){
++        SortedList<Task> resultTasks;
++        Task newTask = Task(tasks.begin()->getPriority() + priority, tasks.begin()->getType(), tasks.begin()->getDescription());
++        resultTasks.insert(newTask);
++        return resultTasks;
++    }
++    return tasks;
++}
++
+diff --git a/TaskManager.h b/TaskManager.h
+index 90eacdd..46865a3 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -17,9 +17,9 @@ private:
+      */
+     static const int MAX_PERSONS = 10;
+     int numOfEmployees = 0;
+-    mtm::Person* employees[MAX_PERSONS];
+-
++    Person* employees[MAX_PERSONS];
+     Person* isEmployeeExist(const string& personName) const;
++    SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
+ 
+     // Note - Additional private fields and methods can be added if needed.
+ 
+
+commit 48eb0cd03b24c892900c38e43949646ee701e3de
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 15:04:48 2025 +0200
+
+    creating apply func
+
+diff --git a/SortedList.h b/SortedList.h
+index d849437..84e06d4 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -164,6 +164,15 @@ namespace mtm {
+             return filteredList;
+         }
+ 
++        template <class Function>
++        SortedList<T> apply(Function function) const{
++            SortedList<T> appliedList;
++            for(const SortedListNode<T>& current : *this){
++                appliedList.insert(function(current.data));
++            }
++            return appliedList;
++        }
++        
+         /**
+          *
+          * the class should support the following public interface:
+
+commit c793e7f302c5f0d8e4592583d493ce685696638d
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 14:53:07 2025 +0200
+
+    creating filter func
+
+diff --git a/SortedList.h b/SortedList.h
+index 2f154a8..d849437 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -152,6 +152,18 @@ namespace mtm {
+             delete iter;
+             this->length--;
+         }
++
++        template <class Condition>
++        SortedList<T> filter(Condition condition) const{
++            SortedList<T> filteredList;
++            for(const SortedListNode<T>& current : *this){
++                if(condition(current.data)) {
++                    filteredList.insert(current.data);
++                }
++            }
++            return filteredList;
++        }
++
+         /**
+          *
+          * the class should support the following public interface:
+@@ -170,7 +182,7 @@ namespace mtm {
+          *
+          * functions:
+          * 8. insert - inserts a new element to the list V
+-         * 9. remove - removes an element from the list
++         * 9. remove - removes an element from the list V
+          * 10. length - returns the number of elements in the list V
+          * 11. filter - returns a new list with elements that satisfy a given condition
+          * 12. apply - returns a new list with elements that were modified by an operation
+
+commit d298dd0c5f2cd7c6e37a5ea36a06940ae2752fa4
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 14:37:24 2025 +0200
+
+    creating remove func
+
+diff --git a/SortedList.h b/SortedList.h
+index 33f2372..2f154a8 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -46,7 +46,7 @@ namespace mtm {
+ 
+     public:
+         SortedList() : length(0), head(nullptr), tail(nullptr) {}
+-        SortedList(const SortedList& other) : length(other.length){
++        SortedList(const SortedList& other) : length(0){
+             if(other.head == nullptr) {
+                 this->head = nullptr;
+                 this->tail = nullptr;
+@@ -85,7 +85,7 @@ namespace mtm {
+             }
+             this->head = nullptr;
+             this->tail = nullptr;
+-            this->length = other.length;
++            this->length = 0;
+             if(other.head == nullptr) {
+                 return *this;
+             }
+@@ -136,6 +136,22 @@ namespace mtm {
+             return this->length;
+         }
+         
++        void remove(ConstIterator& iter){
++            if(iter == this->end()) {
++                return;
++            }
++            if(iter == this->begin()) {
++                this->head = this->head->next;
++            }
++            else{
++                SortedListNode<T>* nextNode = iter->next;
++                SortedListNode<T>* prevNode = iter->prev;
++                prevNode->next = nextNode;
++                nextNode->prev = prevNode;
++            }
++            delete iter;
++            this->length--;
++        }
+         /**
+          *
+          * the class should support the following public interface:
+@@ -155,7 +171,7 @@ namespace mtm {
+          * functions:
+          * 8. insert - inserts a new element to the list V
+          * 9. remove - removes an element from the list
+-         * 10. length - returns the number of elements in the list
++         * 10. length - returns the number of elements in the list V
+          * 11. filter - returns a new list with elements that satisfy a given condition
+          * 12. apply - returns a new list with elements that were modified by an operation
+          */
+
+commit dcfb97b1a2f8cc4475c01cbcab5ad520aeab402f
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 14:19:59 2025 +0200
+
+    creating sortedList::length()
+
+diff --git a/SortedList.h b/SortedList.h
+index bc8640f..33f2372 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -127,12 +127,14 @@ namespace mtm {
+                 this->tail = this->head;
+                 this->length = 1;
+                 return;
+-            }
+-            
++            }  
+             this->head->add(newElement);
+             this->length++;
+         }
+ 
++        int length() const {
++            return this->length;
++        }
+         
+         /**
+          *
+@@ -151,7 +153,7 @@ namespace mtm {
+          * 7. end method
+          *
+          * functions:
+-         * 8. insert - inserts a new element to the list
++         * 8. insert - inserts a new element to the list V
+          * 9. remove - removes an element from the list
+          * 10. length - returns the number of elements in the list
+          * 11. filter - returns a new list with elements that satisfy a given condition
+
+commit 307d8808fe0e8718d77846a9fa57b01be789f568
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 14:13:59 2025 +0200
+
+    changing CC and operator= to insert(currentOther.data), and creating insert
+
+diff --git a/SortedList.h b/SortedList.h
+index 1c66bd0..bc8640f 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -47,27 +47,36 @@ namespace mtm {
+     public:
+         SortedList() : length(0), head(nullptr), tail(nullptr) {}
+         SortedList(const SortedList& other) : length(other.length){
+-            SortedListNode<T>* currentOther = other.head;
+-            SortedListNode<T>* currentNode = this->head;
+-             SortedListNode<T>* previousNode = nullptr;
+-            while(currentOther != nullptr) {
+-                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+-                if(previousNode == nullptr) {
+-                    this->head = currentNode;
+-                }
+-                if(previousNode != nullptr) {
+-                    previousNode->next = currentNode;
+-                }
+-                this->tail = currentNode;
+-                previousNode = currentNode;
+-                currentOther = currentOther->next;
+-        }
++            if(other.head == nullptr) {
++                this->head = nullptr;
++                this->tail = nullptr;
++                return;
++            }
++            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
++                this->insert(currentOther.data);
++            }
++            
++            // SortedListNode<T>* currentOther = other.head;
++            // SortedListNode<T>* currentNode = this->head;
++            //  SortedListNode<T>* previousNode = nullptr;
++            // while(currentOther != nullptr) {
++            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
++            //     if(previousNode == nullptr) {
++            //         this->head = currentNode;
++            //     }
++            //     if(previousNode != nullptr) {
++            //         previousNode->next = currentNode;
++            //     }
++            //     this->tail = currentNode;
++            //     previousNode = currentNode;
++            //     currentOther = currentOther->next;
+         }
+ 
+         SortedList<T>& operator=(const SortedList& other) {
+             if(this == &other) {
+                 return *this;
+             }
++            
+             SortedListNode<T>* current = this->head;
+             while(current != nullptr) {
+                 SortedListNode<T>* next = current->next;
+@@ -77,21 +86,27 @@ namespace mtm {
+             this->head = nullptr;
+             this->tail = nullptr;
+             this->length = other.length;
+-            SortedListNode<T>* currentOther = other.head;
+-            SortedListNode<T>* currentNode = this->head;
+-            SortedListNode<T>* previousNode = nullptr;
+-            while(currentOther != nullptr) {
+-                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+-                if(previousNode == nullptr) {
+-                    this->head = currentNode;
+-                }
+-                if(previousNode != nullptr) {
+-                    previousNode->next = currentNode;
+-                }
+-                this->tail = currentNode;
+-                previousNode = currentNode;
+-                currentOther = currentOther->next;
++            if(other.head == nullptr) {
++                return *this;
++            }
++            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
++                this->insert(currentOther.data);
+             }
++            // SortedListNode<T>* currentOther = other.head;
++            // SortedListNode<T>* currentNode = this->head;
++            // SortedListNode<T>* previousNode = nullptr;
++            // while(currentOther != nullptr) {
++            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
++            //     if(previousNode == nullptr) {
++            //         this->head = currentNode;
++            //     }
++            //     if(previousNode != nullptr) {
++            //         previousNode->next = currentNode;
++            //     }
++            //     this->tail = currentNode;
++            //     previousNode = currentNode;
++            //     currentOther = currentOther->next;
++            // }
+             return *this;
+         }
+         ~SortedList() {
+@@ -103,6 +118,20 @@ namespace mtm {
+             }
+         }
+ 
++        void insert(const T& newElement){
++            if (newElement == nullptr) {
++                    //TODO invalid argument
++                }
++            if(this->head == nullptr) {
++                this->head = new SortedListNode<T>(nullptr, nullptr, newElement);
++                this->tail = this->head;
++                this->length = 1;
++                return;
++            }
++            
++            this->head->add(newElement);
++            this->length++;
++        }
+ 
+         
+         /**
+@@ -114,7 +143,7 @@ namespace mtm {
+          * 1. SortedList() - creates an empty list. V
+          * 2. copy constructor V
+          * 3. operator= - assignment operator V
+-         * 4. ~SortedList() - destructor
++         * 4. ~SortedList() - destructor V
+          *
+          * iterator:
+          * 5. class ConstIterator;
+
+commit c5596932a0672936d1c4b13e4ace77120711dc40
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 13:37:12 2025 +0200
+
+    removing class SortedListNode duplication
+
+diff --git a/SortedList.h b/SortedList.h
+index b0cb6ff..1c66bd0 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -24,7 +24,7 @@ namespace mtm {
+                 this->next = newNode;
+                 newNode->prev = this;
+             }
+-            SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
++            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) : prev(prev), next(next), data(data) {}
+             public:
+             void add(T const& const data) {
+                 if (data == nullptr) {
+@@ -43,28 +43,15 @@ namespace mtm {
+         int length;
+         SortedListNode<T>* head;
+         SortedListNode<T>* tail;
+-        class SortedListNode { 
+-        private:
+-            T* data;
+-            SortedListNode<T>* next;
+-            SortedListNode<T>* previous;
+-        public:
+-            SortedListNode(T* data = nullptr, SortedListNode<T>* next = nullptr, SortedListNode<T>* previous = nullptr) : data(data), next(next), previous(previous) {}
+-            ~SortedListNode() {
+-                delete data;
+-            }
+-        };
+-
+ 
+     public:
+         SortedList() : length(0), head(nullptr), tail(nullptr) {}
+-
+         SortedList(const SortedList& other) : length(other.length){
+             SortedListNode<T>* currentOther = other.head;
+             SortedListNode<T>* currentNode = this->head;
+              SortedListNode<T>* previousNode = nullptr;
+             while(currentOther != nullptr) {
+-                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
++                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+                 if(previousNode == nullptr) {
+                     this->head = currentNode;
+                 }
+@@ -94,7 +81,7 @@ namespace mtm {
+             SortedListNode<T>* currentNode = this->head;
+             SortedListNode<T>* previousNode = nullptr;
+             while(currentOther != nullptr) {
+-                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
++                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+                 if(previousNode == nullptr) {
+                     this->head = currentNode;
+                 }
+
+commit 8eadcb3870edf7cd034a945599defa41f2b687c0
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 12:55:31 2025 +0200
+
+    creating  ~SortedList()
+
+diff --git a/SortedList.h b/SortedList.h
+index debf7a3..b0cb6ff 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -107,6 +107,14 @@ namespace mtm {
+             }
+             return *this;
+         }
++        ~SortedList() {
++            SortedListNode<T>* current = this->head;
++            while(current != nullptr) {
++                SortedListNode<T>* next = current->next;
++                delete current;
++                current = next;
++            }
++        }
+ 
+ 
+         
+@@ -118,7 +126,7 @@ namespace mtm {
+          * constructors and destructor:
+          * 1. SortedList() - creates an empty list. V
+          * 2. copy constructor V
+-         * 3. operator= - assignment operator
++         * 3. operator= - assignment operator V
+          * 4. ~SortedList() - destructor
+          *
+          * iterator:
+
+commit b16f143293cdb6acf1760486e70f0761367b1ee0
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 12:50:03 2025 +0200
+
+    foxing rtype for  operator=
+
+diff --git a/SortedList.h b/SortedList.h
+index 049c7b9..debf7a3 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -77,7 +77,7 @@ namespace mtm {
+         }
+         }
+ 
+-        SortedList& operator=(const SortedList& other) {
++        SortedList<T>& operator=(const SortedList& other) {
+             if(this == &other) {
+                 return *this;
+             }
+
+commit 35390b57dcb4a7c6c2fd122da090748a1cd90ea7
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Thu Jan 2 12:49:28 2025 +0200
+
+    creating  operator= for sortedList
+
+diff --git a/SortedList.h b/SortedList.h
+index 31c5ed5..049c7b9 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -75,14 +75,49 @@ namespace mtm {
+                 previousNode = currentNode;
+                 currentOther = currentOther->next;
+         }
++        }
++
++        SortedList& operator=(const SortedList& other) {
++            if(this == &other) {
++                return *this;
++            }
++            SortedListNode<T>* current = this->head;
++            while(current != nullptr) {
++                SortedListNode<T>* next = current->next;
++                delete current;
++                current = next;
++            }
++            this->head = nullptr;
++            this->tail = nullptr;
++            this->length = other.length;
++            SortedListNode<T>* currentOther = other.head;
++            SortedListNode<T>* currentNode = this->head;
++            SortedListNode<T>* previousNode = nullptr;
++            while(currentOther != nullptr) {
++                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
++                if(previousNode == nullptr) {
++                    this->head = currentNode;
++                }
++                if(previousNode != nullptr) {
++                    previousNode->next = currentNode;
++                }
++                this->tail = currentNode;
++                previousNode = currentNode;
++                currentOther = currentOther->next;
++            }
++            return *this;
++        }
++
++
++        
+         /**
+          *
+          * the class should support the following public interface:
+          * if needed, use =defualt / =delete
+          *
+          * constructors and destructor:
+-         * 1. SortedList() - creates an empty list.
+-         * 2. copy constructor
++         * 1. SortedList() - creates an empty list. V
++         * 2. copy constructor V
+          * 3. operator= - assignment operator
+          * 4. ~SortedList() - destructor
+          *
+@@ -120,5 +155,5 @@ namespace mtm {
+      *
+      */
+     };
+-}
+-
++    }
++};
+\ No newline at end of file
+
+commit bf8549153b26c883a799ed93163f99b0d56bb963
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Wed Jan 1 19:00:06 2025 +0200
+
+    creating completeTask func
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 752291d..7e37fa8 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -22,3 +22,18 @@ void mtm::TaskManager::assignTask(const string &personName, const Task &task){
+     }
+     cuurentEmployee->assignTask(task);
+ }
++
++void mtm::TaskManager::completeTask(const string &personName){
++    Person* cuurentEmployee = isEmployeeExist(personName);
++    if(cuurentEmployee == nullptr){
++       return;
++    }
++    try
++    {
++        cuurentEmployee->completeTask();
++    }
++    catch (const std::runtime_error& e)
++    {
++        std::cout << e.what() << std::endl;
++    }
++}
+\ No newline at end of file
+
+commit 26c8d14dae8fb4f3659f32fec16ca5ede8896541
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Wed Jan 1 18:49:00 2025 +0200
+
+    fixing isEmployeeExist and creating assignTask
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index d5f7dfb..752291d 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -2,11 +2,23 @@
+ #include "TaskManager.h"
+ using namespace mtm;
+ 
+-bool TaskManager::isEmployeeExist(const string& personName) const{
++mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
+     for (int i = 0; i < numOfEmployees; i++){
+         if (employees[i]->getName() == personName){
+-            return true;
++            return employees[i];
+         }
+     }
+-    return false;
++    return nullptr;
++}
++
++void mtm::TaskManager::assignTask(const string &personName, const Task &task){
++    Person* cuurentEmployee = isEmployeeExist(personName);
++    if(cuurentEmployee==nullptr){
++        if(numOfEmployees == MAX_PERSONS){
++            throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
++        }
++        cuurentEmployee = new Person(personName);
++        employees[numOfEmployees++] = cuurentEmployee;
++    }
++    cuurentEmployee->assignTask(task);
+ }
+diff --git a/TaskManager.h b/TaskManager.h
+index 6249403..90eacdd 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -17,9 +17,9 @@ private:
+      */
+     static const int MAX_PERSONS = 10;
+     int numOfEmployees = 0;
+-    Person* employees[MAX_PERSONS];
++    mtm::Person* employees[MAX_PERSONS];
+ 
+-    bool isEmployeeExist(const string& personName) const;
++    Person* isEmployeeExist(const string& personName) const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+ 
+
+commit b00f9441a686498153f3a8bb990d3ef44c333f94
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Wed Jan 1 18:32:52 2025 +0200
+
+    adding private method - isEmployeeExist
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+index 00a59c7..d5f7dfb 100644
+--- a/TaskManager.cpp
++++ b/TaskManager.cpp
+@@ -1,3 +1,12 @@
+ #include <iostream>
+ #include "TaskManager.h"
+-#include "SortedList.h"
++using namespace mtm;
++
++bool TaskManager::isEmployeeExist(const string& personName) const{
++    for (int i = 0; i < numOfEmployees; i++){
++        if (employees[i]->getName() == personName){
++            return true;
++        }
++    }
++    return false;
++}
+diff --git a/TaskManager.h b/TaskManager.h
+index 6be757b..6249403 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -2,8 +2,9 @@
+ #pragma once
+ 
+ #include "Task.h"
+-#include "Person.h" //check if allowed
+-#include "SortedList.h" //check if allowed
++#include "SortedList.h"
++#include "Person.h"
++using namespace mtm;
+ 
+ 
+ /**
+@@ -16,7 +17,9 @@ private:
+      */
+     static const int MAX_PERSONS = 10;
+     int numOfEmployees = 0;
+-    mtm::Person* employees[MAX_PERSONS];
++    Person* employees[MAX_PERSONS];
++
++    bool isEmployeeExist(const string& personName) const;
+ 
+     // Note - Additional private fields and methods can be added if needed.
+ 
+
+commit d1ea71d3453e9cd5a280e029dd24431566ad78bd
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Wed Jan 1 18:18:01 2025 +0200
+
+    defining TaskManager c'tor to default
+
+diff --git a/TaskManager.h b/TaskManager.h
+index 3a44f03..6be757b 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -15,7 +15,7 @@ private:
+      * @brief Maximum number of persons the TaskManager can handle.
+      */
+     static const int MAX_PERSONS = 10;
+-    int numOfEmployees;
++    int numOfEmployees = 0;
+     mtm::Person* employees[MAX_PERSONS];
+ 
+     // Note - Additional private fields and methods can be added if needed.
+@@ -26,7 +26,7 @@ public:
+      *
+      * Note - you may add =default if needed.
+      */
+-    TaskManager();
++    TaskManager() = default;
+ 
+     /**
+      * @brief Deleted copy constructor to prevent copying of TaskManager objects.
+
+commit 2ca9a6df4110f8a224b2eb936ee9e55029096acc
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Wed Jan 1 18:14:52 2025 +0200
+
+    adding private fields to taskManager.h
+
+diff --git a/TaskManager.h b/TaskManager.h
+index f1acc89..3a44f03 100644
+--- a/TaskManager.h
++++ b/TaskManager.h
+@@ -2,6 +2,9 @@
+ #pragma once
+ 
+ #include "Task.h"
++#include "Person.h" //check if allowed
++#include "SortedList.h" //check if allowed
++
+ 
+ /**
+  * @brief Class managing tasks assigned to multiple persons.
+@@ -12,6 +15,8 @@ private:
+      * @brief Maximum number of persons the TaskManager can handle.
+      */
+     static const int MAX_PERSONS = 10;
++    int numOfEmployees;
++    mtm::Person* employees[MAX_PERSONS];
+ 
+     // Note - Additional private fields and methods can be added if needed.
+ 
+
+commit 7fb158bb718f08b35e811c40c9172be503807e27
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Wed Jan 1 17:47:32 2025 +0200
+
+    creating TaskManager.cpp file
+
+diff --git a/TaskManager.cpp b/TaskManager.cpp
+new file mode 100644
+index 0000000..00a59c7
+--- /dev/null
++++ b/TaskManager.cpp
+@@ -0,0 +1,3 @@
++#include <iostream>
++#include "TaskManager.h"
++#include "SortedList.h"
+
+commit e6a353555de175a882959e6ac3c3c61703715665
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Tue Dec 31 08:43:58 2024 +0200
+
+    add const
+
+diff --git a/SortedList.h b/SortedList.h
+index 4290e9c..31c5ed5 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -26,7 +26,7 @@ namespace mtm {
+             }
+             SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
+             public:
+-            void add(T& data) {
++            void add(T const& const data) {
+                 if (data == nullptr) {
+                     //TODO invalid argument
+                 }
+
+commit daa6df8966b91b05a59f8a46be14f8130a134f2a
+Author: guy friedman <guy.friedman2001@gmail.com>
+Date:   Tue Dec 31 08:35:38 2024 +0200
+
+    add code to SortedListNode
+
+diff --git a/SortedList.h b/SortedList.h
+index 2eb0a1f..4290e9c 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -7,6 +7,38 @@ namespace mtm {
+ 
+     template <typename T>
+     class SortedList {
++        template <typename T>
++        class SortedListNode {
++            private:
++            friend class SortedList<T>;
++            SortedListNode<T> * prev;
++            SortedListNode<T> * next;
++            T* data;
++            void add(SortedListNode<T> * newNode) {
++                if (newNode <= this->next){ //TODO create > operator, make null node smallest;
++                    this->next->add(newNode);
++                    return;
++                }
++                this->next->prev = newNode;
++                newNode->next = this->next;
++                this->next = newNode;
++                newNode->prev = this;
++            }
++            SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
++            public:
++            void add(T& data) {
++                if (data == nullptr) {
++                    //TODO invalid argument
++                }
++                SortedListNode<T> * newNode = new SortedListNode<T>(data);
++                this->add(newNode);
++            }
++            ~SortedListNode() {
++                this->prev = nullptr;
++                this->next = nullptr;
++                delete this->data;
++            }
++        };
+         private:
+         int length;
+         SortedListNode<T>* head;
+
+commit 10b87fb6f427d4d5a2df42c5ddc84bea358aef69
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Mon Dec 30 18:34:33 2024 +0200
+
+    creating CC
+
+diff --git a/SortedList.h b/SortedList.h
+index e3eabd6..2eb0a1f 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -26,6 +26,23 @@ namespace mtm {
+ 
+     public:
+         SortedList() : length(0), head(nullptr), tail(nullptr) {}
++
++        SortedList(const SortedList& other) : length(other.length){
++            SortedListNode<T>* currentOther = other.head;
++            SortedListNode<T>* currentNode = this->head;
++             SortedListNode<T>* previousNode = nullptr;
++            while(currentOther != nullptr) {
++                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
++                if(previousNode == nullptr) {
++                    this->head = currentNode;
++                }
++                if(previousNode != nullptr) {
++                    previousNode->next = currentNode;
++                }
++                this->tail = currentNode;
++                previousNode = currentNode;
++                currentOther = currentOther->next;
++        }
+         /**
+          *
+          * the class should support the following public interface:
+
+commit 24862fd70781ac234296c413ce254c955c663f1f
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Mon Dec 30 18:17:38 2024 +0200
+
+    creating SortedList() c'tor
+
+diff --git a/SortedList.h b/SortedList.h
+index e011cce..e3eabd6 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -25,6 +25,7 @@ namespace mtm {
+ 
+ 
+     public:
++        SortedList() : length(0), head(nullptr), tail(nullptr) {}
+         /**
+          *
+          * the class should support the following public interface:
+
+commit 8c4be612b0f1ca04da33d029393457f96e7fc7b0
+Author: Ori Elkabetz <orielk2@gmail.com>
+Date:   Mon Dec 30 18:12:11 2024 +0200
+
+    setting SortedList private and creating class SortedListNode
+
+diff --git a/SortedList.h b/SortedList.h
+index ddb0d8e..e011cce 100644
+--- a/SortedList.h
++++ b/SortedList.h
+@@ -7,6 +7,23 @@ namespace mtm {
+ 
+     template <typename T>
+     class SortedList {
++        private:
++        int length;
++        SortedListNode<T>* head;
++        SortedListNode<T>* tail;
++        class SortedListNode { 
++        private:
++            T* data;
++            SortedListNode<T>* next;
++            SortedListNode<T>* previous;
++        public:
++            SortedListNode(T* data = nullptr, SortedListNode<T>* next = nullptr, SortedListNode<T>* previous = nullptr) : data(data), next(next), previous(previous) {}
++            ~SortedListNode() {
++                delete data;
++            }
++        };
++
++
+     public:
+         /**
+          *
+
+commit a3481f8f37f2fbd59d824d4020f19d434ec6f9a5
+Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
+Date:   Sun Dec 22 10:44:54 2024 +0200
+
+    Update Task.cpp
+
+diff --git a/Task.cpp b/Task.cpp
+index 176989a..b5d3670 100644
+--- a/Task.cpp
++++ b/Task.cpp
+@@ -50,7 +50,10 @@ ostream &operator<<(ostream& os, const Task& task) {
+ }
+ 
+ bool operator>(const Task& lhs, const Task& rhs) {
+-    return lhs.m_priority > rhs.m_priority;
++    if (lhs.m_priority == rhs.m_priority) {
++            return lhs.m_id < rhs.m_id; 
++        }
++        return lhs.m_priority > rhs.m_priority;
+ }
+ 
+ 
+
+commit ef076db7052b54a8918ae43ebe390b6a7a629909
+Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
+Date:   Fri Dec 20 17:02:30 2024 +0200
+
+    Update README.md
+
+diff --git a/README.md b/README.md
+index 22bd23c..8b87dca 100644
+--- a/README.md
++++ b/README.md
+@@ -2,6 +2,5 @@
+ 
+ This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
+ 
+-You may find the full instructions for this assignment on the [course's website](https://moodle2324.technion.ac.il/course/view.php?id=3205).
+-
+-Good luck and have fun!
++You may find the full instructions for this assignment on the course's website.
++Good luck, and have fun!
+
+commit ef8a3ce100827ef3fead32a4927a3566fe3d0d5d
+Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
+Date:   Fri Dec 20 17:01:08 2024 +0200
+
+    Add files via upload
+
+diff --git a/Person.cpp b/Person.cpp
+new file mode 100644
+index 0000000..4a6b9aa
+--- /dev/null
++++ b/Person.cpp
+@@ -0,0 +1,51 @@
++
++#include "Person.h"
++using std::endl;
++
++// Constructor
++Person::Person(const string &name) : m_name(name) {}
++
++// Getters and setters
++string Person::getName() const {
++    return m_name;
++}
++
++const SortedList<Task>& Person::getTasks() const {
++    return m_tasks;
++}
++
++void Person::setTasks(const SortedList<Task>& tasks) {
++    m_tasks = tasks;
++}
++
++// Other methods
++void Person::assignTask(const Task& task) {
++    m_tasks.insert(task);
++}
++
++
++int Person::completeTask() {
++    if (m_tasks.length() == 0) {
++        throw std::runtime_error("No tasks assigned to this person.");
++    }
++    int taskId = (*m_tasks.begin()).getId();
++    m_tasks.remove(m_tasks.begin());
++    return taskId;
++}
++
++const Task& Person::getHighestPriorityTask() const {
++    if (m_tasks.length() == 0) {
++        throw std::runtime_error("No tasks assigned to this person.");
++    }
++    return (*m_tasks.begin());
++}
++
++// Overloaded operators
++ostream& operator<<(ostream& os, const Person& person) {
++    os << "Person: " << person.m_name << endl;
++    // Assuming the SortedList has an appropriate method to list tasks
++    for (const Task& t: person.m_tasks) {
++        os << t << endl;
++    }
++    return os;
++}
+diff --git a/Person.h b/Person.h
+new file mode 100644
+index 0000000..aea7f69
+--- /dev/null
++++ b/Person.h
+@@ -0,0 +1,79 @@
++
++#pragma once
++
++#include <iostream>
++#include <string>
++#include "Task.h"
++#include "SortedList.h"
++
++using mtm::SortedList;
++using std::ostream;
++using std::string;
++
++/**
++ * @brief Class representing a person who can have tasks assigned.
++ */
++class Person {
++private:
++    string m_name;
++    SortedList<Task> m_tasks;
++
++public:
++    /**
++     * @brief Constructor to create a Person object.
++     *
++     * @param name The name of the person (default is an empty string).
++     */
++    Person(const string& name = "");
++
++    /**
++     * @brief Gets the name of the person.
++     *
++     * @return string The name of the person.
++     */
++    string getName() const;
++
++    /**
++     * @brief Gets the list of tasks assigned to the person.
++     *
++     * @return const SortedList<Task>& The list of tasks assigned to the person.
++     */
++    const SortedList<Task>& getTasks() const;
++
++    /**
++     * @brief Sets the list of tasks for the person.
++     *
++     * @param tasks The list of tasks to be set.
++     */
++    void setTasks(const SortedList<Task>& tasks);
++
++    /**
++     * @brief Assigns a new task to the person.
++     *
++     * @param task The task to be assigned.
++     */
++    void assignTask(const Task& task);
++
++    /**
++     * @brief Completes the highest priority task from the list of tasks.
++     *
++     * @return int The ID of the completed task.
++     */
++    int completeTask();
++
++    /**
++     * @brief Gets the highest priority task assigned to the person.
++     *
++     * @return const Task& The highest priority task.
++     */
++    const Task& getHighestPriorityTask() const;
++
++    /**
++     * @brief Overloaded output stream operator for printing Person details.
++     *
++     * @param os The output stream.
++     * @param person The Person object to be printed.
++     * @return ostream& The output stream with the Person details.
++     */
++    friend ostream &operator<<(ostream &os, const Person &person);
++};
+diff --git a/README.md b/README.md
+index f53e20d..22bd23c 100644
+--- a/README.md
++++ b/README.md
+@@ -1,6 +1,7 @@
+-# HW3_2425A
+-This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
+-
+-You may find the full instructions for this assignment on the course's website.
+-
+-Good luck and have fun!
++# Matam Homework 3
++
++This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
++
++You may find the full instructions for this assignment on the [course's website](https://moodle2324.technion.ac.il/course/view.php?id=3205).
++
++Good luck and have fun!
+diff --git a/SortedList.h b/SortedList.h
+new file mode 100644
+index 0000000..ddb0d8e
+--- /dev/null
++++ b/SortedList.h
+@@ -0,0 +1,57 @@
++#pragma once
++
++#include <iostream>
++#include <stdexcept>
++
++namespace mtm {
++
++    template <typename T>
++    class SortedList {
++    public:
++        /**
++         *
++         * the class should support the following public interface:
++         * if needed, use =defualt / =delete
++         *
++         * constructors and destructor:
++         * 1. SortedList() - creates an empty list.
++         * 2. copy constructor
++         * 3. operator= - assignment operator
++         * 4. ~SortedList() - destructor
++         *
++         * iterator:
++         * 5. class ConstIterator;
++         * 6. begin method
++         * 7. end method
++         *
++         * functions:
++         * 8. insert - inserts a new element to the list
++         * 9. remove - removes an element from the list
++         * 10. length - returns the number of elements in the list
++         * 11. filter - returns a new list with elements that satisfy a given condition
++         * 12. apply - returns a new list with elements that were modified by an operation
++         */
++
++    };
++
++    template <class T>
++    class SortedList<T>::ConstIterator {
++    /**
++     * the class should support the following public interface:
++     * if needed, use =defualt / =delete
++     *
++     * constructors and destructor:
++     * 1. a ctor(or ctors) your implementation needs
++     * 2. copy constructor
++     * 3. operator= - assignment operator
++     * 4. ~ConstIterator() - destructor
++     *
++     * operators:
++     * 5. operator* - returns the element the iterator points to
++     * 6. operator++ - advances the iterator to the next element
++     * 7. operator!= - returns true if the iterator points to a different element
++     *
++     */
++    };
++}
++
+diff --git a/Task.cpp b/Task.cpp
+new file mode 100644
+index 0000000..176989a
+--- /dev/null
++++ b/Task.cpp
+@@ -0,0 +1,83 @@
++
++#include "Task.h"
++
++// Constructor
++Task::Task(int priority, TaskType type, const string &desc)
++    : m_description(desc), m_priority(priority), m_type(type)
++{
++    // enforce priority range of 0-100
++    // 0 is lowest priority, 100 is highest
++    if (m_priority < 0)
++    {
++        m_priority = 0;
++    }
++    else if (m_priority > 100)
++    {
++        m_priority = 100;
++    }
++}
++
++Task::Task(int priority, const string &desc)
++    : Task(priority, TaskType::General, desc) {}
++
++// Getters and setters
++int Task::getId() const {
++    return m_id;
++}
++
++void Task::setId(int newId) {
++    m_id = newId;
++}
++
++TaskType Task::getType() const {
++    return m_type;
++}
++
++string Task::getDescription() const {
++    return m_description;
++}
++
++int Task::getPriority() const {
++    return m_priority;
++}
++
++
++// Overloaded operators
++ostream &operator<<(ostream& os, const Task& task) {
++    os << "Task ID: " << task.m_id << ", Priority: " << task.m_priority;
++    os << ", Type: " << taskTypeToString(task.m_type) << ", Description: " << task.m_description;
++    return os;
++}
++
++bool operator>(const Task& lhs, const Task& rhs) {
++    return lhs.m_priority > rhs.m_priority;
++}
++
++
++// Convert TaskType to string
++std::string taskTypeToString(TaskType type) {
++    switch (type) {
++    case TaskType::Meeting:
++        return "Meeting";
++    case TaskType::Presentation:
++        return "Presentation";
++    case TaskType::Documentation:
++        return "Documentation";
++    case TaskType::Development:
++        return "Development";
++    case TaskType::Testing:
++        return "Testing";
++    case TaskType::Research:
++        return "Research";
++    case TaskType::Training:
++        return "Training";
++    case TaskType::Maintenance:
++        return "Maintenance";
++    case TaskType::CustomerSupport:
++        return "Customer Support";
++    case TaskType::General:
++        return "General";
++    default:
++        return "Unknown Task";
++    }
++}
+diff --git a/Task.h b/Task.h
+new file mode 100644
+index 0000000..87ed435
+--- /dev/null
++++ b/Task.h
+@@ -0,0 +1,115 @@
++
++#pragma once
++
++#include <iostream>
++#include <string>
++
++using std::ostream;
++using std::string;
++
++/**
++ * @brief Enum class representing different types of tasks.
++ */
++enum class TaskType {
++    Meeting,
++    Presentation,
++    Documentation,
++    Development,
++    Testing,
++    Research,
++    Training,
++    Maintenance,
++    CustomerSupport,
++    General
++};
++
++/**
++ * @brief Converts a TaskType enum to its corresponding string representation.
++ *
++ * @param type The TaskType enum to be converted.
++ * @return std::string The string representation of the TaskType.
++ */
++string taskTypeToString(TaskType type);
++
++/**
++ * @brief Class representing a task.
++ */
++class Task {
++private:
++    int m_id;
++    string m_description;
++    int m_priority;
++    TaskType m_type;
++
++public:
++    /**
++     * @brief Constructor to create a Task object.
++     *
++     * @param priority The priority of the task, enforced to be in range [0, 100].
++     * @param type The type of the task (default is TaskType::General).
++     * @param desc The description of the task (default is an empty string).
++     */
++    Task(int priority, TaskType type = TaskType::General, const string& desc = "");
++
++    /**
++     * @brief Constructor to create a Task object with a default type.
++     *
++     * @param priority The priority of the task, enforced to be in range [0, 100].
++     * @param desc The description of the task.
++     */
++    Task(int priority, const string& desc = "");
++
++    /**
++     * @brief Gets the ID of the task.
++     *
++     * @return int The ID of the task.
++     */
++    int getId() const;
++
++    /**
++     * @brief Sets the ID of the task.
++     *
++     * @param newId The new ID to be set for the task.
++     */
++    void setId(int newId);
++
++    /**
++     * @brief Gets the description of the task.
++     *
++     * @return string The description of the task.
++     */
++    string getDescription() const;
++
++    /**
++     * @brief Gets the priority of the task.
++     *
++     * @return int The priority of the task.
++     */
++    int getPriority() const;
++
++    /**
++     * @brief Gets the type of the task.
++     *
++     * @return TaskType The type of the task.
++     */
++    TaskType getType() const;
++
++    /**
++     * @brief Overloaded output stream operator for printing Task details.
++     *
++     * @param os The output stream.
++     * @param task The Task object to be printed.
++     * @return ostream& The output stream with the Task details.
++     */
++    friend ostream &operator<<(ostream& os, const Task& task);
++
++    /**
++     * @brief Overloaded greater-than operator to compare two Task objects based on priority.
++     *
++     * @param lhs The left-hand side Task object.
++     * @param rhs The right-hand side Task object.
++     * @return true If the priority of lhs is greater than that of rhs.
++     * @return false If the priority of lhs is not greater than that of rhs.
++     */
++    friend bool operator>(const Task& lhs, const Task& rhs);
++};
+diff --git a/TaskManager.h b/TaskManager.h
+new file mode 100644
+index 0000000..f1acc89
+--- /dev/null
++++ b/TaskManager.h
+@@ -0,0 +1,75 @@
++
++#pragma once
++
++#include "Task.h"
++
++/**
++ * @brief Class managing tasks assigned to multiple persons.
++ */
++class TaskManager {
++private:
++    /**
++     * @brief Maximum number of persons the TaskManager can handle.
++     */
++    static const int MAX_PERSONS = 10;
++
++    // Note - Additional private fields and methods can be added if needed.
++
++public:
++    /**
++     * @brief Default constructor to create a TaskManager object.
++     *
++     * Note - you may add =default if needed.
++     */
++    TaskManager();
++
++    /**
++     * @brief Deleted copy constructor to prevent copying of TaskManager objects.
++     */
++    TaskManager(const TaskManager &other) = delete;
++
++    /**
++     * @brief Deleted copy assignment operator to prevent assignment of TaskManager objects.
++     */
++    TaskManager &operator=(const TaskManager &other) = delete;
++
++    /**
++     * @brief Assigns a task to a person.
++     *
++     * @param personName The name of the person to whom the task will be assigned.
++     * @param task The task to be assigned.
++     */
++    void assignTask(const string &personName, const Task &task);
++
++    /**
++     * @brief Completes the highest priority task assigned to a person.
++     *
++     * @param personName The name of the person who will complete the task.
++     */
++    void completeTask(const string &personName);
++
++    /**
++     * @brief Bumps the priority of all tasks of a specific type.
++     *
++     * @param type The type of tasks whose priority will be bumped.
++     * @param priority The amount by which the priority will be increased.
++     */
++    void bumpPriorityByType(TaskType type, int priority);
++
++    /**
++     * @brief Prints all employees and their tasks.
++     */
++    void printAllEmployees() const;
++
++    /**
++     * @brief Prints all tasks of a specific type.
++     *
++     * @param type The type of tasks to be printed.
++     */
++    void printTasksByType(TaskType type) const;
++
++    /**
++     * @brief Prints all tasks assigned to all employees.
++     */
++    void printAllTasks() const;
++};
+diff --git a/main.cpp b/main.cpp
+new file mode 100644
+index 0000000..8fd68ab
+--- /dev/null
++++ b/main.cpp
+@@ -0,0 +1,531 @@
++
++#include <iostream>
++#include "TaskManager.h"
++#include "Task.h"
++
++using std::cout;
++using std::endl;
++
++using mtm::SortedList;
++
++typedef bool (*testFunc)(void);
++
++//defines
++
++#define RUN_TEST(test, name)                        \
++    do                                              \
++    {                                               \
++        std::cout << "Running " << name << " ... " << std::endl ; \
++        if (test())                                 \
++        {                                           \
++            std::cout << "[OK]\n";                  \
++        }                                           \
++        else                                        \
++        {                                           \
++            std::cout << "[Failed]\n";              \
++        }                                           \
++    } while (0)
++
++#define ASSERT_TEST(expr)                                                                               \
++    do                                                                                                  \
++    {                                                                                                   \
++        if (!(expr))                                                                                    \
++        {                                                                                               \
++            std::cout << "\nAssertion failed at " << __FILE__ << ":" << __LINE__ << #expr << std::endl; \
++            return false;                                                                               \
++        }                                                                                               \
++    } while (0)
++
++
++
++
++
++// tests
++
++class ExceptionThrowingType
++{
++public:
++    static int copy_count;
++    static const int max_copies = 3; // Exception will be thrown on the third copy
++    static bool throw_state;
++
++    ExceptionThrowingType(int value = 0) : value(value) {}
++
++    // Copy constructor
++    ExceptionThrowingType(const ExceptionThrowingType &other) : value(other.value)
++    {
++        if ((++copy_count >= max_copies) && (throw_state))
++        {
++            throw std::bad_alloc();
++        }
++    }
++
++    // Assignment operator
++    ExceptionThrowingType &operator=(const ExceptionThrowingType &other)
++    {
++        if (this != &other)
++        {
++            value = other.value;
++            if (++copy_count >= max_copies)
++            {
++                throw std::bad_alloc();
++            }
++        }
++        return *this;
++    }
++
++    // Comparison operator
++    bool operator>(const ExceptionThrowingType &other) const
++    {
++        return value > other.value;
++    }
++
++    int getValue() const
++    {
++        return value;
++    }
++
++    void zeroCounter()
++    {
++        this->copy_count = 0;
++    }
++    void changeState(bool state)
++    {
++        this->throw_state=state;
++    }
++
++private:
++    int value;
++};
++
++int ExceptionThrowingType::copy_count = 0;
++bool ExceptionThrowingType::throw_state = false;
++
++
++bool testTaskManagerPrintTasksByType()
++{
++    TaskManager manager;
++    Task task1(1, TaskType::Documentation, "Document API methods");
++    Task task2(5, TaskType::Development, "Refactor core module");
++    Task task3(8, TaskType::Testing, "Integration testing");
++    Task task4(5, TaskType::General, "Weekly team meeting");
++    Task task5(7, TaskType::Development, "Implement new feature");
++    Task task6(3, TaskType::Documentation, "Update user guide");
++    Task task7(-1, TaskType::Testing, "Write unit tests");
++    Task task8(2000, TaskType::Testing, "stream");
++    Task task9(6, TaskType::Development, "Fix bug in UI");
++    Task task10(4, TaskType::General, "Clean up code");
++    Task task11(2, TaskType::Documentation, "Write README");
++    Task task12(1, TaskType::Testing, "Run system tests");
++    Task task13(2, TaskType::Testing, "Run system tests");
++    Task task14(1, TaskType::Testing, "Run system tests");
++    Task task15(1, TaskType::Testing, "Run system tests");
++    Task task16(4, TaskType::General, "Clean up code");
++    Task task17(4, TaskType::General, "Clean up code");
++
++    manager.assignTask("Alice", task1);
++    manager.assignTask("Bob", task2);
++    manager.assignTask("Bob", Task(5, TaskType::General, "Run system tests"));
++    manager.assignTask("Bob", Task(7, TaskType::General, "Run system tests"));
++    manager.assignTask("Bob", Task(-1, TaskType::General, "Run system tests"));
++    manager.assignTask("Bob", Task(200, TaskType::General, "200"));
++    manager.assignTask("Charlixcx", task3);
++    manager.assignTask("Dana", task4);
++    manager.assignTask("Eve", task5);
++    manager.assignTask("Frank", task6);
++    manager.assignTask("Grace", task7);
++    manager.assignTask("SOPHIE", task8);
++    manager.assignTask("Hank", task9);
++    manager.assignTask("Bonie", task10);
++
++    manager.assignTask("Alice", task1);
++    manager.assignTask("Bob", task1);
++
++    manager.completeTask("Dana");
++
++    manager.printTasksByType(TaskType::Development);
++    cout << endl;
++    manager.bumpPriorityByType(TaskType::Development, 50);
++    manager.printTasksByType(TaskType::Development);
++    cout << endl;
++    manager.printTasksByType(TaskType::Testing);
++    cout << endl;
++
++    return true;
++}
++
++bool testListBasic()
++{
++    // Test default constructor
++    SortedList<int> list;
++    if (list.length() != 0)
++        return false;
++
++    // Test insert and length
++    list.insert(5);
++    list.insert(3);
++    list.insert(8);
++    if (list.length() != 3)
++        return false;
++
++    // Test copy constructor
++    SortedList<int> copy(list);
++    if (copy.length() != 3)
++        return false;
++
++    // Check copied elements
++    auto it_copy = copy.begin();
++    auto it_list = list.begin();
++    for (int i = 0; i < list.length(); ++i)
++    {
++        if ((*it_copy != *it_list) || (&(*it_copy) == &(*it_list)))
++            return false;
++        ++it_copy;
++        ++it_list;
++    }
++
++    // Test assignment operator
++    SortedList<int> another_list;
++    another_list = list;
++    if (another_list.length() != 3)
++        return false;
++
++    // Check assigned elements
++    it_list = list.begin();
++    auto it_another_list = another_list.begin();
++    for (int i = 0; i < list.length(); ++i)
++    {
++        if ((*it_another_list != *it_list) || (&(*it_another_list) == &(*it_list)))
++            return false;
++        ++it_another_list;
++        ++it_list;
++    }
++
++    // Ensure deep copy
++    list.insert(10);
++    if (another_list.length() != 3)
++        return false;
++
++    return true;
++}
++
++
++
++bool testListExceptions()
++{
++    using mtm::SortedList;
++
++    SortedList<int> list;
++
++    // Attempt to increment an iterator past the end of the list
++    try
++    {
++        auto it = list.end();
++        ++it;         // This should throw an exception
++        return false; // If no exception is thrown, the test should fail
++    }
++    catch (const std::out_of_range &e)
++    {
++        // Exception is expected, so the test should pass
++    }
++
++    // Insert some elements
++    list.insert(5);
++    list.insert(3);
++    list.insert(8);
++    list.insert(1);
++
++    // Attempt to increment an iterator past the end of the list after insertion
++    try
++    {
++        auto it = list.begin();
++        ++it;
++        ++it;
++        ++it;
++        ++it;
++        ++it;         // This should throw an exception
++        return false; // If no exception is thrown, the test should fail
++    }
++    catch (const std::out_of_range &e)
++    {
++        // Exception is expected, so the test should pass
++    }
++
++    // Attempt to remove using an end iterator (which should be invalid)
++    try
++    {
++        auto endIt = list.end();
++        list.remove(endIt); // This should not throw an exception but should handle gracefully
++        // No exception expected, so no assert here
++    }
++    catch (...)
++    {
++        return false; // If any exception is thrown, the test should fail
++    }
++
++    // Create an iterator and make it invalid by incrementing past the end
++    auto it = list.begin();
++    ++it;
++    ++it;
++    ++it;
++    ++it; // Now it should be invalid (past end)
++
++    try
++    {
++        ++it;         // Incrementing further should throw an exception
++        return false; // If no exception is thrown, the test should fail
++    }
++    catch (const std::out_of_range &e)
++    {
++        // Exception is expected, so the test should pass
++    }
++
++    ////
++
++    // Test exception safety in copy constructor
++    try
++    {
++        SortedList<int> list;
++        list.insert(1);
++        list.insert(2);
++        SortedList<int> copy(list); // This should not throw
++    }
++    catch (...)
++    {
++        return false;
++    }
++
++    // Test exception safety in assignment operator
++    try
++    {
++        SortedList<int> list;
++        list.insert(1);
++        list.insert(2);
++        SortedList<int> another_list;
++        another_list = list; // This should not throw
++    }
++    catch (...)
++    {
++        return false;
++    }
++
++    // Ensure proper memory management in case of exceptions (Mock the exception)
++    try
++    {
++        SortedList<int> list;
++        list.insert(1);
++        list.insert(2);
++        // Simulate exception during copy constructor
++
++        struct MockException : public std::exception
++        {
++        };
++        throw MockException();
++        SortedList<int> copy(list);
++        return false; // Should not reach here
++    }
++    catch (const std::exception &)
++    {
++        // Expected behavior
++    }
++
++    return true;
++}
++
++bool testCopyConstructorExceptionSafety()
++{
++    try
++    {
++        ExceptionThrowingType x(1);
++        x.zeroCounter();
++        x.changeState(false);
++        SortedList<ExceptionThrowingType> list;
++        list.insert(ExceptionThrowingType(1));
++        list.insert(ExceptionThrowingType(2));
++
++        // Force an exception during the copy constructor
++        // add flag
++        x.changeState(true);
++        SortedList<ExceptionThrowingType> copy(list); // Should throw std::bad_alloc
++        return false;                                 // If no exception is thrown, the test fails
++    }
++    catch (const std::bad_alloc &)
++    {
++        // Expected exception was thrown
++    }
++    catch (...)
++    {
++        return false; // Unexpected exception
++    }
++
++    return true;
++}
++
++
++
++bool testTaskManager()
++{
++    TaskManager tm;
++
++    // Create some tasks
++    Task task1(1, TaskType::Meeting, "Discuss project goals");
++    Task task2(2, TaskType::Development, "Implement feature X");
++    Task task3(3, TaskType::Testing, "Test feature X");
++    Task task4(4, TaskType::Documentation, "Write docs for feature X");
++    Task task5(5, TaskType::Research, "Explore new tech");
++
++    // Assign tasks to employees
++    tm.assignTask("Alice", task1);
++    tm.assignTask("Bob", task2);
++    tm.assignTask("Alice", task3);
++    tm.assignTask("Charlie", task4);
++    tm.assignTask("Bob", task5);
++
++    tm.printAllEmployees();
++    cout << endl;
++
++    tm.printAllTasks();
++    cout << endl;
++
++    // Complete a task and verify it no longer appears
++    tm.completeTask("Alice");
++
++    tm.printAllTasks();
++    cout << endl;
++
++    tm.bumpPriorityByType(TaskType::Documentation, 2);
++
++    tm.printTasksByType(TaskType::Documentation);
++    cout << endl;
++
++    tm.printTasksByType(TaskType::Research);
++    cout << endl;
++
++    return true;
++}
++
++bool testTaskManagerAssignTask()
++{
++    TaskManager manager;
++    Task task1(1, TaskType::Documentation, "Document API methods");
++    Task task2(5, TaskType::Development, "Refactor core module");
++    Task task3(8, TaskType::Testing, "Integration testing");
++    Task task4(5, TaskType::General, "Weekly team meeting");
++    Task task5(7, TaskType::Development, "Implement new feature");
++    Task task6(3, TaskType::Documentation, "Update user guide");
++    Task task7(-1, TaskType::Testing, "Write unit tests");
++    Task task8(2000, TaskType::Testing, "stream");
++    Task task9(6, TaskType::Development, "Fix bug in UI");
++    Task task10(4, TaskType::General, "Clean up code");
++    Task task11(2, TaskType::Documentation, "Write README");
++    Task task12(1, TaskType::Testing, "Run system tests");
++    Task task13(1, TaskType::Testing, "Run system tests");
++    Task task14(1, TaskType::Testing, "Run system tests");
++    Task task15(1, TaskType::Testing, "Run system tests");
++    Task task16(4, TaskType::General, "Clean up code");
++    Task task17(4, TaskType::General, "Clean up code");
++
++    manager.assignTask("Alice", task1);
++    manager.assignTask("Bob", task2);
++    manager.assignTask("Charlixcx", task3);
++    manager.assignTask("Dana", task4);
++    manager.assignTask("Eve", task5);
++    manager.assignTask("Frank", task6);
++    manager.assignTask("Grace", task7);
++    manager.assignTask("SOPHIE", task8);
++    manager.assignTask("Hank", task9);
++    manager.assignTask("Bonie", task10);
++
++    try
++    {
++        manager.assignTask("boom", task11);
++        return false; // should have thrown exception
++    }
++    catch (std::exception &e)
++    {
++    }
++
++    manager.assignTask("Bob", task12);
++    manager.assignTask("Bob", task13);
++    manager.assignTask("Bob", task14);
++    manager.assignTask("Bob", task15);
++    manager.assignTask("Bob", task16);
++    manager.assignTask("Bob", task17);
++
++    // Assuming we have a way to verify task has been assigned, like a method that counts tasks
++    return true;
++}
++
++
++// end of tests
++
++
++
++
++
++
++
++
++#define TESTS_NAMES                          \
++    X(testListBasic)                         \
++    X(testListExceptions)                    \
++    X(testTaskManager)                       \
++    X(testCopyConstructorExceptionSafety)    \
++    X(testTaskManagerAssignTask)             \
++    X(testTaskManagerPrintTasksByType)
++
++
++testFunc tests[] = {
++#define X(name) name,
++    TESTS_NAMES
++#undef X
++};
++
++const char *tests_names[] = {
++#define X(name) #name,
++    TESTS_NAMES
++#undef X
++};
++using mtm::SortedList;
++
++template <typename T>
++void printList(const mtm::SortedList<T> &list, std::ostream &os=std::cout)
++{
++    for (auto it = list.begin(); it != list.end(); ++it)
++    {
++        os << *it << " ";
++    }
++    os << std::endl;
++}
++
++
++int main(int argc, char **argv)
++{
++    int number_of_tests = sizeof(tests) / sizeof(tests[0]);
++
++    if (argc == 1)
++    {
++        for (int test_idx = 0; test_idx < number_of_tests; test_idx++)
++        {
++            std::cout << "Running test " << test_idx + 1 << std::endl;
++            RUN_TEST(tests[test_idx], tests_names[test_idx]);
++            cout << endl;
++        }
++        return 0;
++    }
++    if (argc != 2)
++    {
++        std::cout << "Usage: tests <test index>" << std::endl;
++        return 0;
++    }
++
++    int test_idx = strtol(argv[1], NULL, 10);
++    if (test_idx < 1 || test_idx > number_of_tests)
++    {
++        std::cerr << "Invalid test index " << test_idx << std::endl;
++        return 0;
++    }
++
++    RUN_TEST(tests[test_idx - 1], tests_names[test_idx - 1]);
++    return 0;
++}
+diff --git a/tests/test1.expected b/tests/test1.expected
+new file mode 100644
+index 0000000..9da604f
+--- /dev/null
++++ b/tests/test1.expected
+@@ -0,0 +1,3 @@
++Running testListBasic ... 
++[OK]
++
+diff --git a/tests/test2.expected b/tests/test2.expected
+new file mode 100644
+index 0000000..a1fb014
+--- /dev/null
++++ b/tests/test2.expected
+@@ -0,0 +1,3 @@
++Running testListExceptions ... 
++[OK]
++
+diff --git a/tests/test3.expected b/tests/test3.expected
+new file mode 100644
+index 0000000..c6d84ca
+--- /dev/null
++++ b/tests/test3.expected
+@@ -0,0 +1,30 @@
++Running testTaskManager ... 
++Person: Alice
++Task ID: 2, Priority: 3, Type: Testing, Description: Test feature X
++Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
++
++Person: Bob
++Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
++Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
++
++Person: Charlie
++Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
++
++
++Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
++Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
++Task ID: 2, Priority: 3, Type: Testing, Description: Test feature X
++Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
++Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
++
++Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
++Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
++Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
++Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
++
++Task ID: 3, Priority: 6, Type: Documentation, Description: Write docs for feature X
++
++Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
++
++[OK]
++
+diff --git a/tests/test4.expected b/tests/test4.expected
+new file mode 100644
+index 0000000..a46c1c9
+--- /dev/null
++++ b/tests/test4.expected
+@@ -0,0 +1,3 @@
++Running testCopyConstructorExceptionSafety ... 
++[OK]
++
+diff --git a/tests/test5.expected b/tests/test5.expected
+new file mode 100644
+index 0000000..e7db415
+--- /dev/null
++++ b/tests/test5.expected
+@@ -0,0 +1,3 @@
++Running testTaskManagerAssignTask ... 
++[OK]
++
+diff --git a/tests/test6.expected b/tests/test6.expected
+new file mode 100644
+index 0000000..07fd396
+--- /dev/null
++++ b/tests/test6.expected
+@@ -0,0 +1,15 @@
++Running testTaskManagerPrintTasksByType ... 
++Task ID: 8, Priority: 7, Type: Development, Description: Implement new feature
++Task ID: 12, Priority: 6, Type: Development, Description: Fix bug in UI
++Task ID: 1, Priority: 5, Type: Development, Description: Refactor core module
++
++Task ID: 8, Priority: 57, Type: Development, Description: Implement new feature
++Task ID: 12, Priority: 56, Type: Development, Description: Fix bug in UI
++Task ID: 1, Priority: 55, Type: Development, Description: Refactor core module
++
++Task ID: 11, Priority: 100, Type: Testing, Description: stream
++Task ID: 6, Priority: 8, Type: Testing, Description: Integration testing
++Task ID: 10, Priority: 0, Type: Testing, Description: Write unit tests
++
++[OK]
++
+
+commit 5bdbf99b46b6f1558a47c5533aefc209c37e23d4
+Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
+Date:   Fri Dec 20 16:57:29 2024 +0200
+
+    Update README.md
+
+diff --git a/README.md b/README.md
+index c36b592..f53e20d 100644
+--- a/README.md
++++ b/README.md
+@@ -1 +1,6 @@
+-# HW3_2425A
+\ No newline at end of file
++# HW3_2425A
++This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
++
++You may find the full instructions for this assignment on the course's website.
++
++Good luck and have fun!
+
+commit 6c999dc9a584fbf8c3a296c357c16141db7b5abe
+Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
+Date:   Fri Dec 20 16:57:09 2024 +0200
+
+    Initial commit
+
+diff --git a/README.md b/README.md
+new file mode 100644
+index 0000000..c36b592
+--- /dev/null
++++ b/README.md
+@@ -0,0 +1 @@
++# HW3_2425A
+\ No newline at end of file
diff --git a/main.cpp b/main.cpp
index 8fd68ab..fc38c52 100644
--- a/main.cpp
+++ b/main.cpp
@@ -501,6 +501,7 @@ void printList(const mtm::SortedList<T> &list, std::ostream &os=std::cout)
 
 int main(int argc, char **argv)
 {
+    /*
     int number_of_tests = sizeof(tests) / sizeof(tests[0]);
 
     if (argc == 1)
@@ -527,5 +528,13 @@ int main(int argc, char **argv)
     }
 
     RUN_TEST(tests[test_idx - 1], tests_names[test_idx - 1]);
+    */
+    SortedList<int> list = SortedList<int>();
+    for (int i = 0; i < 700; i++){ list.insert(i); }
+    SortedList<int>::ConstIterator it = list.begin();
+    for (int i = 0 ; i < 100000; i++) {
+        ++it;
+    }
+    for (int i = 0; i < 70000; i++){ list.remove((++(list.begin()))); }
     return 0;
 }
diff --git a/test_results.html b/test_results.html
new file mode 100644
index 0000000..42058d7
--- /dev/null
+++ b/test_results.html
@@ -0,0 +1,410 @@
+
+<!DOCTYPE html>
+<html>
+<head>
+
+</head>
+<body>
+
+
+    <h2><span style="color:red;">0 Failed</span> out of 34</h2>
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 1</button>
+<div class="content">
+  
+  <p><p>
+Example Test 1 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 1 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 1 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 2</button>
+<div class="content">
+  
+  <p><p>
+Example Test 2 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 2 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 2 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 3</button>
+<div class="content">
+  
+  <p><p>
+Example Test 3 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 3 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 3 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 4</button>
+<div class="content">
+  
+  <p><p>
+Example Test 4 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 4 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 4 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 5</button>
+<div class="content">
+  
+  <p><p>
+Example Test 5 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 5 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 5 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 6</button>
+<div class="content">
+  
+  <p><p>
+Example Test 6 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 6 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 6 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 7</button>
+<div class="content">
+  
+  <p><p>
+Example Test 7 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 7 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 7 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 8</button>
+<div class="content">
+  
+  <p><p>
+Example Test 8 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 8 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 8 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 9</button>
+<div class="content">
+  
+  <p><p>
+Example Test 9 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 9 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 9 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 10</button>
+<div class="content">
+  
+  <p><p>
+Example Test 10 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 10 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 10 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 11</button>
+<div class="content">
+  
+  <p><p>
+Example Test 11 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 11 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 11 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 12</button>
+<div class="content">
+  
+  <p><p>
+Example Test 12 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 12 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 12 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 13</button>
+<div class="content">
+  
+  <p><p>
+Example Test 13 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 13 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 13 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 14</button>
+<div class="content">
+  
+  <p><p>
+Example Test 14 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 14 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 14 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 15</button>
+<div class="content">
+  
+  <p><p>
+Example Test 15 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 15 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 15 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 16</button>
+<div class="content">
+  
+  <p><p>
+Example Test 16 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 16 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 16 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 17</button>
+<div class="content">
+  
+  <p><p>
+Example Test 17 - Passed!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+        <button type="button" class="collapsible" style="color:green">
+        Example Test 17 - leaks</button>
+<div class="content">
+  
+  <p><p>
+Example Test 17 - no Leaks!
+</p><div class="grid-container-element"></div></p>
+</div>
+
+</body>
+</html>
+<script>
+var coll = document.getElementsByClassName("collapsible");
+var i;
+
+for (i = 0; i < coll.length; i++) {
+  coll[i].addEventListener("click", function() {
+    this.classList.toggle("active");
+    var content = this.nextElementSibling;
+    if (content.style.display === "block") {
+      content.style.display = "none";
+    } else {
+      content.style.display = "block";
+    }
+  });
+}
+</script>
+<style>
+.collapsible {
+  background-color: #eee;
+  color: #444;
+  cursor: pointer;
+  padding: 18px;
+  width: 100%;
+  border: none;
+  text-align: left;
+  outline: none;
+  font-size: 15px;
+}
+
+/* Add a background color to the button if it is clicked on (add the .active class with JS), and when you move the mouse over it (hover) */
+.active, .collapsible:hover {
+  background-color: #ccc;
+}
+
+/* Style the collapsible content. Note: hidden by default */
+.content {
+  padding: 0 18px;
+  display: none;
+  overflow: hidden;
+  background-color: #f1f1f1;
+}
+.collapsible:after {
+  content: '\02795'; /* Unicode character for "plus" sign (+) */
+  font-size: 13px;
+  color: white;
+  float: right;
+  margin-left: 5px;
+}
+
+.active:after {
+  content: "\2796"; /* Unicode character for "minus" sign (-) */
+}
+</style>
+<style>
+.content {
+  padding: 0 18px;
+  background-color: white;
+  max-height: 0;
+  overflow: hidden;
+  transition: max-height 0.2s ease-out;
+}
+</style>
+<style>
+.grid-container-element { 
+    display: grid; 
+    grid-template-columns: 1fr 1fr; 
+    grid-gap: 20px; 
+    width: 80%; 
+} 
+.grid-child-element { 
+    margin: 10px; 
+    border: 1px solid red; 
+}
+</style>
+
+<script>
+var coll = document.getElementsByClassName("collapsible");
+var i;
+
+for (i = 0; i < coll.length; i++) {
+  coll[i].addEventListener("click", function() {
+    this.classList.toggle("active");
+    var content = this.nextElementSibling;
+    if (content.style.maxHeight){
+      content.style.maxHeight = null;
+    } else {
+      content.style.maxHeight = content.scrollHeight + "px";
+    }
+  });
+}
+</script>
+    
\ No newline at end of file

commit ff3a294360fd41d008fc3624017f2da043c808de
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Wed Jan 8 18:20:02 2025 +0200

    verify push

diff --git a/SortedList.h b/SortedList.h
index cd01502..e2bf52f 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -77,6 +77,7 @@ namespace mtm {
             }
 
         public:
+
             /**
              * @brief Destructor for the SortedListNode class. Releases all allocated resources.
              */

commit 9407399fdc8d09e96348b7faa11e1df6d099a1a4
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Wed Jan 8 16:20:40 2025 +0200

    reduce unused code

diff --git a/SortedList.h b/SortedList.h
index 86a257d..cd01502 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -9,7 +9,6 @@ namespace mtm {
     template <typename T>
     class SortedList {
         class SortedListNode {
-            /* Inner class, part of implementation so no documentation is provided. */
             friend class SortedList<T>;
             SortedListNode* prev;
             SortedListNode* next;
@@ -25,7 +24,7 @@ namespace mtm {
              *
              * @param data The data to store in the node.
              */
-            SortedListNode(T data): SortedListNode() { //todo ask regev
+            SortedListNode(T data): SortedListNode() {
                 try{
                     this->data = new T(data);
                 } catch (std::bad_alloc& e) {
@@ -203,7 +202,7 @@ namespace mtm {
          * @param address2 Address of the second swapped value.
          */
         template <typename V> 
-        void swap(V& address1, V& address2) { //todo ask regev
+        void swap(V& address1, V& address2) {
             V temp = address1;
             address1 = address2;
             address2 = temp;
@@ -244,7 +243,7 @@ namespace mtm {
         /**
          * @brief Constructor for the SortedList class. Initializes an empty sorted list.
          */
-        SortedList() : listLength(0){
+        SortedList() : listLength(0), head(nullptr), tail(nullptr){
             try {
                 this->head = new SortedListNode();
                 this->tail = new SortedListNode();
@@ -264,11 +263,7 @@ namespace mtm {
          */
         SortedList(const SortedList<T>& other): SortedList<T>(){
             for(const T& currentData : other) {
-                try{
-                    this->insert(currentData);
-                } catch (std::bad_alloc& e) {
-                    throw;
-                }
+                this->insert(currentData);
             }
         }
 

commit 0133683bb96c2e0e81c2340ad8cd611d90fcff05
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Wed Jan 8 15:11:43 2025 +0200

    reduce unused code

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 725719f..f61224c 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -23,14 +23,9 @@ void TaskManager::assignTask(const string &personName, const Task &task){
         currentEmployee = numOfEmployees;
         employees[numOfEmployees++] = newEmployee;
     }
-    try{
-        Task newTask(task.getPriority(), task.getType(), task.getDescription());
-        newTask.setId(idCounter++);
-        employees[currentEmployee].assignTask(newTask);
-    }
-    catch (std::bad_alloc& e){
-        throw;
-    }
+    Task newTask(task.getPriority(), task.getType(), task.getDescription());
+    newTask.setId(idCounter++);
+    employees[currentEmployee].assignTask(newTask);
 }
 
 void TaskManager::completeTask(const string &personName){
@@ -38,14 +33,7 @@ void TaskManager::completeTask(const string &personName){
     if(currentEmployee == NOT_FOUND){
        return;
     }
-    try
-    {
-        employees[currentEmployee].completeTask();
-    }
-    catch (const std::runtime_error& e)
-    {
-        throw;
-    }
+    employees[currentEmployee].completeTask();
 }
 
 const Task TaskManager::setPriority(const Task& tasks, TaskType type, int priority){
@@ -63,13 +51,8 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
     }
     for(int i = 0; i < numOfEmployees; i++){
         SortedList<Task> oldTasks = this->employees[i].getTasks();
-        try{
-            SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
-             this->employees[i].setTasks(newTasks);
-        }
-        catch (std::bad_alloc& e){
-            throw;
-        } 
+        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
+        this->employees[i].setTasks(newTasks);
     }
 
 }
@@ -91,14 +74,8 @@ void TaskManager::printAllTasks() const{
 
 void TaskManager::printTasksByType(TaskType type) const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
-    try{
-        SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-        printTasks(tasksByType);
-    }
-    catch (std::bad_alloc& e){
-        throw;
-    }
-    
+    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+    printTasks(tasksByType);
 }
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{
     SortedList<Task> allTasks;

commit 79928531b1e042b4ca1f3f3908e0671c9f4df402
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Wed Jan 8 15:00:30 2025 +0200

    add documentation for SortedList.h

diff --git a/SortedList.h b/SortedList.h
index b5365d9..86a257d 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -15,9 +15,17 @@ namespace mtm {
             SortedListNode* next;
             T* data;
 
+            /**
+             * @brief Constructs an empty node for the sorted list.
+             */
             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
 
-            SortedListNode(T data): SortedListNode() {
+            /**
+             * @brief Constructs a node with the given data.
+             *
+             * @param data The data to store in the node.
+             */
+            SortedListNode(T data): SortedListNode() { //todo ask regev
                 try{
                     this->data = new T(data);
                 } catch (std::bad_alloc& e) {
@@ -26,6 +34,9 @@ namespace mtm {
                 }
             }
 
+            /**
+             * @brief Deletes the current node and adjusts its neighbors accordingly.
+             */
             void deleteNode() {
                 this->prev->next = this->next;
                 this->next->prev = this->prev;
@@ -34,6 +45,11 @@ namespace mtm {
                 delete this;
             }
 
+            /**
+             * @brief Inserts a new node immediately after the current node.
+             *
+             * @param newNode The node to insert.
+             */
             void addImmediate(SortedListNode* newNode) {
                 this->next->prev = newNode;
                 newNode->next = this->next;
@@ -41,6 +57,11 @@ namespace mtm {
                 newNode->prev = this;
             }
 
+            /**
+             * @brief Inserts a new node into the sorted list, maintaining the order.
+             *
+             * @param newNode The node to insert.
+             */
             void add(SortedListNode* newNode) {
                 //if we arrived at the end of the chain
                 if (!this->hasNext()) {
@@ -57,48 +78,96 @@ namespace mtm {
             }
 
         public:
-
+            /**
+             * @brief Destructor for the SortedListNode class. Releases all allocated resources.
+             */
             ~SortedListNode() {
                 this->prev = nullptr;
                 this->next = nullptr;
                 delete this->data;
             }
 
+            /**
+             * @brief Checks if the node is the tail of the list.
+             *
+             * @return true If the node is the tail.
+             * @return false Otherwise.
+             */
             inline bool isTail() const {
                 return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
             }
 
+            /**
+             * @brief Checks if the node is the head of the list.
+             *
+             * @return true If the node is the head.
+             * @return false Otherwise.
+             */
             inline bool isHead() const {
                 return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
             }
 
+            /**
+             * @brief Checks if the node has a valid next node.
+             *
+             * @return true If there is a next node.
+             * @return false Otherwise.
+             */
             inline bool hasNext()   const {
                 return !(this->next->isTail());
             }
 
+            /**
+             * @brief Inserts a new element into the sorted list starting from this node.
+             *
+             * @param data The element to insert.
+             */
             void insert(const T& data) {
-                try{
-                     SortedListNode* newNode = new SortedListNode(data);
-                    this->add(newNode);
-                }
-                catch (std::bad_alloc& e) {
-                    throw;
-                }
+                SortedListNode* newNode = new SortedListNode(data);
+                this->add(newNode);
             }
 
-            //FIXME CORRECT FOR SYNTAX
+            /**
+             * @brief Equality comparison operator.
+             *
+             * @param other The node to compare against.
+             * @return true If the nodes are equal.
+             * @return false Otherwise.
+             */
             bool operator==(SortedListNode* other) const {
                 return (this->data == other->data);
             }
 
+            /**
+             * @brief Inequality comparison operator.
+             *
+             * @param other The node to compare against.
+             * @return true If the nodes are not equal.
+             * @return false Otherwise.
+             */
             bool operator!=(SortedListNode* other) const {
                 return !(*this == *other);
             }
 
+            /**
+             * @brief Greater-than comparison operator.
+             *
+             * @param other The node to compare against.
+             * @return true If this node is greater than the other.
+             * @return false Otherwise.
+             */
             bool operator>(SortedListNode* other) const {
                 return (this->data > other->data);
             }
 
+            /**
+             * @brief Less-than comparison operator.
+             *
+             * @param lhs The left node.
+             * @param rhs The right node.
+             * @return true if lhs > rhs.
+             * @return false Otherwise.
+             */
             friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
                 if (rhs.isTail()) {
                     return true;
@@ -106,19 +175,6 @@ namespace mtm {
                 return (lhs.data > rhs.data);
             }
 
-            bool operator<(SortedListNode* other) const {
-                bool equal = *this == *other;
-                bool greater = *this > *other;
-                return (!equal) && (!greater);
-            }
-
-            bool operator<=(SortedListNode* other) const {
-                return !(*this > *other);
-            }
-
-            bool operator>=(const SortedListNode* other) const {
-                return !(*this < *other);
-            }
         };
 
         private:
@@ -126,6 +182,11 @@ namespace mtm {
         SortedListNode* head;
         SortedListNode* tail;
 
+        /**
+         * @brief Deletes a specified node from the list.
+         *
+         * @param node The node to delete, is nullptr safe.
+         */
         void deleteNode(SortedListNode* node) {
             if (node == nullptr) {
                 return;
@@ -134,13 +195,25 @@ namespace mtm {
             --(this->listLength);
         }
 
+        /**
+         * @brief Swaps the values of two things.
+         *
+         * @tparam V The type of the values to be swapped.
+         * @param address1 Address of the first swapped value.
+         * @param address2 Address of the second swapped value.
+         */
         template <typename V> 
-        void swap(V& address1, V& address2) {
+        void swap(V& address1, V& address2) { //todo ask regev
             V temp = address1;
             address1 = address2;
             address2 = temp;
         }
 
+        /**
+         * @brief Swaps the contents of the current list with another list.
+         *
+         * @param other The list to swap with.
+         */
         void swapList(SortedList& other) {
             swap<SortedListNode*>(this->head, other.head);
             swap<SortedListNode*>(this->tail, other.tail);
@@ -232,13 +305,8 @@ namespace mtm {
          * @param newElement The element to insert.
          */
         void insert(const T& newElement) {
-            try{
-                this->head->insert(newElement);
-                ++(this->listLength);
-            }
-            catch (std::bad_alloc& e) {
-                throw;
-            }
+            this->head->insert(newElement);
+            ++(this->listLength);
         }
 
         /**
@@ -263,8 +331,7 @@ namespace mtm {
             SortedListNode* current = this->head->next;
             for(ConstIterator curr = begin(); curr!= last; ++curr, current = current->next){
                 if(!(curr != iter)) {
-                    current->deleteNode();
-                    --(this->listLength);
+                    this->deleteNode(current);
                     return;
                 }
             }
@@ -282,12 +349,7 @@ namespace mtm {
             SortedList<T> filteredList;
             for(const T& val : *this){
                 if(condition(val)) {
-                    try{
-                        filteredList.insert(val);
-                    } 
-                    catch (std::bad_alloc& e) {
-                        throw;
-                    }
+                    filteredList.insert(val);
                 }
             }
             return filteredList;
@@ -303,14 +365,8 @@ namespace mtm {
         template <class Function>
         SortedList<T> apply(Function function) const{
             SortedList<T> appliedList;
-            
             for(const T& val : *this){
-                try{
-                    appliedList.insert(function(val));
-                } 
-                catch (std::bad_alloc& e) {
-                    throw;
-                }
+                appliedList.insert(function(val));
             }
             return appliedList;
         }
diff --git a/TaskManager.cpp b/TaskManager.cpp
index 26ba226..725719f 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -80,7 +80,7 @@ void TaskManager::printAllEmployees() const{
     }
 }
 void TaskManager::printTasks(const SortedList<Task>& tasks){
-    for(Task currentTask : tasks){
+    for(const Task& currentTask : tasks){
         std::cout << currentTask << std::endl;
     }
 }

commit d5dad8055d65c3860c2758a1808211c3a98b1c4d
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 16:01:26 2025 +0200

    adding const to operator*

diff --git a/SortedList.h b/SortedList.h
index 304b3dc..b5365d9 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -348,7 +348,7 @@ namespace mtm {
             * @return T& A reference to the element.
             * @throws std::out_of_range If the iterator is out of range.
             */
-            T& operator*() const{
+            const T& operator*() const{
                 if(current->isTail()) {
                     throw std::out_of_range("Iterator is out of range");
                 }

commit 8cc27d38ab02b6227a96e48e09f166281fe5bb46
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 15:39:20 2025 +0200

    fixing typos, removing comments

diff --git a/SortedList.h b/SortedList.h
index 969908c..304b3dc 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -26,18 +26,6 @@ namespace mtm {
                 }
             }
 
-            //FIXME might be redundant
-            /**
-            SortedListNode(SortedListNode* other) : SortedListNode() {
-                try{
-                    this->data = new T(*(other->data));
-                } catch (std::bad_alloc& e) {
-                    delete this;
-                    throw;
-                }
-            }
-            */
-
             void deleteNode() {
                 this->prev->next = this->next;
                 this->next->prev = this->prev;
@@ -118,7 +106,6 @@ namespace mtm {
                 return (lhs.data > rhs.data);
             }
 
-
             bool operator<(SortedListNode* other) const {
                 bool equal = *this == *other;
                 bool greater = *this > *other;
@@ -147,17 +134,17 @@ namespace mtm {
             --(this->listLength);
         }
 
-        template <typename V> //FIXME if new assignment operator is not used, then no need for this function
-        void swap(V address1, V address2) {
+        template <typename V> 
+        void swap(V& address1, V& address2) {
             V temp = address1;
             address1 = address2;
             address2 = temp;
         }
 
         void swapList(SortedList& other) {
-            Swap<SortedListNode*>(this->head, other.head);
-            Swap<SortedListNode*>(this->tail, other.tail);
-            Swap<int>(this->listLength, other.listLength);
+            swap<SortedListNode*>(this->head, other.head);
+            swap<SortedListNode*>(this->tail, other.tail);
+            swap<int>(this->listLength, other.listLength);
         }
 
         public:
@@ -203,19 +190,6 @@ namespace mtm {
          * @param other The SortedList instance to copy.
          */
         SortedList(const SortedList<T>& other): SortedList<T>(){
-            /*
-             try {
-                this->head = new SortedListNode();
-                this->tail = new SortedListNode();
-            } catch (std::bad_alloc& e) {
-                delete this->head;
-                delete this->tail;
-            }
-            this->head->next = this->tail;
-            this->tail->prev = this->head;
-            this->listLength = 0;
-            */
-
             for(const T& currentData : other) {
                 try{
                     this->insert(currentData);
@@ -235,54 +209,9 @@ namespace mtm {
             if(this == &other) {
                 return *this;
             }
-            
-            // for(ConstIterator iter : *this) {
-            //     this->remove(*iter);
-            // }
-            /**
-             SortedListNode* oldHead = this->head;
-             SortedListNode* oldTail = this->tail;
-             int oldLength = this->listLength;
-             try{
-                SortedList* tempOther = new SortedList(other);
-                this->head = tempOther->head;
-                this->tail = tempOther->tail;
-                this->listLength = tempOther->listLength;
-                tempOther->head = nullptr;
-                tempOther->tail = nullptr;
-                delete tempOther;
-            } 
-            catch (std::bad_alloc& e) {
-                this->head = oldHead;
-                this->tail = oldTail;
-                this->listLength = oldLength;
-                throw;
-            }
-            while(oldHead != nullptr) {
-                SortedListNode* nextNode = oldHead->next;
-                delete oldHead;
-                oldHead = nextNode;
-            }
-            */
             SortedList<T> temp = SortedList(other);
             this->swapList(temp);
             return *this;
-            /**
-             *FIXME
-             *
-             *maybe better implementation for this:
-             *
-            *
-            if(this == &other) {
-                return *this;
-            }
-            sortedList<T> temp = sortedList(other);
-            this->swapList(temp);
-            delete temp;
-            return *this;
-
-             *
-             */
         }
 
         /**
@@ -332,15 +261,12 @@ namespace mtm {
                 return;
             }
             SortedListNode* current = this->head->next;
-            ConstIterator curr = this->begin();
-            while(curr != last) {
+            for(ConstIterator curr = begin(); curr!= last; ++curr, current = current->next){
                 if(!(curr != iter)) {
                     current->deleteNode();
                     --(this->listLength);
                     return;
                 }
-                ++curr;
-                current = current->next;
             }
         }
 
@@ -388,29 +314,6 @@ namespace mtm {
             }
             return appliedList;
         }
-        /**
-         *
-         * the class should support the following public interface:
-         * if needed, use =defualt / =delete
-         *
-         * constructors and destructor:
-         * 1. SortedList() - creates an empty list. V
-         * 2. copy constructor V
-         * 3. operator= - assignment operator V
-         * 4. ~SortedList() - destructor V
-         *
-         * iterator:
-         * 5. class ConstIterator;
-         * 6. begin method V?
-         * 7. end method V?
-         *
-         * functions:
-         * 8. insert - inserts a new element to the list V
-         * 9. remove - removes an element from the list V
-         * 10. length - returns the number of elements in the list V
-         * 11. filter - returns a new list with elements that satisfy a given condition V?
-         * 12. apply - returns a new list with elements that were modified by an operation V?
-         */
     };
 
     template <class T>
@@ -426,9 +329,8 @@ namespace mtm {
             *
             * @param other The ConstIterator instance to copy.
             */
-            ConstIterator(const ConstIterator& other) {
-                this->current = other.current;
-            }
+            ConstIterator(const ConstIterator& other) = default;
+
 
             /**
              * @brief Assignment operator for the ConstIterator class.
@@ -477,23 +379,5 @@ namespace mtm {
             bool operator!=(const ConstIterator& other) const{
                 return current != other.current;
             }
-    /**
-     * the class should support the following public interface:
-     * if needed, use =defualt / =delete
-     *
-     * constructors and destructor:
-     * 1. a ctor(or ctors) your implementation needs V?
-     * 2. copy constructor V?
-     * 3. operator= - assignment operator V?
-     * 4. ~ConstIterator() - destructor V?
-     *
-     * operators:
-     * 5. operator* - returns the element the iterator points to V?
-     * 6. operator++ - advances the iterator to the next element V?
-     * 7. operator!= - returns true if the iterator points to a different element V?
-     *
-     */
     };
-
-
 };
\ No newline at end of file

commit 8f19416c1113b44f89d2747e4509289174b9fa25
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 15:36:31 2025 +0200

    removing namespace, adding try-catch blocks for filter and apply

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 74545cd..26ba226 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -1,6 +1,5 @@
 #include <iostream>
 #include "TaskManager.h"
-using namespace mtm;
 #define NOT_FOUND -1
 TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
 
@@ -64,8 +63,13 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
     }
     for(int i = 0; i < numOfEmployees; i++){
         SortedList<Task> oldTasks = this->employees[i].getTasks();
-        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
-        this->employees[i].setTasks(newTasks);
+        try{
+            SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
+             this->employees[i].setTasks(newTasks);
+        }
+        catch (std::bad_alloc& e){
+            throw;
+        } 
     }
 
 }
@@ -87,9 +91,14 @@ void TaskManager::printAllTasks() const{
 
 void TaskManager::printTasksByType(TaskType type) const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
-    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-    printTasks(tasksByType);
-   
+    try{
+        SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+        printTasks(tasksByType);
+    }
+    catch (std::bad_alloc& e){
+        throw;
+    }
+    
 }
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{
     SortedList<Task> allTasks;
diff --git a/TaskManager.h b/TaskManager.h
index 5680ec7..67f0e8d 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -4,7 +4,6 @@
 #include "Task.h"
 #include "SortedList.h"
 #include "Person.h"
-using namespace mtm;
 
 
 /**

commit f3a92c20a155019aca07dbb7973c728029748067
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Tue Jan 7 14:15:20 2025 +0200

    Update SortedList.h

diff --git a/SortedList.h b/SortedList.h
index c7edc0e..969908c 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -264,9 +264,8 @@ namespace mtm {
                 oldHead = nextNode;
             }
             */
-            SortedList<T> temp = new SortedList(other);
+            SortedList<T> temp = SortedList(other);
             this->swapList(temp);
-            delete temp;
             return *this;
             /**
              *FIXME

commit 5a1325cf248deeda38a5ff3201de395681406354
Merge: ad62340 a0fad64
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Tue Jan 7 13:56:40 2025 +0200

    Merge remote-tracking branch 'origin/main'

commit ad62340cf18ce660f5139306e30751cb14bd2a05
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Tue Jan 7 13:56:26 2025 +0200

    add documentation for SortedList.h

diff --git a/SortedList.h b/SortedList.h
index 6834b4f..c7edc0e 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -8,16 +8,8 @@
 namespace mtm {
     template <typename T>
     class SortedList {
-        //class SortedListNode; //TODO fix dependencies
-        //TODO maybe delete these comment lines
-        //provides the de-facto interface for interacting with SortedListNode,
-        //wrapping function provides flexibility with static like parameters such as
-        //head and tail, without forcing a single instance of the list class.
-        // class ConstIterator;
         class SortedListNode {
-        //TODO maybe delete these comment lines
-            //the members of this class are only accessible by SortedList class
-        private:
+            /* Inner class, part of implementation so no documentation is provided. */
             friend class SortedList<T>;
             SortedListNode* prev;
             SortedListNode* next;
@@ -35,6 +27,7 @@ namespace mtm {
             }
 
             //FIXME might be redundant
+            /**
             SortedListNode(SortedListNode* other) : SortedListNode() {
                 try{
                     this->data = new T(*(other->data));
@@ -43,7 +36,7 @@ namespace mtm {
                     throw;
                 }
             }
-
+            */
 
             void deleteNode() {
                 this->prev->next = this->next;
@@ -67,7 +60,7 @@ namespace mtm {
                     return;
                 }
                 //if we arrived at the orderly place of the new node
-                if (*(newNode->data) > *(this->next->data)) { //fixme
+                if (*(newNode->data) > *(this->next->data)) {
                     this->addImmediate(newNode);
                     return;
                 }
@@ -96,9 +89,6 @@ namespace mtm {
             }
 
             void insert(const T& data) {
-                // if (data == nullptr) {
-                //     //TODO invalid argument
-                // }
                 try{
                      SortedListNode* newNode = new SortedListNode(data);
                     this->add(newNode);
@@ -143,6 +133,7 @@ namespace mtm {
                 return !(*this < *other);
             }
         };
+
         private:
         int listLength;
         SortedListNode* head;
@@ -156,18 +147,43 @@ namespace mtm {
             --(this->listLength);
         }
 
+        template <typename V> //FIXME if new assignment operator is not used, then no need for this function
+        void swap(V address1, V address2) {
+            V temp = address1;
+            address1 = address2;
+            address2 = temp;
+        }
+
+        void swapList(SortedList& other) {
+            Swap<SortedListNode*>(this->head, other.head);
+            Swap<SortedListNode*>(this->tail, other.tail);
+            Swap<int>(this->listLength, other.listLength);
+        }
+
         public:
-        //class NodeIterator;
         class ConstIterator;
 
+        /**
+         * @brief Retrieves an iterator to the first element of the sorted list.
+         *
+         * @return ConstIterator, An iterator pointing to the first element.
+         */
         ConstIterator begin() const {
             return ConstIterator(this->head->next);
         }
 
+        /**
+         * @brief Retrieves an iterator one element after the last.
+         *
+         * @return ConstIterator, An iterator pointing past the last element.
+         */
         ConstIterator end() const {
             return ConstIterator(this->tail);
         }
 
+        /**
+         * @brief Constructor for the SortedList class. Initializes an empty sorted list.
+         */
         SortedList() : listLength(0){
             try {
                 this->head = new SortedListNode();
@@ -181,6 +197,11 @@ namespace mtm {
             this->tail->prev = this->head;
         }
 
+        /**
+         * @brief Copy constructor for the SortedList class.
+         *
+         * @param other The SortedList instance to copy.
+         */
         SortedList(const SortedList<T>& other): SortedList<T>(){
             /*
              try {
@@ -204,6 +225,12 @@ namespace mtm {
             }
         }
 
+        /**
+         * @brief Assignment operator for the SortedList class.
+         *
+         * @param other The SortedList instance to assign.
+         * @return SortedList<T>& A reference to the assigned SortedList instance.
+         */
         SortedList<T>& operator=(const SortedList<T>& other) {
             if(this == &other) {
                 return *this;
@@ -212,6 +239,7 @@ namespace mtm {
             // for(ConstIterator iter : *this) {
             //     this->remove(*iter);
             // }
+            /**
              SortedListNode* oldHead = this->head;
              SortedListNode* oldTail = this->tail;
              int oldLength = this->listLength;
@@ -235,17 +263,32 @@ namespace mtm {
                 delete oldHead;
                 oldHead = nextNode;
             }
+            */
+            SortedList<T> temp = new SortedList(other);
+            this->swapList(temp);
+            delete temp;
             return *this;
-            // for(ConstIterator iter : other) {
-            //     this->insert(*iter);
-            // }
-            // ConstIterator otherCurrent = other.begin();
-            // while(otherCurrent != other.end()) {
-            //     this->insert(*otherCurrent);
-            //     ++otherCurrent;
-            // }            
+            /**
+             *FIXME
+             *
+             *maybe better implementation for this:
+             *
+            *
+            if(this == &other) {
+                return *this;
+            }
+            sortedList<T> temp = sortedList(other);
+            this->swapList(temp);
+            delete temp;
+            return *this;
+
+             *
+             */
         }
 
+        /**
+         * @brief Destructor for the SortedList class. Frees all allocated resources.
+         */
         ~SortedList() {
             SortedListNode* current = this->head;
             while(current != nullptr) {
@@ -255,6 +298,11 @@ namespace mtm {
             }
         }
 
+        /**
+         * @brief Inserts a new element into the sorted list.
+         *
+         * @param newElement The element to insert.
+         */
         void insert(const T& newElement) {
             try{
                 this->head->insert(newElement);
@@ -265,10 +313,20 @@ namespace mtm {
             }
         }
 
+        /**
+         * @brief Retrieves the number of elements in the sorted list.
+         * 
+         * @return int The length of the list.
+         */
         int length() const {
             return this->listLength;
         }
 
+        /**
+         * @brief Removes an element from the sorted list using a specified iterator.
+         *
+         * @param iter A const iterator pointing to the element to be removed.
+         */
         void remove(const ConstIterator& iter){
             ConstIterator last = this->end();
             if(!(iter != last)) {
@@ -286,7 +344,14 @@ namespace mtm {
                 current = current->next;
             }
         }
-        
+
+        /**
+         * @brief Filters the sorted list based on a specified condition.
+         *
+         * @tparam Condition A callable object that determines whether an element is included.
+         * @param condition The filtering condition.
+         * @return SortedList<T> A new list containing elements that satisfy the condition.
+         */
         template <class Condition>
         SortedList<T> filter(Condition condition) const{
             SortedList<T> filteredList;
@@ -303,6 +368,13 @@ namespace mtm {
             return filteredList;
         }
 
+        /**
+         * @brief Applies a transformation to each element in the sorted list.
+         *
+         * @tparam Function A callable object that defines the transformation.
+         * @param function The transformation function.
+         * @return SortedList<T> A new list containing the transformed elements.
+         */
         template <class Function>
         SortedList<T> apply(Function function) const{
             SortedList<T> appliedList;
@@ -349,24 +421,60 @@ namespace mtm {
             const SortedListNode* current;
             ConstIterator(const SortedListNode* current) : current(current) {}
         public:
+
+            /**
+            * @brief Copy constructor for the ConstIterator class.
+            *
+            * @param other The ConstIterator instance to copy.
+            */
             ConstIterator(const ConstIterator& other) {
                 this->current = other.current;
             }
+
+            /**
+             * @brief Assignment operator for the ConstIterator class.
+             *
+             * @param other The ConstIterator instance to assign.
+             * @return ConstIterator& A reference to the assigned iterator.
+             */
             ConstIterator& operator=(const ConstIterator& other) = default;
+
             ~ConstIterator() = default;
+
+            /**
+            * @brief Accesses the element that the iterator points to.
+            *
+            * @return T& A reference to the element.
+            * @throws std::out_of_range If the iterator is out of range.
+            */
             T& operator*() const{
                 if(current->isTail()) {
                     throw std::out_of_range("Iterator is out of range");
                 }
                 return *(current->data);
             }
+
+            /**
+            * @brief Advances the iterator to the next element in the list.
+            *
+            * @return ConstIterator& A reference to the advanced iterator.
+            * @throws std::out_of_range If the iterator is out of range.
+            */
             ConstIterator& operator++(){
                 if(current->isTail()){
-                    throw std::out_of_range("Iterator is out of range");                
+                    throw std::out_of_range("Iterator is out of range");
                 }
                 current = current->next;
                 return *this;
             }
+
+            /**
+            * @brief Compares two iterators for inequality.
+            *
+            * @param other The iterator to compare against.
+            * @return true If the iterators point to different elements.
+            * @return false If the iterators point to the same element.
+            */
             bool operator!=(const ConstIterator& other) const{
                 return current != other.current;
             }

commit a0fad64bd8cfa820ad8177ee6da108a35fbd2fb2
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 13:49:30 2025 +0200

    adding try-catch to assigntask

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 63be670..74545cd 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -24,9 +24,14 @@ void TaskManager::assignTask(const string &personName, const Task &task){
         currentEmployee = numOfEmployees;
         employees[numOfEmployees++] = newEmployee;
     }
-    Task newTask(task.getPriority(), task.getType(), task.getDescription());
-    newTask.setId(idCounter++);
-    employees[currentEmployee].assignTask(newTask);
+    try{
+        Task newTask(task.getPriority(), task.getType(), task.getDescription());
+        newTask.setId(idCounter++);
+        employees[currentEmployee].assignTask(newTask);
+    }
+    catch (std::bad_alloc& e){
+        throw;
+    }
 }
 
 void TaskManager::completeTask(const string &personName){

commit 64c29f32bf92b61b4534bf682ed051b936bcf4ca
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 13:46:01 2025 +0200

    removing code duplication for prints

diff --git a/TaskManager.cpp b/TaskManager.cpp
index a872235..63be670 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -40,8 +40,7 @@ void TaskManager::completeTask(const string &personName){
     }
     catch (const std::runtime_error& e)
     {
-        throw(e);
-        //std::cout << e.what() << std::endl;
+        throw;
     }
 }
 
@@ -66,26 +65,25 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
 
 }
 
-
 void TaskManager::printAllEmployees() const{
     for(int i = 0; i < numOfEmployees; i++){
         std::cout << employees[i] << std::endl;        
     }
 }
-
-void TaskManager::printAllTasks() const{
-    SortedList<Task> allTasks = getAllEmployeesTasks();
-    for(Task currentTask : allTasks){
+void TaskManager::printTasks(const SortedList<Task>& tasks){
+    for(Task currentTask : tasks){
         std::cout << currentTask << std::endl;
     }
 }
+void TaskManager::printAllTasks() const{
+    SortedList<Task> allTasks = getAllEmployeesTasks();
+    printTasks(allTasks);
+}
 
 void TaskManager::printTasksByType(TaskType type) const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
     SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-    for(Task currentTask : tasksByType){
-        std::cout << currentTask << std::endl;
-    }
+    printTasks(tasksByType);
    
 }
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{
diff --git a/TaskManager.h b/TaskManager.h
index 1a6215d..5680ec7 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -21,6 +21,7 @@ private:
     Person employees[MAX_PERSONS];
     int isEmployeeExist(const string& personName);
     static const Task setPriority(const Task& tasks, TaskType type, int priority);
+    static void printTasks(const SortedList<Task>& tasks);
     SortedList<Task> getAllEmployeesTasks() const;
 
     // Note - Additional private fields and methods can be added if needed.

commit ad99c8626ecf14bb921d2c85a9bb281d48999a72
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 13:36:04 2025 +0200

    removing auto from prints

diff --git a/TaskManager.cpp b/TaskManager.cpp
index a5f01e2..a872235 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -75,7 +75,7 @@ void TaskManager::printAllEmployees() const{
 
 void TaskManager::printAllTasks() const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
-    for(auto currentTask : allTasks){
+    for(Task currentTask : allTasks){
         std::cout << currentTask << std::endl;
     }
 }
@@ -83,7 +83,7 @@ void TaskManager::printAllTasks() const{
 void TaskManager::printTasksByType(TaskType type) const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
     SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
-    for(auto currentTask : tasksByType){
+    for(Task currentTask : tasksByType){
         std::cout << currentTask << std::endl;
     }
    
@@ -92,7 +92,7 @@ SortedList<Task> TaskManager::getAllEmployeesTasks() const{
     SortedList<Task> allTasks;
     for(int i = 0; i < this->numOfEmployees; i++){
         SortedList<Task> tasks(this->employees[i].getTasks());
-        for(auto currentTask : tasks){
+        for(Task currentTask : tasks){
             allTasks.insert(currentTask);
         }
     }

commit a66820d193571c2fc0e237306fc3dcede88f9ecc
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 13:32:21 2025 +0200

    changing setpriority to static

diff --git a/TaskManager.cpp b/TaskManager.cpp
index c007d98..a5f01e2 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -60,7 +60,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
     }
     for(int i = 0; i < numOfEmployees; i++){
         SortedList<Task> oldTasks = this->employees[i].getTasks();
-        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task){ return setPriority(task, type, priority); });
+        SortedList<Task> newTasks = oldTasks.apply([type, priority](Task task){ return setPriority(task, type, priority); });
         this->employees[i].setTasks(newTasks);
     }
 
diff --git a/TaskManager.h b/TaskManager.h
index 909637d..1a6215d 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -20,7 +20,7 @@ private:
     int numOfEmployees;
     Person employees[MAX_PERSONS];
     int isEmployeeExist(const string& personName);
-    const Task setPriority(const Task& tasks, TaskType type, int priority);
+    static const Task setPriority(const Task& tasks, TaskType type, int priority);
     SortedList<Task> getAllEmployeesTasks() const;
 
     // Note - Additional private fields and methods can be added if needed.

commit 5ec21d2ef833faaf3691b7d45565c2cdcd22ed36
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 12:39:49 2025 +0200

    removing uneeded comments and func

diff --git a/SortedList.h b/SortedList.h
index 5c7391c..6834b4f 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -2,7 +2,6 @@
 
 #include <iostream>
 #include <stdexcept>
-#include <cassert>
 #include <functional>
 #include <new>
 
@@ -33,7 +32,6 @@ namespace mtm {
                     delete this;
                     throw;
                 }
-                //this->data = new T(data);
             }
 
             //FIXME might be redundant
@@ -44,12 +42,10 @@ namespace mtm {
                     delete this;
                     throw;
                 }
-                //this->data = new T(other->data);
             }
 
 
             void deleteNode() {
-                assert(!(this->isTail()||this->isHead()));
                 this->prev->next = this->next;
                 this->next->prev = this->prev;
                 this->next = nullptr;
@@ -58,7 +54,6 @@ namespace mtm {
             }
 
             void addImmediate(SortedListNode* newNode) {
-                assert(!this->isTail());
                 this->next->prev = newNode;
                 newNode->next = this->next;
                 this->next = newNode;
@@ -68,37 +63,16 @@ namespace mtm {
             void add(SortedListNode* newNode) {
                 //if we arrived at the end of the chain
                 if (!this->hasNext()) {
-                    assert(this->next->isTail());
                     this->addImmediate(newNode);
-                    assert(this->isSorted());
                     return;
                 }
                 //if we arrived at the orderly place of the new node
                 if (*(newNode->data) > *(this->next->data)) { //fixme
-                    assert(!this->next->isTail());
                     this->addImmediate(newNode);
-                    //assert(this->isSorted());//todo attempt to reduce assertion calls to help see the actual bug
                     return;
                 }
                 //if we are yet to find the place for the new node nor did we arrive to the end of the chain
                 this->next->add(newNode);
-                assert(this->isSorted());
-            }
-
-            // SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
-            // prev(prev), next(next), data(data) {}
-
-            /**
-             * overload of the isSorted function, to differentiate calls between
-             * the head and the rest of the chain
-             *
-             * @return if the list is sorted
-             */
-            bool isSorted(int) const {
-                if (this->isTail()||(!(this->hasNext()))){
-                    return true;
-                }
-                return (!((*(this->next->data)) > (*(this->data)))) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
             }
 
         public:
@@ -134,16 +108,6 @@ namespace mtm {
                 }
             }
 
-            /**
-             *check if the list is sorted
-             *
-             * @return if the list is sorted
-             */
-            bool isSorted() const {
-                //the head breaks the sorted logic, if it is the head- skip it.
-                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-            }
-
             //FIXME CORRECT FOR SYNTAX
             bool operator==(SortedListNode* other) const {
                 return (this->data == other->data);
@@ -158,7 +122,6 @@ namespace mtm {
             }
 
             friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
-                assert(!lhs.isHead());
                 if (rhs.isTail()) {
                     return true;
                 }
@@ -185,40 +148,12 @@ namespace mtm {
         SortedListNode* head;
         SortedListNode* tail;
 
-        bool isEmpty() const{
-            return (this->listLength == 0);
-        }
-
-        bool isSorted() const {
-            if ((this->isEmpty())){
-                return true;
-            }
-            return head->isSorted();
-        }
-
-        bool verifyLength() const {
-            int actualLength = 0;
-            SortedListNode* current = this->head;
-            while(current != this->tail) {
-                ++actualLength;
-                current = current->next;
-            }
-            return actualLength == this->listLength;
-        }
-
-        bool verifyList() const {
-            return true;
-            return (this->isSorted())&&(this->verifyLength());
-        }
-
-
         void deleteNode(SortedListNode* node) {
             if (node == nullptr) {
                 return;
             }
             node->deleteNode();
             --(this->listLength);
-            assert(this->verifyList());
         }
 
         public:
@@ -266,9 +201,7 @@ namespace mtm {
                 } catch (std::bad_alloc& e) {
                     throw;
                 }
-                //this->insert(currentData);
             }
-            //assert(this->verifyList());
         }
 
         SortedList<T>& operator=(const SortedList<T>& other) {
@@ -302,9 +235,6 @@ namespace mtm {
                 delete oldHead;
                 oldHead = nextNode;
             }
-            // if(other.head == nullptr) {
-            //     return *this;
-            // }
             return *this;
             // for(ConstIterator iter : other) {
             //     this->insert(*iter);
@@ -325,26 +255,6 @@ namespace mtm {
             }
         }
 
-        // void insert(const T& newElement) {
-        //     ConstIterator iter = this->begin();
-        //     while( newElement < *iter && iter != this->end()) {
-        //         ++iter;
-        //     }
-        //     if(iter == this->end()) {
-        //         SortedListNode* newNode = new SortedListNode(newElement);
-        //         this->tail->prev = newNode;
-        //         newNode->next = this->tail;
-        //         ++(this->listLength);
-        //         return;
-        //     }
-        //     SortedListNode* newNode = new SortedListNode(newElement);
-        //     newNode->prev = iter.current;
-        //     newNode->next = iter.current->next;
-        //     iter.current->next->prev = newNode;
-        //     iter.current->next = newNode;
-        //     ++(this->listLength);
-        // }
-
         void insert(const T& newElement) {
             try{
                 this->head->insert(newElement);
@@ -353,54 +263,12 @@ namespace mtm {
             catch (std::bad_alloc& e) {
                 throw;
             }
-           
-            //assert(this->verifyList());
         }
 
-        /**
-        void insert(const T& newElement){
-            if (newElement == nullptr) {
-                    //TODO invalid argument
-                }
-            if(this->head == nullptr) {
-                this->head = new SortedListNode<T>(nullptr, nullptr, newElement);
-                this->tail = this->head;
-                this->length = 1;
-                return;
-            }
-            this->head->add(newElement);
-            this->length++;
-        }
-         */
-
-
-
         int length() const {
             return this->listLength;
         }
 
-        //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-
-        /**
-        void remove(const ConstIterator& iter){
-            if(iter == this->end()) {
-                return;
-            }
-            ConstIterator& begin = this->begin();
-            if(iter == begin) {
-                this->head->next->deleteNode(); //FIXME this line
-            }
-            else{
-                SortedListNode* nextNode = iter.current->next; //TODO understand what this code does
-                SortedListNode* prevNode = iter.current->prev;
-                prevNode->next = nextNode;
-                nextNode->prev = prevNode;
-            }
-            //delete iter;
-            --(this->listLength);
-        }
-         */
-
         void remove(const ConstIterator& iter){
             ConstIterator last = this->end();
             if(!(iter != last)) {
@@ -430,7 +298,6 @@ namespace mtm {
                     catch (std::bad_alloc& e) {
                         throw;
                     }
-                    //filteredList.insert(val);
                 }
             }
             return filteredList;
@@ -447,7 +314,6 @@ namespace mtm {
                 catch (std::bad_alloc& e) {
                     throw;
                 }
-                //appliedList.insert(function(val));
             }
             return appliedList;
         }
@@ -489,7 +355,6 @@ namespace mtm {
             ConstIterator& operator=(const ConstIterator& other) = default;
             ~ConstIterator() = default;
             T& operator*() const{
-                assert(!current->isHead());
                 if(current->isTail()) {
                     throw std::out_of_range("Iterator is out of range");
                 }
@@ -505,9 +370,6 @@ namespace mtm {
             bool operator!=(const ConstIterator& other) const{
                 return current != other.current;
             }
-            // bool operator==(const ConstIterator& other) const{
-            //     return current == other.current;
-            // }
     /**
      * the class should support the following public interface:
      * if needed, use =defualt / =delete

commit 0aba796d73832f41b27d00cf1ee0c1f4274c9912
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 12:27:51 2025 +0200

    adding try-catch block for bad::aloc, moving sortedlistnode d'tor to public, removing op== for Constiterator

diff --git a/SortedList.h b/SortedList.h
index 0518d20..5c7391c 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -14,8 +14,7 @@ namespace mtm {
         //provides the de-facto interface for interacting with SortedListNode,
         //wrapping function provides flexibility with static like parameters such as
         //head and tail, without forcing a single instance of the list class.
-        class ConstIterator;
-        //class Iterator;
+        // class ConstIterator;
         class SortedListNode {
         //TODO maybe delete these comment lines
             //the members of this class are only accessible by SortedList class
@@ -28,19 +27,26 @@ namespace mtm {
             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
 
             SortedListNode(T data): SortedListNode() {
-                this->data = new T(data);
+                try{
+                    this->data = new T(data);
+                } catch (std::bad_alloc& e) {
+                    delete this;
+                    throw;
+                }
+                //this->data = new T(data);
             }
 
             //FIXME might be redundant
             SortedListNode(SortedListNode* other) : SortedListNode() {
-                this->data = new T(other->data);
+                try{
+                    this->data = new T(*(other->data));
+                } catch (std::bad_alloc& e) {
+                    delete this;
+                    throw;
+                }
+                //this->data = new T(other->data);
             }
 
-            ~SortedListNode() {
-                this->prev = nullptr;
-                this->next = nullptr;
-                delete this->data;
-            }
 
             void deleteNode() {
                 assert(!(this->isTail()||this->isHead()));
@@ -97,6 +103,12 @@ namespace mtm {
 
         public:
 
+            ~SortedListNode() {
+                this->prev = nullptr;
+                this->next = nullptr;
+                delete this->data;
+            }
+
             inline bool isTail() const {
                 return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
             }
@@ -113,9 +125,13 @@ namespace mtm {
                 // if (data == nullptr) {
                 //     //TODO invalid argument
                 // }
-                SortedListNode* newNode = new SortedListNode(data);
-                this->add(newNode);
-                assert(this->isSorted());
+                try{
+                     SortedListNode* newNode = new SortedListNode(data);
+                    this->add(newNode);
+                }
+                catch (std::bad_alloc& e) {
+                    throw;
+                }
             }
 
             /**
@@ -191,6 +207,7 @@ namespace mtm {
         }
 
         bool verifyList() const {
+            return true;
             return (this->isSorted())&&(this->verifyLength());
         }
 
@@ -206,7 +223,7 @@ namespace mtm {
 
         public:
         //class NodeIterator;
-        //class ConstIterator;
+        class ConstIterator;
 
         ConstIterator begin() const {
             return ConstIterator(this->head->next);
@@ -216,16 +233,6 @@ namespace mtm {
             return ConstIterator(this->tail);
         }
 
-        /**
-        ConstIterator begin() {
-            return ConstIterator(this->head->next);
-        }
-
-        ConstIterator end() {
-            return ConstIterator(this->tail);
-        }
-        */
-
         SortedList() : listLength(0){
             try {
                 this->head = new SortedListNode();
@@ -233,6 +240,7 @@ namespace mtm {
             } catch (std::bad_alloc& e) {
                 delete this->head;
                 delete this->tail;
+                throw;
             }
             this->head->next = this->tail;
             this->tail->prev = this->head;
@@ -253,9 +261,14 @@ namespace mtm {
             */
 
             for(const T& currentData : other) {
-                this->insert(currentData);
+                try{
+                    this->insert(currentData);
+                } catch (std::bad_alloc& e) {
+                    throw;
+                }
+                //this->insert(currentData);
             }
-            assert(this->verifyList());
+            //assert(this->verifyList());
         }
 
         SortedList<T>& operator=(const SortedList<T>& other) {
@@ -266,16 +279,33 @@ namespace mtm {
             // for(ConstIterator iter : *this) {
             //     this->remove(*iter);
             // }
-            SortedListNode* current = this->head->next;
-            while(current != this->tail) {
-                SortedListNode* next = current->next;
-                delete current;
-                current = next;
-            }
-           this->listLength = 0;
-            if(other.head == nullptr) {
-                return *this;
-            }
+             SortedListNode* oldHead = this->head;
+             SortedListNode* oldTail = this->tail;
+             int oldLength = this->listLength;
+             try{
+                SortedList* tempOther = new SortedList(other);
+                this->head = tempOther->head;
+                this->tail = tempOther->tail;
+                this->listLength = tempOther->listLength;
+                tempOther->head = nullptr;
+                tempOther->tail = nullptr;
+                delete tempOther;
+            } 
+            catch (std::bad_alloc& e) {
+                this->head = oldHead;
+                this->tail = oldTail;
+                this->listLength = oldLength;
+                throw;
+            }
+            while(oldHead != nullptr) {
+                SortedListNode* nextNode = oldHead->next;
+                delete oldHead;
+                oldHead = nextNode;
+            }
+            // if(other.head == nullptr) {
+            //     return *this;
+            // }
+            return *this;
             // for(ConstIterator iter : other) {
             //     this->insert(*iter);
             // }
@@ -283,11 +313,7 @@ namespace mtm {
             // while(otherCurrent != other.end()) {
             //     this->insert(*otherCurrent);
             //     ++otherCurrent;
-            // }
-            for(const T& currentData : other) { //TODO create iterator for SortedListNodes
-                this->insert(currentData);
-            }
-            return *this;
+            // }            
         }
 
         ~SortedList() {
@@ -320,9 +346,15 @@ namespace mtm {
         // }
 
         void insert(const T& newElement) {
-            this->head->insert(newElement);
-            ++(this->listLength);
-            assert(this->verifyList());
+            try{
+                this->head->insert(newElement);
+                ++(this->listLength);
+            }
+            catch (std::bad_alloc& e) {
+                throw;
+            }
+           
+            //assert(this->verifyList());
         }
 
         /**
@@ -371,17 +403,18 @@ namespace mtm {
 
         void remove(const ConstIterator& iter){
             ConstIterator last = this->end();
-            if(iter == last) {
+            if(!(iter != last)) {
                 return;
             }
             SortedListNode* current = this->head->next;
             ConstIterator curr = this->begin();
             while(curr != last) {
-                if(curr == iter) {
+                if(!(curr != iter)) {
                     current->deleteNode();
                     --(this->listLength);
+                    return;
                 }
-                curr++;
+                ++curr;
                 current = current->next;
             }
         }
@@ -391,7 +424,13 @@ namespace mtm {
             SortedList<T> filteredList;
             for(const T& val : *this){
                 if(condition(val)) {
-                    filteredList.insert(val);
+                    try{
+                        filteredList.insert(val);
+                    } 
+                    catch (std::bad_alloc& e) {
+                        throw;
+                    }
+                    //filteredList.insert(val);
                 }
             }
             return filteredList;
@@ -400,8 +439,15 @@ namespace mtm {
         template <class Function>
         SortedList<T> apply(Function function) const{
             SortedList<T> appliedList;
+            
             for(const T& val : *this){
-                appliedList.insert(function(val));
+                try{
+                    appliedList.insert(function(val));
+                } 
+                catch (std::bad_alloc& e) {
+                    throw;
+                }
+                //appliedList.insert(function(val));
             }
             return appliedList;
         }
@@ -459,18 +505,9 @@ namespace mtm {
             bool operator!=(const ConstIterator& other) const{
                 return current != other.current;
             }
-            bool operator>(const ConstIterator& other) const{
-                return current->data > other.current->data;
-            }
-            bool operator==(const ConstIterator& other) const{
-                return current == other.current;
-            }
-            ConstIterator operator++(int){
-                ConstIterator temp = *this;
-                ++(*this);
-                return temp;
-            }
-
+            // bool operator==(const ConstIterator& other) const{
+            //     return current == other.current;
+            // }
     /**
      * the class should support the following public interface:
      * if needed, use =defualt / =delete

commit 0653548115efb475ee9ef2255ffd5751378fb1d3
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Tue Jan 7 12:24:32 2025 +0200

    removing extra spaces in prints

diff --git a/TaskManager.cpp b/TaskManager.cpp
index dc8872c..c007d98 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -37,11 +37,11 @@ void TaskManager::completeTask(const string &personName){
     try
     {
         employees[currentEmployee].completeTask();
-        
     }
     catch (const std::runtime_error& e)
     {
-        std::cout << e.what() << std::endl;
+        throw(e);
+        //std::cout << e.what() << std::endl;
     }
 }
 
@@ -60,7 +60,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
     }
     for(int i = 0; i < numOfEmployees; i++){
         SortedList<Task> oldTasks = this->employees[i].getTasks();
-        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
+        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task){ return setPriority(task, type, priority); });
         this->employees[i].setTasks(newTasks);
     }
 
@@ -69,7 +69,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
 
 void TaskManager::printAllEmployees() const{
     for(int i = 0; i < numOfEmployees; i++){
-        std::cout << employees[i] << std::endl;
+        std::cout << employees[i] << std::endl;        
     }
 }
 
@@ -78,7 +78,6 @@ void TaskManager::printAllTasks() const{
     for(auto currentTask : allTasks){
         std::cout << currentTask << std::endl;
     }
-    std::cout << std::endl;
 }
 
 void TaskManager::printTasksByType(TaskType type) const{
@@ -87,7 +86,6 @@ void TaskManager::printTasksByType(TaskType type) const{
     for(auto currentTask : tasksByType){
         std::cout << currentTask << std::endl;
     }
-    std::cout << std::endl;
    
 }
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{

commit 15b8664b8ec62371842ac36a283c97cdf037642a
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Mon Jan 6 17:27:30 2025 +0200

    removing loop in verifyLength

diff --git a/SortedList.h b/SortedList.h
index cb49cbe..0518d20 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -182,8 +182,10 @@ namespace mtm {
 
         bool verifyLength() const {
             int actualLength = 0;
-            for(const T& data : *this) {
+            SortedListNode* current = this->head;
+            while(current != this->tail) {
                 ++actualLength;
+                current = current->next;
             }
             return actualLength == this->listLength;
         }

commit f9111aecae6467bcf44532eb7f7dc18d8f44c8cf
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Mon Jan 6 17:25:10 2025 +0200

    fix copy constructor

diff --git a/SortedList.h b/SortedList.h
index 62647e2..cb49cbe 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -27,7 +27,7 @@ namespace mtm {
 
             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
 
-            SortedListNode(T data): prev(nullptr), next(nullptr) {
+            SortedListNode(T data): SortedListNode() {
                 this->data = new T(data);
             }
 
@@ -43,6 +43,7 @@ namespace mtm {
             }
 
             void deleteNode() {
+                assert(!(this->isTail()||this->isHead()));
                 this->prev->next = this->next;
                 this->next->prev = this->prev;
                 this->next = nullptr;
@@ -345,16 +346,18 @@ namespace mtm {
         }
 
         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
-        
+
+        /**
         void remove(const ConstIterator& iter){
             if(iter == this->end()) {
                 return;
             }
-            if(iter == this->begin()) {
-                this->head = this->head->next;
+            ConstIterator& begin = this->begin();
+            if(iter == begin) {
+                this->head->next->deleteNode(); //FIXME this line
             }
             else{
-                SortedListNode* nextNode = iter.current->next;
+                SortedListNode* nextNode = iter.current->next; //TODO understand what this code does
                 SortedListNode* prevNode = iter.current->prev;
                 prevNode->next = nextNode;
                 nextNode->prev = prevNode;
@@ -362,6 +365,24 @@ namespace mtm {
             //delete iter;
             --(this->listLength);
         }
+         */
+
+        void remove(const ConstIterator& iter){
+            ConstIterator last = this->end();
+            if(iter == last) {
+                return;
+            }
+            SortedListNode* current = this->head->next;
+            ConstIterator curr = this->begin();
+            while(curr != last) {
+                if(curr == iter) {
+                    current->deleteNode();
+                    --(this->listLength);
+                }
+                curr++;
+                current = current->next;
+            }
+        }
         
         template <class Condition>
         SortedList<T> filter(Condition condition) const{
@@ -467,59 +488,4 @@ namespace mtm {
     };
 
 
-    // template <class T>
-    // class SortedList<T>::NodeIterator {
-    //     /**
-    //      * the class should support the following public interface:
-    //      * if needed, use =defualt / =delete
-    //      *
-    //      * constructors and destructor:
-    //      * 1. a ctor(or ctors) your implementation needs
-    //      * 2. copy constructor
-    //      * 3. operator= - assignment operator
-    //      * 4. ~ConstIterator() - destructor
-    //      *
-    //      * operators:
-    //      * 5. operator* - returns the element the iterator points to
-    //      * 6. operator++ - advances the iterator to the next element
-    //      * 7. operator!= - returns true if the iterator points to a different element
-    //      *
-    //      */
-    //     private:
-    //     SortedListNode* current;
-    //     int index;
-    //     public:
-
-    //     NodeIterator() = delete;
-    //     NodeIterator(SortedListNode* current) : current(current) {}
-
-    //     bool operator==(const NodeIterator& other) const {
-    //         return this->current == other.current;
-    //     }
-
-    //     bool operator!=(const NodeIterator& other) const {
-    //         return !(this == other);
-    //     }
-
-    //     bool operator<(const NodeIterator& other) const {
-    //         return this->index < other.index;
-    //     }
-
-    //     bool operator>(const NodeIterator& other) const {
-    //         return (this != other) && (!(this < other));
-    //     }
-
-    //     bool operator<=(const NodeIterator& other) const {
-    //         return !(*this > other);
-    //     }
-
-    //     bool operator>=(const NodeIterator& other) const {
-    //         return !(*this < other);
-    //     }
-
-    //     T operator*() const {
-    //         return this->current;
-    //     }
-
-    // };
 };
\ No newline at end of file

commit 47c314bca1434aa2aa14bfe3f03b7de4b406e225
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Mon Jan 6 12:26:34 2025 +0200

    fix copy constructor

diff --git a/SortedList.h b/SortedList.h
index fd63b1e..62647e2 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -67,10 +67,10 @@ namespace mtm {
                     return;
                 }
                 //if we arrived at the orderly place of the new node
-                if (newNode > this->next) {
+                if (*(newNode->data) > *(this->next->data)) { //fixme
                     assert(!this->next->isTail());
                     this->addImmediate(newNode);
-                    assert(this->isSorted());
+                    //assert(this->isSorted());//todo attempt to reduce assertion calls to help see the actual bug
                     return;
                 }
                 //if we are yet to find the place for the new node nor did we arrive to the end of the chain
@@ -88,10 +88,10 @@ namespace mtm {
              * @return if the list is sorted
              */
             bool isSorted(int) const {
-                if (this->isTail()){
+                if (this->isTail()||(!(this->hasNext()))){
                     return true;
                 }
-                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+                return (!((*(this->next->data)) > (*(this->data)))) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
             }
 
         public:
@@ -236,6 +236,19 @@ namespace mtm {
         }
 
         SortedList(const SortedList<T>& other): SortedList<T>(){
+            /*
+             try {
+                this->head = new SortedListNode();
+                this->tail = new SortedListNode();
+            } catch (std::bad_alloc& e) {
+                delete this->head;
+                delete this->tail;
+            }
+            this->head->next = this->tail;
+            this->tail->prev = this->head;
+            this->listLength = 0;
+            */
+
             for(const T& currentData : other) {
                 this->insert(currentData);
             }

commit 8228282d48338be47ff297c82019b867957b0f2c
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sun Jan 5 19:43:25 2025 +0200

    changing Person* employees[MAX_PERSONS]; to Person employees[MAX_PERSONS];

diff --git a/TaskManager.cpp b/TaskManager.cpp
index d1eef57..dc8872c 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -1,41 +1,42 @@
 #include <iostream>
 #include "TaskManager.h"
 using namespace mtm;
-
+#define NOT_FOUND -1
 TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
 
-Person* TaskManager::isEmployeeExist(const string& personName){
-    Person* currentEmployee = nullptr;
+int TaskManager::isEmployeeExist(const string& personName){
+    int currentEmployee = NOT_FOUND;
     for (int i = 0; i < numOfEmployees; i++){
-        if (employees[i]->getName() == personName){
-            currentEmployee = employees[i];
+        if (employees[i].getName() == personName){
+            currentEmployee = i;
         }
     }
     return currentEmployee;
 }
 
 void TaskManager::assignTask(const string &personName, const Task &task){
-    Person* currentEmployee = isEmployeeExist(personName);
-    if(currentEmployee == nullptr){
+    int currentEmployee = isEmployeeExist(personName);
+    if(currentEmployee == NOT_FOUND){
         if(numOfEmployees == MAX_PERSONS){
             throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
         }
-        currentEmployee = new Person(personName);
-        employees[numOfEmployees++] = currentEmployee;
+        Person newEmployee(personName);
+        currentEmployee = numOfEmployees;
+        employees[numOfEmployees++] = newEmployee;
     }
     Task newTask(task.getPriority(), task.getType(), task.getDescription());
     newTask.setId(idCounter++);
-    currentEmployee->assignTask(newTask);
+    employees[currentEmployee].assignTask(newTask);
 }
 
 void TaskManager::completeTask(const string &personName){
-    Person* currentEmployee = isEmployeeExist(personName);
-    if(currentEmployee == nullptr){
+    int currentEmployee = isEmployeeExist(personName);
+    if(currentEmployee == NOT_FOUND){
        return;
     }
     try
     {
-        currentEmployee->completeTask();
+        employees[currentEmployee].completeTask();
         
     }
     catch (const std::runtime_error& e)
@@ -58,9 +59,9 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
         return;
     }
     for(int i = 0; i < numOfEmployees; i++){
-        SortedList<Task> oldTasks = this->employees[i]->getTasks();
+        SortedList<Task> oldTasks = this->employees[i].getTasks();
         SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
-        this->employees[i]->setTasks(newTasks);
+        this->employees[i].setTasks(newTasks);
     }
 
 }
@@ -68,7 +69,7 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
 
 void TaskManager::printAllEmployees() const{
     for(int i = 0; i < numOfEmployees; i++){
-        std::cout << *employees[i] << std::endl;
+        std::cout << employees[i] << std::endl;
     }
 }
 
@@ -92,7 +93,7 @@ void TaskManager::printTasksByType(TaskType type) const{
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{
     SortedList<Task> allTasks;
     for(int i = 0; i < this->numOfEmployees; i++){
-        SortedList<Task> tasks(this->employees[i]->getTasks());
+        SortedList<Task> tasks(this->employees[i].getTasks());
         for(auto currentTask : tasks){
             allTasks.insert(currentTask);
         }
diff --git a/TaskManager.h b/TaskManager.h
index 992c707..909637d 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -18,8 +18,8 @@ private:
     static const int MAX_PERSONS = 10;
     int idCounter;
     int numOfEmployees;
-    Person* employees[MAX_PERSONS];
-    Person* isEmployeeExist(const string& personName);
+    Person employees[MAX_PERSONS];
+    int isEmployeeExist(const string& personName);
     const Task setPriority(const Task& tasks, TaskType type, int priority);
     SortedList<Task> getAllEmployeesTasks() const;
 

commit 54cee0e14013897058629fb37dae5acd52b83cd8
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sun Jan 5 19:13:09 2025 +0200

    fix > in add

diff --git a/SortedList.h b/SortedList.h
index 97a85b5..fd63b1e 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -67,7 +67,7 @@ namespace mtm {
                     return;
                 }
                 //if we arrived at the orderly place of the new node
-                if (newNode < this->next) {
+                if (newNode > this->next) {
                     assert(!this->next->isTail());
                     this->addImmediate(newNode);
                     assert(this->isSorted());

commit e4dfb1d8d405838796d3452527b0b68840e0371b
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sun Jan 5 19:09:13 2025 +0200

    add > operator

diff --git a/SortedList.h b/SortedList.h
index 8d19288..97a85b5 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -17,7 +17,7 @@ namespace mtm {
         class ConstIterator;
         //class Iterator;
         class SortedListNode {
-            //TODO maybe delete these comment lines
+        //TODO maybe delete these comment lines
             //the members of this class are only accessible by SortedList class
         private:
             friend class SortedList<T>;
@@ -140,6 +140,15 @@ namespace mtm {
                 return (this->data > other->data);
             }
 
+            friend bool operator>(const SortedListNode& lhs, const SortedListNode& rhs) {
+                assert(!lhs.isHead());
+                if (rhs.isTail()) {
+                    return true;
+                }
+                return (lhs.data > rhs.data);
+            }
+
+
             bool operator<(SortedListNode* other) const {
                 bool equal = *this == *other;
                 bool greater = *this > *other;

commit 1e6c054e84118ecea4901048a41a787479dbf4d6
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sun Jan 5 18:44:14 2025 +0200

    changing TM c'tor

diff --git a/TaskManager.h b/TaskManager.h
index d5369e8..992c707 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -31,7 +31,7 @@ public:
      *
      * Note - you may add =default if needed.
      */
-    TaskManager() : idCounter(0), numOfEmployees(0) {};
+    TaskManager();
 
     /**
      * @brief Deleted copy constructor to prevent copying of TaskManager objects.

commit 9045c6eb82e85637eed83e396e967e71fb86ec40
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sun Jan 5 18:43:03 2025 +0200

    removing  static from idCounter

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 2fc9060..d1eef57 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -2,7 +2,7 @@
 #include "TaskManager.h"
 using namespace mtm;
 
-int TaskManager::idCounter = 0;
+TaskManager::TaskManager() : idCounter(0), numOfEmployees(0){}
 
 Person* TaskManager::isEmployeeExist(const string& personName){
     Person* currentEmployee = nullptr;
diff --git a/TaskManager.h b/TaskManager.h
index f2ee51d..d5369e8 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -16,8 +16,8 @@ private:
      * @brief Maximum number of persons the TaskManager can handle.
      */
     static const int MAX_PERSONS = 10;
-    static int idCounter;
-    int numOfEmployees = 0;
+    int idCounter;
+    int numOfEmployees;
     Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName);
     const Task setPriority(const Task& tasks, TaskType type, int priority);
@@ -31,7 +31,7 @@ public:
      *
      * Note - you may add =default if needed.
      */
-    TaskManager() = default;
+    TaskManager() : idCounter(0), numOfEmployees(0) {};
 
     /**
      * @brief Deleted copy constructor to prevent copying of TaskManager objects.

commit a6d4adbfe69f4db7f0e586ddd38d579643a89cea
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sun Jan 5 18:38:23 2025 +0200

    fix default constructor

diff --git a/SortedList.h b/SortedList.h
index cc122f7..8d19288 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -15,6 +15,7 @@ namespace mtm {
         //wrapping function provides flexibility with static like parameters such as
         //head and tail, without forcing a single instance of the list class.
         class ConstIterator;
+        //class Iterator;
         class SortedListNode {
             //TODO maybe delete these comment lines
             //the members of this class are only accessible by SortedList class
@@ -31,8 +32,7 @@ namespace mtm {
             }
 
             //FIXME might be redundant
-            SortedListNode(SortedListNode* other) {
-                this();
+            SortedListNode(SortedListNode* other) : SortedListNode() {
                 this->data = new T(other->data);
             }
 
@@ -204,6 +204,16 @@ namespace mtm {
             return ConstIterator(this->tail);
         }
 
+        /**
+        ConstIterator begin() {
+            return ConstIterator(this->head->next);
+        }
+
+        ConstIterator end() {
+            return ConstIterator(this->tail);
+        }
+        */
+
         SortedList() : listLength(0){
             try {
                 this->head = new SortedListNode();
@@ -314,7 +324,7 @@ namespace mtm {
 
         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
         
-        void remove(ConstIterator iter){
+        void remove(const ConstIterator& iter){
             if(iter == this->end()) {
                 return;
             }
@@ -379,13 +389,15 @@ namespace mtm {
     class SortedList<T>::ConstIterator {
         private:
             friend class SortedList<T>;
-            SortedListNode* current;
-            ConstIterator(SortedListNode* current) : current(current) {}
+            const SortedListNode* current;
+            ConstIterator(const SortedListNode* current) : current(current) {}
         public:
-            ConstIterator(ConstIterator& other) = default;
+            ConstIterator(const ConstIterator& other) {
+                this->current = other.current;
+            }
             ConstIterator& operator=(const ConstIterator& other) = default;
             ~ConstIterator() = default;
-            const T& operator*() const{
+            T& operator*() const{
                 assert(!current->isHead());
                 if(current->isTail()) {
                     throw std::out_of_range("Iterator is out of range");

commit 701211041a14220a115f8612ae1a5f62a1e7dfd7
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 22:14:52 2025 +0200

    adding const

diff --git a/TaskManager.cpp b/TaskManager.cpp
index e71e2be..2fc9060 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -44,7 +44,7 @@ void TaskManager::completeTask(const string &personName){
     }
 }
 
-Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
+const Task TaskManager::setPriority(const Task& tasks, TaskType type, int priority){
     if(tasks.getType() == type){
         Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
         resultTasks.setId(tasks.getId());

commit 8b75341e5c20f2330702565c2dd4ce884fe2e794
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 22:13:57 2025 +0200

    adding const

diff --git a/TaskManager.h b/TaskManager.h
index d06a25f..f2ee51d 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -20,7 +20,7 @@ private:
     int numOfEmployees = 0;
     Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName);
-    Task setPriority(Task tasks, TaskType type, int priority);
+    const Task setPriority(const Task& tasks, TaskType type, int priority);
     SortedList<Task> getAllEmployeesTasks() const;
 
     // Note - Additional private fields and methods can be added if needed.

commit 684f8095f105676b02214a290bfce79cc6cd58d1
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 22:13:30 2025 +0200

    moving isEmpty() up

diff --git a/SortedList.h b/SortedList.h
index b3842f7..cc122f7 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -14,6 +14,7 @@ namespace mtm {
         //provides the de-facto interface for interacting with SortedListNode,
         //wrapping function provides flexibility with static like parameters such as
         //head and tail, without forcing a single instance of the list class.
+        class ConstIterator;
         class SortedListNode {
             //TODO maybe delete these comment lines
             //the members of this class are only accessible by SortedList class
@@ -158,8 +159,12 @@ namespace mtm {
         SortedListNode* head;
         SortedListNode* tail;
 
+        bool isEmpty() const{
+            return (this->listLength == 0);
+        }
+
         bool isSorted() const {
-            if (this->isEmpty()){
+            if ((this->isEmpty())){
                 return true;
             }
             return head->isSorted();
@@ -167,7 +172,7 @@ namespace mtm {
 
         bool verifyLength() const {
             int actualLength = 0;
-            for (T& data : this) {
+            for(const T& data : *this) {
                 ++actualLength;
             }
             return actualLength == this->listLength;
@@ -177,9 +182,6 @@ namespace mtm {
             return (this->isSorted())&&(this->verifyLength());
         }
 
-        inline bool isEmpty(){
-            return this->listLength == 0;
-        }
 
         void deleteNode(SortedListNode* node) {
             if (node == nullptr) {
@@ -192,7 +194,7 @@ namespace mtm {
 
         public:
         //class NodeIterator;
-        class ConstIterator;
+        //class ConstIterator;
 
         ConstIterator begin() const {
             return ConstIterator(this->head->next);

commit 999c73182a4f49919f94ab13bb2e3b1346469295
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 20:48:41 2025 +0200

    fixing conflicts

diff --git a/SortedList.h b/SortedList.h
index 5eb8caa..b3842f7 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -111,7 +111,7 @@ namespace mtm {
                 // if (data == nullptr) {
                 //     //TODO invalid argument
                 // }
-                SortedListNode * newNode = new SortedListNode(data);
+                SortedListNode* newNode = new SortedListNode(data);
                 this->add(newNode);
                 assert(this->isSorted());
             }
@@ -181,7 +181,6 @@ namespace mtm {
             return this->listLength == 0;
         }
 
-        void deleteNode(SortedListNode* node) {
         void deleteNode(SortedListNode* node) {
             if (node == nullptr) {
                 return;
@@ -191,7 +190,7 @@ namespace mtm {
             assert(this->verifyList());
         }
 
-    public:
+        public:
         //class NodeIterator;
         class ConstIterator;
 
@@ -313,7 +312,7 @@ namespace mtm {
 
         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
         
-        void remove(ConstIterator& iter){
+        void remove(ConstIterator iter){
             if(iter == this->end()) {
                 return;
             }
@@ -374,7 +373,7 @@ namespace mtm {
          */
     };
 
-    template <typename T>
+    template <class T>
     class SortedList<T>::ConstIterator {
         private:
             friend class SortedList<T>;
@@ -432,59 +431,59 @@ namespace mtm {
     };
 
 
-     template <class T>
-    class SortedList<T>::NodeIterator {
-        /**
-         * the class should support the following public interface:
-         * if needed, use =defualt / =delete
-         *
-         * constructors and destructor:
-         * 1. a ctor(or ctors) your implementation needs
-         * 2. copy constructor
-         * 3. operator= - assignment operator
-         * 4. ~ConstIterator() - destructor
-         *
-         * operators:
-         * 5. operator* - returns the element the iterator points to
-         * 6. operator++ - advances the iterator to the next element
-         * 7. operator!= - returns true if the iterator points to a different element
-         *
-         */
-        private:
-        SortedListNode* current;
-        int index;
-        public:
-
-        NodeIterator() = delete;
-        NodeIterator(SortedListNode* current) : current(current) {}
-
-        bool operator==(const NodeIterator& other) const {
-            return this->current == other.current;
-        }
-
-        bool operator!=(const NodeIterator& other) const {
-            return !(this == other);
-        }
-
-        bool operator<(const NodeIterator& other) const {
-            return this->index < other.index;
-        }
-
-        bool operator>(const NodeIterator& other) const {
-            return (this != other) && (!(this < other));
-        }
-
-        bool operator<=(const NodeIterator& other) const {
-            return !(*this > other);
-        }
-
-        bool operator>=(const NodeIterator& other) const {
-            return !(*this < other);
-        }
-
-        T operator*() const {
-            return this->current;
-        }
-
-    };
+    // template <class T>
+    // class SortedList<T>::NodeIterator {
+    //     /**
+    //      * the class should support the following public interface:
+    //      * if needed, use =defualt / =delete
+    //      *
+    //      * constructors and destructor:
+    //      * 1. a ctor(or ctors) your implementation needs
+    //      * 2. copy constructor
+    //      * 3. operator= - assignment operator
+    //      * 4. ~ConstIterator() - destructor
+    //      *
+    //      * operators:
+    //      * 5. operator* - returns the element the iterator points to
+    //      * 6. operator++ - advances the iterator to the next element
+    //      * 7. operator!= - returns true if the iterator points to a different element
+    //      *
+    //      */
+    //     private:
+    //     SortedListNode* current;
+    //     int index;
+    //     public:
+
+    //     NodeIterator() = delete;
+    //     NodeIterator(SortedListNode* current) : current(current) {}
+
+    //     bool operator==(const NodeIterator& other) const {
+    //         return this->current == other.current;
+    //     }
+
+    //     bool operator!=(const NodeIterator& other) const {
+    //         return !(this == other);
+    //     }
+
+    //     bool operator<(const NodeIterator& other) const {
+    //         return this->index < other.index;
+    //     }
+
+    //     bool operator>(const NodeIterator& other) const {
+    //         return (this != other) && (!(this < other));
+    //     }
+
+    //     bool operator<=(const NodeIterator& other) const {
+    //         return !(*this > other);
+    //     }
+
+    //     bool operator>=(const NodeIterator& other) const {
+    //         return !(*this < other);
+    //     }
+
+    //     T operator*() const {
+    //         return this->current;
+    //     }
+
+    // };
 };
\ No newline at end of file

commit 0739a79536eb5b6b964c33a3e762344f497133af
Merge: 5fa2b37 0cee188
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 20:42:12 2025 +0200

    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3

commit 5fa2b3725ac3931239928a0db2788fe23eb6bd7a
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 20:29:11 2025 +0200

    moving  SortedListNode class back to private, removing <T>,

diff --git a/SortedList.h b/SortedList.h
index dcac80f..bd0711a 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -14,7 +14,145 @@ namespace mtm {
         //provides the de-facto interface for interacting with SortedListNode,
         //wrapping function provides flexibility with static like parameters such as
         //head and tail, without forcing a single instance of the list class.
-        class SortedListNode;
+        class SortedListNode {
+            //TODO maybe delete these comment lines
+            //the members of this class are only accessible by SortedList class
+        private:
+            friend class SortedList<T>;
+            SortedListNode* prev;
+            SortedListNode* next;
+            T* data;
+
+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+
+            SortedListNode(T data): prev(nullptr), next(nullptr) {
+                this->data = new T(data);
+            }
+
+            //FIXME might be redundant
+            SortedListNode(SortedListNode* other) {
+                this();
+                this->data = new T(other->data);
+            }
+
+            ~SortedListNode() {
+                this->prev = nullptr;
+                this->next = nullptr;
+                delete this->data;
+            }
+
+            void deleteNode() {
+                this->prev->next = this->next;
+                this->next->prev = this->prev;
+                this->next = nullptr;
+                this->prev = nullptr;
+                delete this;
+            }
+
+            void addImmediate(SortedListNode* newNode) {
+                assert(!this->isTail());
+                this->next->prev = newNode;
+                newNode->next = this->next;
+                this->next = newNode;
+                newNode->prev = this;
+            }
+
+            void add(SortedListNode* newNode) {
+                //if we arrived at the end of the chain
+                if (!this->hasNext()) {
+                    assert(this->next->isTail());
+                    this->addImmediate(newNode);
+                    assert(this->isSorted());
+                    return;
+                }
+                //if we arrived at the orderly place of the new node
+                if (newNode < this->next) {
+                    assert(!this->next->isTail());
+                    this->addImmediate(newNode);
+                    assert(this->isSorted());
+                    return;
+                }
+                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+                this->next->add(newNode);
+                assert(this->isSorted());
+            }
+
+            // SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
+            // prev(prev), next(next), data(data) {}
+
+            /**
+             * overload of the isSorted function, to differentiate calls between
+             * the head and the rest of the chain
+             *
+             * @return if the list is sorted
+             */
+            bool isSorted(int) const {
+                if (this->isTail()){
+                    return true;
+                }
+                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+            }
+
+        public:
+
+            inline bool isTail() const {
+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+            }
+
+            inline bool isHead() const {
+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+            }
+
+            inline bool hasNext()   const {
+                return !(this->next->isTail());
+            }
+
+            void insert(const T& data) {
+                // if (data == nullptr) {
+                //     //TODO invalid argument
+                // }
+                SortedListNode * newNode = new SortedListNode(data);
+                this->add(newNode);
+                assert(this->isSorted());
+            }
+
+            /**
+             *check if the list is sorted
+             *
+             * @return if the list is sorted
+             */
+            bool isSorted() const {
+                //the head breaks the sorted logic, if it is the head- skip it.
+                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+            }
+
+            //FIXME CORRECT FOR SYNTAX
+            bool operator==(SortedListNode* other) const {
+                return (this->data == other->data);
+            }
+
+            bool operator!=(SortedListNode* other) const {
+                return !(*this == *other);
+            }
+
+            bool operator>(SortedListNode* other) const {
+                return (this->data > other->data);
+            }
+
+            bool operator<(SortedListNode* other) const {
+                bool equal = *this == *other;
+                bool greater = *this > *other;
+                return (!equal) && (!greater);
+            }
+
+            bool operator<=(SortedListNode* other) const {
+                return !(*this > *other);
+            }
+
+            bool operator>=(const SortedListNode* other) const {
+                return !(*this < *other);
+            }
+        };
         private:
         int listLength;
         SortedListNode* head;
@@ -43,7 +181,7 @@ namespace mtm {
             return this->listLength == 0;
         }
 
-        void deleteNode(SortedListNode<T>* node) {
+        void deleteNode(SortedListNode* node) {
             if (node == nullptr) {
                 return;
             }
@@ -53,13 +191,21 @@ namespace mtm {
         }
 
     public:
-        class NodeIterator;
+        //class NodeIterator;
         class ConstIterator;
 
-        SortedList<T>() : listLength(0){
+        ConstIterator begin() const {
+            return ConstIterator(this->head->next);
+        }
+
+        ConstIterator end() const {
+            return ConstIterator(this->tail);
+        }
+
+        SortedList() : listLength(0){
             try {
-                this->head = new SortedListNode<T>();
-                this->tail = new SortedListNode<T>();
+                this->head = new SortedListNode();
+                this->tail = new SortedListNode();
             } catch (std::bad_alloc& e) {
                 delete this->head;
                 delete this->tail;
@@ -68,32 +214,40 @@ namespace mtm {
             this->tail->prev = this->head;
         }
 
-        SortedList<T>(const SortedList& other): SortedList(){
-            for(T& currentData : other) {
+        SortedList(const SortedList<T>& other): SortedList<T>(){
+            for(const T& currentData : other) {
                 this->insert(currentData);
             }
             assert(this->verifyList());
         }
 
-        SortedList<T>& operator=(const SortedList& other) {
+        SortedList<T>& operator=(const SortedList<T>& other) {
             if(this == &other) {
                 return *this;
             }
             
-            for(SortedList<T> current : *this) {
-                this->remove(current);
-            }
-            // SortedListNode<T>* current = this->head->next;
-            // while(current != this->tail) {
-            //     SortedListNode<T>* next = current->next;
-            //     delete current;
-            //     current = next;
+            // for(ConstIterator iter : *this) {
+            //     this->remove(*iter);
             // }
+            SortedListNode* current = this->head->next;
+            while(current != this->tail) {
+                SortedListNode* next = current->next;
+                delete current;
+                current = next;
+            }
            this->listLength = 0;
             if(other.head == nullptr) {
                 return *this;
             }
-            for(T& currentData : other) { //TODO create iterator for SortedListNodes
+            // for(ConstIterator iter : other) {
+            //     this->insert(*iter);
+            // }
+            // ConstIterator otherCurrent = other.begin();
+            // while(otherCurrent != other.end()) {
+            //     this->insert(*otherCurrent);
+            //     ++otherCurrent;
+            // }
+            for(const T& currentData : other) { //TODO create iterator for SortedListNodes
                 this->insert(currentData);
             }
             return *this;
@@ -107,6 +261,26 @@ namespace mtm {
             }
         }
 
+        // void insert(const T& newElement) {
+        //     ConstIterator iter = this->begin();
+        //     while( newElement < *iter && iter != this->end()) {
+        //         ++iter;
+        //     }
+        //     if(iter == this->end()) {
+        //         SortedListNode* newNode = new SortedListNode(newElement);
+        //         this->tail->prev = newNode;
+        //         newNode->next = this->tail;
+        //         ++(this->listLength);
+        //         return;
+        //     }
+        //     SortedListNode* newNode = new SortedListNode(newElement);
+        //     newNode->prev = iter.current;
+        //     newNode->next = iter.current->next;
+        //     iter.current->next->prev = newNode;
+        //     iter.current->next = newNode;
+        //     ++(this->listLength);
+        // }
+
         void insert(const T& newElement) {
             this->head->insert(newElement);
             ++(this->listLength);
@@ -137,7 +311,7 @@ namespace mtm {
 
         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
         
-        void remove(ConstIterator<T>& iter){
+        void remove(ConstIterator iter){
             if(iter == this->end()) {
                 return;
             }
@@ -145,19 +319,19 @@ namespace mtm {
                 this->head = this->head->next;
             }
             else{
-                SortedListNode* nextNode = iter->next;
-                SortedListNode* prevNode = iter->prev;
+                SortedListNode* nextNode = iter.current->next;
+                SortedListNode* prevNode = iter.current->prev;
                 prevNode->next = nextNode;
                 nextNode->prev = prevNode;
             }
-            delete iter;
+            delete iter.current;
             (this->listLength)--;
         }
-
+        
         template <class Condition>
         SortedList<T> filter(Condition condition) const{
             SortedList<T> filteredList;
-            for(T& val : this){
+            for(const T& val : *this){
                 if(condition(val)) {
                     filteredList.insert(val);
                 }
@@ -168,19 +342,11 @@ namespace mtm {
         template <class Function>
         SortedList<T> apply(Function function) const{
             SortedList<T> appliedList;
-            for(T& val : this){
+            for(const T& val : *this){
                 appliedList.insert(function(val));
             }
             return appliedList;
         }
-
-        ConstIterator begin() const {
-            return ConstIterator(this->head->next);
-        }
-
-        ConstIterator end() const {
-            return ConstIterator(this->tail);
-        }
         /**
          *
          * the class should support the following public interface:
@@ -206,12 +372,12 @@ namespace mtm {
          */
     };
 
-    template <class T>
+    template <typename T>
     class SortedList<T>::ConstIterator {
         private:
             friend class SortedList<T>;
-            SortedListNode<T>* current;
-            ConstIterator(SortedListNode<T>* current) : current(current) {}
+            SortedListNode* current;
+            ConstIterator(SortedListNode* current) : current(current) {}
         public:
             ConstIterator(ConstIterator& other) = default;
             ConstIterator& operator=(const ConstIterator& other) = default;
@@ -236,6 +402,14 @@ namespace mtm {
             bool operator>(const ConstIterator& other) const{
                 return current->data > other.current->data;
             }
+            bool operator==(const ConstIterator& other) const{
+                return current == other.current;
+            }
+            ConstIterator operator++(int){
+                ConstIterator temp = *this;
+                ++(*this);
+                return temp;
+            }
 
     /**
      * the class should support the following public interface:
@@ -255,203 +429,63 @@ namespace mtm {
      */
     };
 
-    template <class T>
-    class SortedList<T>::SortedListNode {
-            //TODO maybe delete these comment lines
-            //the members of this class are only accessible by SortedList class
-        private:
-            friend class SortedList<T>;
-            SortedListNode * prev;
-            SortedListNode * next;
-            T* data;
-
-            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-
-            SortedListNode(T data): prev(nullptr), next(nullptr) {
-                this->data = new T(data);
-            }
-
-            //FIXME might be redundant
-            SortedListNode(SortedListNode<T>* other) {
-                this();
-                this->data = new T(other->data);
-            }
-
-            ~SortedListNode() {
-                this->prev = nullptr;
-                this->next = nullptr;
-                delete this->data;
-            }
-
-            void deleteNode() {
-                this->prev->next = this->next;
-                this->next->prev = this->prev;
-                this->next = nullptr;
-                this->prev = nullptr;
-                delete this;
-            }
-
-            void addImmediate(SortedListNode<T>* newNode) {
-                assert(!this->isTail());
-                this->next->prev = newNode;
-                newNode->next = this->next;
-                this->next = newNode;
-                newNode->prev = this;
-            }
-
-            void add(SortedListNode<T>* newNode) {
-                //if we arrived at the end of the chain
-                if (!this->hasNext()) {
-                    assert(this->next->isTail());
-                    this->addImmediate(newNode);
-                    assert(this->isSorted());
-                    return;
-                }
-                //if we arrived at the orderly place of the new node
-                if (newNode > this->next) {
-                    assert(!this->next->isTail());
-                    this->addImmediate(newNode);
-                    assert(this->isSorted());
-                    return;
-                }
-                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-                this->next->add(newNode);
-                assert(this->isSorted());
-            }
-
-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
-            prev(prev), next(next), data(data) {}
-
-            /**
-             * overload of the isSorted function, to differentiate calls between
-             * the head and the rest of the chain
-             *
-             * @return if the list is sorted
-             */
-            bool isSorted(int) const {
-                if (this->isTail()){
-                    return true;
-                }
-                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-            }
-
-        public:
-
-            inline bool isTail() const {
-                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-            }
-
-            inline bool isHead() const {
-                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-            }
-
-            inline bool hasNext()   const {
-                return !(this->next->isTail());
-            }
-
-            void insert(T const& const data) {
-                if (data == nullptr) {
-                    //TODO invalid argument
-                }
-                SortedListNode * newNode = new SortedListNode(data);
-                this->add(newNode);
-                assert(this->isSorted());
-            }
-
-            /**
-             *check if the list is sorted
-             *
-             * @return if the list is sorted
-             */
-            bool isSorted() const {
-                //the head breaks the sorted logic, if it is the head- skip it.
-                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-            }
-
-            //FIXME CORRECT FOR SYNTAX
-            bool operator==(SortedListNode<T>* other) const {
-                return (this->data == other->data);
-            }
-
-            bool operator!=(SortedListNode<T>* other) const {
-                return !(*this == *other);
-            }
-
-            bool operator>(SortedListNode<T>* other) const {
-                return (this->data > other->data);
-            }
-
-            bool operator<(SortedListNode<T>* other) const {
-                bool equal = *this == *other;
-                bool greater = *this > *other;
-                return (!equal) && (!greater);
-            }
 
-            bool operator<=(SortedListNode<T>* other) const {
-                return !(*this > *other);
-            }
-
-            bool operator>=(const SortedListNode<T>* other) const {
-                return !(*this < *other);
-            }
-        };
-
-    template <class T>
-    class SortedList<T>::NodeIterator {
-        /**
-         * the class should support the following public interface:
-         * if needed, use =defualt / =delete
-         *
-         * constructors and destructor:
-         * 1. a ctor(or ctors) your implementation needs
-         * 2. copy constructor
-         * 3. operator= - assignment operator
-         * 4. ~ConstIterator() - destructor
-         *
-         * operators:
-         * 5. operator* - returns the element the iterator points to
-         * 6. operator++ - advances the iterator to the next element
-         * 7. operator!= - returns true if the iterator points to a different element
-         *
-         */
-        private:
-        SortedListNode<T>* current;
-        int index;
-        public:
-
-        NodeIterator() = delete;
-
-        NodeIterator(SortedListNode<T>* current) : current(current) {}
-
-        bool operator==(const NodeIterator& other) const {
-            return this->current == other.current;
-        }
-
-        bool operator!=(const NodeIterator& other) const {
-            return !(this == other);
-        }
-
-        bool operator<(const NodeIterator& other) const {
-            return this->index < other.index;
-        }
-
-        bool operator>(const NodeIterator& other) const {
-            return (this != other) && (!(this < other));
-        }
-
-        bool operator<=(const NodeIterator& other) const {
-            return !(*this > other);
-        }
-
-        bool operator>=(const NodeIterator& other) const {
-            return !(*this < other);
-        }
-
-        T operator*() const {
-            return this->current;
-        }
-
-
-
-    };
+    // template <class T>
+    // class SortedList<T>::NodeIterator {
+    //     /**
+    //      * the class should support the following public interface:
+    //      * if needed, use =defualt / =delete
+    //      *
+    //      * constructors and destructor:
+    //      * 1. a ctor(or ctors) your implementation needs
+    //      * 2. copy constructor
+    //      * 3. operator= - assignment operator
+    //      * 4. ~ConstIterator() - destructor
+    //      *
+    //      * operators:
+    //      * 5. operator* - returns the element the iterator points to
+    //      * 6. operator++ - advances the iterator to the next element
+    //      * 7. operator!= - returns true if the iterator points to a different element
+    //      *
+    //      */
+    //     private:
+    //     SortedListNode<T>* current;
+    //     int index;
+    //     public:
+
+    //     NodeIterator() = delete;
+
+    //     NodeIterator(SortedListNode<T>* current) : current(current) {}
+
+    //     bool operator==(const NodeIterator& other) const {
+    //         return this->current == other.current;
+    //     }
+
+    //     bool operator!=(const NodeIterator& other) const {
+    //         return !(this == other);
+    //     }
+
+    //     bool operator<(const NodeIterator& other) const {
+    //         return this->index < other.index;
+    //     }
+
+    //     bool operator>(const NodeIterator& other) const {
+    //         return (this != other) && (!(this < other));
+    //     }
+
+    //     bool operator<=(const NodeIterator& other) const {
+    //         return !(*this > other);
+    //     }
+
+    //     bool operator>=(const NodeIterator& other) const {
+    //         return !(*this < other);
+    //     }
+
+    //     T operator*() const {
+    //         return this->current;
+    //     }
+
+
+
+    // };
 };
\ No newline at end of file

commit 1a750c59af64c4fef70ede64ac9fdb9f11bef424
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 20:25:33 2025 +0200

    moving setPriority up, and removing space

diff --git a/TaskManager.cpp b/TaskManager.cpp
index c0bf6a9..e71e2be 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -24,7 +24,7 @@ void TaskManager::assignTask(const string &personName, const Task &task){
         employees[numOfEmployees++] = currentEmployee;
     }
     Task newTask(task.getPriority(), task.getType(), task.getDescription());
-    newTask.setId(++idCounter);
+    newTask.setId(idCounter++);
     currentEmployee->assignTask(newTask);
 }
 
@@ -36,6 +36,7 @@ void TaskManager::completeTask(const string &personName){
     try
     {
         currentEmployee->completeTask();
+        
     }
     catch (const std::runtime_error& e)
     {
@@ -43,6 +44,15 @@ void TaskManager::completeTask(const string &personName){
     }
 }
 
+Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
+    if(tasks.getType() == type){
+        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
+        resultTasks.setId(tasks.getId());
+        return resultTasks;
+    }
+    return tasks;
+}
+
 void TaskManager::bumpPriorityByType(TaskType type, int priority){
     if(priority <= 0){
         return;
@@ -55,19 +65,10 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
 
 }
 
-Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
-    if(tasks.getType() == type){
-        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
-        resultTasks.setId(tasks.getId());
-        return resultTasks;
-    }
-    return tasks;
-}
 
 void TaskManager::printAllEmployees() const{
     for(int i = 0; i < numOfEmployees; i++){
         std::cout << *employees[i] << std::endl;
-        std::cout << std::endl;
     }
 }
 
@@ -81,8 +82,8 @@ void TaskManager::printAllTasks() const{
 
 void TaskManager::printTasksByType(TaskType type) const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
-    SortedList<Task> tasksByType = allTasks.filter([type]( Task task) { return (task.getType() == type);});
-    for(const Task& currentTask : tasksByType){
+    SortedList<Task> tasksByType = allTasks.filter([type](Task task) { return (task.getType() == type);});
+    for(auto currentTask : tasksByType){
         std::cout << currentTask << std::endl;
     }
     std::cout << std::endl;

commit 0cee1886b116f0b80546cff060398b8df95ef168
Merge: db897c4 b24e030
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 20:08:57 2025 +0200

    Merge remote-tracking branch 'origin/main'

commit db897c42533e394ea27e05d8f0fb0e4745fe2c82
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 20:08:05 2025 +0200

    refresh code

diff --git a/SortedList.h b/SortedList.h
index dcac80f..9636528 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -43,7 +43,7 @@ namespace mtm {
             return this->listLength == 0;
         }
 
-        void deleteNode(SortedListNode<T>* node) {
+        void deleteNode(SortedListNode* node) {
             if (node == nullptr) {
                 return;
             }
@@ -56,10 +56,10 @@ namespace mtm {
         class NodeIterator;
         class ConstIterator;
 
-        SortedList<T>() : listLength(0){
+        SortedList<T>() : listLength(0), head(nullptr), tail(nullptr) {
             try {
-                this->head = new SortedListNode<T>();
-                this->tail = new SortedListNode<T>();
+                this->head = new SortedListNode();
+                this->tail = new SortedListNode();
             } catch (std::bad_alloc& e) {
                 delete this->head;
                 delete this->tail;
@@ -98,6 +98,7 @@ namespace mtm {
             }
             return *this;
         }
+
         ~SortedList() {
             SortedListNode* current = this->head;
             while(current != nullptr) {
@@ -137,7 +138,7 @@ namespace mtm {
 
         //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
         
-        void remove(ConstIterator<T>& iter){
+        void remove(ConstIterator& iter){
             if(iter == this->end()) {
                 return;
             }
@@ -150,8 +151,8 @@ namespace mtm {
                 prevNode->next = nextNode;
                 nextNode->prev = prevNode;
             }
-            delete iter;
-            (this->listLength)--;
+            //delete iter;
+            --(this->listLength);
         }
 
         template <class Condition>
@@ -210,8 +211,8 @@ namespace mtm {
     class SortedList<T>::ConstIterator {
         private:
             friend class SortedList<T>;
-            SortedListNode<T>* current;
-            ConstIterator(SortedListNode<T>* current) : current(current) {}
+            SortedListNode* current;
+            ConstIterator(SortedListNode* current) : current(current) {}
         public:
             ConstIterator(ConstIterator& other) = default;
             ConstIterator& operator=(const ConstIterator& other) = default;
@@ -267,15 +268,16 @@ namespace mtm {
 
             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
 
-            SortedListNode(T data): prev(nullptr), next(nullptr) {
-                this->data = new T(data);
+            SortedListNode(T& data): SortedListNode() {
+                try {
+                    this->data = new T(data);
+                } catch (std::bad_alloc& e) {
+                    delete this;
+                }
             }
 
             //FIXME might be redundant
-            SortedListNode(SortedListNode<T>* other) {
-                this();
-                this->data = new T(other->data);
-            }
+            SortedListNode(SortedListNode* other) : SortedListNode(other->data) {}
 
             ~SortedListNode() {
                 this->prev = nullptr;
@@ -291,7 +293,7 @@ namespace mtm {
                 delete this;
             }
 
-            void addImmediate(SortedListNode<T>* newNode) {
+            void addImmediate(SortedListNode* newNode) {
                 assert(!this->isTail());
                 this->next->prev = newNode;
                 newNode->next = this->next;
@@ -299,7 +301,7 @@ namespace mtm {
                 newNode->prev = this;
             }
 
-            void add(SortedListNode<T>* newNode) {
+            void add(SortedListNode* newNode) {
                 //if we arrived at the end of the chain
                 if (!this->hasNext()) {
                     assert(this->next->isTail());
@@ -319,7 +321,7 @@ namespace mtm {
                 assert(this->isSorted());
             }
 
-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
+            SortedListNode(SortedListNode* prev = nullptr, SortedListNode* next = nullptr, T* data = nullptr) :
             prev(prev), next(next), data(data) {}
 
             /**
@@ -349,7 +351,7 @@ namespace mtm {
                 return !(this->next->isTail());
             }
 
-            void insert(T const& const data) {
+            void insert(T const& data) {
                 if (data == nullptr) {
                     //TODO invalid argument
                 }
@@ -369,29 +371,29 @@ namespace mtm {
             }
 
             //FIXME CORRECT FOR SYNTAX
-            bool operator==(SortedListNode<T>* other) const {
+            bool operator==(SortedListNode* other) const {
                 return (this->data == other->data);
             }
 
-            bool operator!=(SortedListNode<T>* other) const {
+            bool operator!=(SortedListNode* other) const {
                 return !(*this == *other);
             }
 
-            bool operator>(SortedListNode<T>* other) const {
+            bool operator>(SortedListNode* other) const {
                 return (this->data > other->data);
             }
 
-            bool operator<(SortedListNode<T>* other) const {
+            bool operator<(SortedListNode* other) const {
                 bool equal = *this == *other;
                 bool greater = *this > *other;
                 return (!equal) && (!greater);
             }
 
-            bool operator<=(SortedListNode<T>* other) const {
+            bool operator<=(SortedListNode* other) const {
                 return !(*this > *other);
             }
 
-            bool operator>=(const SortedListNode<T>* other) const {
+            bool operator>=(const SortedListNode* other) const {
                 return !(*this < *other);
             }
         };
@@ -415,13 +417,13 @@ namespace mtm {
          *
          */
         private:
-        SortedListNode<T>* current;
+        SortedListNode* current;
         int index;
         public:
 
         NodeIterator() = delete;
 
-        NodeIterator(SortedListNode<T>* current) : current(current) {}
+        NodeIterator(SortedListNode* current) : current(current) {}
 
         bool operator==(const NodeIterator& other) const {
             return this->current == other.current;

commit b24e030499a7cd2ec419e9220647920f6aca9492
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 18:42:43 2025 +0200

    fixing TaskManager print funcs

diff --git a/TaskManager.cpp b/TaskManager.cpp
index f134e46..c0bf6a9 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -49,17 +49,16 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
     }
     for(int i = 0; i < numOfEmployees; i++){
         SortedList<Task> oldTasks = this->employees[i]->getTasks();
-        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
+        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](Task task) { return setPriority(task, type, priority); });
         this->employees[i]->setTasks(newTasks);
     }
 
 }
 
-SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
-    if(tasks.begin()->getType() == type){
-        SortedList<Task> resultTasks;
-        Task newTask = Task(tasks.begin()->getPriority() + priority, tasks.begin()->getType(), tasks.begin()->getDescription());
-        resultTasks.insert(newTask);
+Task TaskManager::setPriority(Task tasks, TaskType type, int priority){
+    if(tasks.getType() == type){
+        Task resultTasks(tasks.getPriority() + priority, tasks.getType(), tasks.getDescription());
+        resultTasks.setId(tasks.getId());
         return resultTasks;
     }
     return tasks;
@@ -74,17 +73,17 @@ void TaskManager::printAllEmployees() const{
 
 void TaskManager::printAllTasks() const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
-    for(SortedList<Task> currentTask : allTasks){
-        std::cout << *currentTask.begin().data << std::endl;
+    for(auto currentTask : allTasks){
+        std::cout << currentTask << std::endl;
     }
     std::cout << std::endl;
 }
 
 void TaskManager::printTasksByType(TaskType type) const{
     SortedList<Task> allTasks = getAllEmployeesTasks();
-    SortedList<Task> tasksByType = allTasks.filter([type](SortedList<Task> sortedListTask) { return (sortedListTask.begin().getType() == type); });
-    for(SortedList<Task> currentTask : tasksByType){
-        std::cout << *currentTask.begin().data << std::endl;
+    SortedList<Task> tasksByType = allTasks.filter([type]( Task task) { return (task.getType() == type);});
+    for(const Task& currentTask : tasksByType){
+        std::cout << currentTask << std::endl;
     }
     std::cout << std::endl;
    
@@ -92,9 +91,9 @@ void TaskManager::printTasksByType(TaskType type) const{
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{
     SortedList<Task> allTasks;
     for(int i = 0; i < this->numOfEmployees; i++){
-        SortedList<Task> tasks = this->employees[i]->getTasks();
-        for(SortedList<Task> currentTask : tasks){
-            allTasks.insert(currentTask.begin().data);
+        SortedList<Task> tasks(this->employees[i]->getTasks());
+        for(auto currentTask : tasks){
+            allTasks.insert(currentTask);
         }
     }
     return allTasks;
diff --git a/TaskManager.h b/TaskManager.h
index f8ca722..d06a25f 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -20,7 +20,7 @@ private:
     int numOfEmployees = 0;
     Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName);
-    SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
+    Task setPriority(Task tasks, TaskType type, int priority);
     SortedList<Task> getAllEmployeesTasks() const;
 
     // Note - Additional private fields and methods can be added if needed.

commit c713a8026667efb7613161343ec0e66c333164e4
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 15:06:32 2025 +0200

    Update SortedList.h

diff --git a/SortedList.h b/SortedList.h
index 06122d5..dcac80f 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -99,9 +99,9 @@ namespace mtm {
             return *this;
         }
         ~SortedList() {
-            SortedListNode<T>* current = this->head;
+            SortedListNode* current = this->head;
             while(current != nullptr) {
-                SortedListNode<T>* next = current->next;
+                SortedListNode* next = current->next;
                 delete current;
                 current = next;
             }
@@ -145,8 +145,8 @@ namespace mtm {
                 this->head = this->head->next;
             }
             else{
-                SortedListNode<T>* nextNode = iter->next;
-                SortedListNode<T>* prevNode = iter->prev;
+                SortedListNode* nextNode = iter->next;
+                SortedListNode* prevNode = iter->prev;
                 prevNode->next = nextNode;
                 nextNode->prev = prevNode;
             }

commit 6ba105fa188ad39ed34c3aaa73a57df718251142
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 15:03:57 2025 +0200

    add bad alloc  catch

diff --git a/SortedList.h b/SortedList.h
index 9fbca6b..06122d5 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -4,6 +4,7 @@
 #include <stdexcept>
 #include <cassert>
 #include <functional>
+#include <new>
 
 namespace mtm {
     template <typename T>
@@ -19,31 +20,6 @@ namespace mtm {
         SortedListNode* head;
         SortedListNode* tail;
 
-        /**
-         * //maybe can delete this function
-        void addInitial(SortedListNode<T>* addThis){
-            assert(this->isEmpty());
-            this->head->add(addThis);
-        }
-         */
-
-
-        /** //maybe can delete this function
-        void add(SortedListNode<T>* addThis){
-            if(this->isEmpty()){
-                this->head->addImmediate(addThis);
-                return;
-            }
-            for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
-                if (addThis > node){
-                    node->addPrevious(addThis); //TODO add addprevious method to nodes
-                    return;
-                }
-            }
-        }
-         *
-         */
-
         bool isSorted() const {
             if (this->isEmpty()){
                 return true;
@@ -73,7 +49,7 @@ namespace mtm {
             }
             node->deleteNode();
             --(this->listLength);
-            assert(this->isSorted());
+            assert(this->verifyList());
         }
 
     public:
@@ -81,19 +57,22 @@ namespace mtm {
         class ConstIterator;
 
         SortedList<T>() : listLength(0){
-            this->head = new SortedListNode<T>();
-            this->tail = new SortedListNode<T>();
+            try {
+                this->head = new SortedListNode<T>();
+                this->tail = new SortedListNode<T>();
+            } catch (std::bad_alloc& e) {
+                delete this->head;
+                delete this->tail;
+            }
             this->head->next = this->tail;
             this->tail->prev = this->head;
         }
 
-        SortedList<T>(const SortedList& other){
-            this();
-            if(other.head != nullptr){
-                for(T& currentData : other) { //TODO create iterator for SortedListNodes
-                    this->insert(currentData);
-                }
+        SortedList<T>(const SortedList& other): SortedList(){
+            for(T& currentData : other) {
+                this->insert(currentData);
             }
+            assert(this->verifyList());
         }
 
         SortedList<T>& operator=(const SortedList& other) {
@@ -374,7 +353,7 @@ namespace mtm {
                 if (data == nullptr) {
                     //TODO invalid argument
                 }
-                SortedListNode<T> * newNode = new SortedListNode<T>(data);
+                SortedListNode * newNode = new SortedListNode(data);
                 this->add(newNode);
                 assert(this->isSorted());
             }

commit bced35e6545f6f007b737b89b1612d3f89eddfe7
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 15:03:10 2025 +0200

    removing <T> from nodes

diff --git a/SortedList.h b/SortedList.h
index 3157a14..9fbca6b 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -14,10 +14,10 @@ namespace mtm {
         //wrapping function provides flexibility with static like parameters such as
         //head and tail, without forcing a single instance of the list class.
         class SortedListNode;
-    private:
+        private:
         int listLength;
-        SortedListNode<T>* head;
-        SortedListNode<T>* tail;
+        SortedListNode* head;
+        SortedListNode* tail;
 
         /**
          * //maybe can delete this function
@@ -276,14 +276,14 @@ namespace mtm {
      */
     };
 
-    template <typename T>
+    template <class T>
     class SortedList<T>::SortedListNode {
             //TODO maybe delete these comment lines
             //the members of this class are only accessible by SortedList class
         private:
             friend class SortedList<T>;
-            SortedListNode<T> * prev;
-            SortedListNode<T> * next;
+            SortedListNode * prev;
+            SortedListNode * next;
             T* data;
 
             SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}

commit f542a6ec1127d79172a165c882f71ee52f8a65b6
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 14:50:28 2025 +0200

    Update SortedList.h

diff --git a/SortedList.h b/SortedList.h
index 3301a25..3157a14 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -53,7 +53,7 @@ namespace mtm {
 
         bool verifyLength() const {
             int actualLength = 0;
-            for (SortedListNode<T>* node : this) {
+            for (T& data : this) {
                 ++actualLength;
             }
             return actualLength == this->listLength;

commit 9d518098f47b8134ede99944956a3187f4ab0a0d
Merge: 6b8d1fb 8e9d98e
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 14:49:32 2025 +0200

    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3

commit 6b8d1fbf99b5c4c1586785d116d094c562e086e6
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 14:49:25 2025 +0200

    edding scope to SortedList<T>::SortedListNode

diff --git a/SortedList.h b/SortedList.h
index 0a37def..f61b011 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -280,7 +280,7 @@ namespace mtm {
     };
 
     template <typename T>
-    class SortedListNode {
+    class SortedList<T>::SortedListNode {
             //TODO maybe delete these comment lines
             //the members of this class are only accessible by SortedList class
         private:

commit 8e9d98e7899747a140954b0acb2cfae097754e35
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 14:46:14 2025 +0200

    update copy constructor

diff --git a/SortedList.h b/SortedList.h
index 0a37def..c7513cf 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -87,14 +87,11 @@ namespace mtm {
             this->tail->prev = this->head;
         }
 
-        SortedList<T>(const SortedList& other) : listLength(0){
-            this->head = new SortedListNode<T>();
-            this->tail = new SortedListNode<T>();
-            this->head->next = this->tail;
-            this->tail->prev = this->head;
+        SortedList<T>(const SortedList& other){
+            this();
             if(other.head != nullptr){
-                for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-                    this->insert(currentOther.data);
+                for(T& currentData : other) { //TODO create iterator for SortedListNodes
+                    this->insert(currentData);
                 }
             }
         }
@@ -117,8 +114,8 @@ namespace mtm {
             if(other.head == nullptr) {
                 return *this;
             }
-            for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-                this->insert(currentOther.data);
+            for(T& currentData : other) { //TODO create iterator for SortedListNodes
+                this->insert(currentData);
             }
             return *this;
         }

commit 0c42c335a9961c705e47ce704eff8bc9b9236b9b
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 14:45:13 2025 +0200

    moving SortedListNode class outside of SortedList

diff --git a/SortedList.h b/SortedList.h
index 3c6af70..0a37def 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -13,148 +13,7 @@ namespace mtm {
         //provides the de-facto interface for interacting with SortedListNode,
         //wrapping function provides flexibility with static like parameters such as
         //head and tail, without forcing a single instance of the list class.
-        template <typename T>
-        class SortedListNode {
-            //TODO maybe delete these comment lines
-            //the members of this class are only accessible by SortedList class
-        private:
-            friend class SortedList<T>;
-            SortedListNode<T> * prev;
-            SortedListNode<T> * next;
-            T* data;
-
-            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-
-            SortedListNode(T data): prev(nullptr), next(nullptr) {
-                this->data = new T(data);
-            }
-
-            //FIXME might be redundant
-            SortedListNode(SortedListNode<T>* other) {
-                this();
-                this->data = new T(other->data);
-            }
-
-            ~SortedListNode() {
-                this->prev = nullptr;
-                this->next = nullptr;
-                delete this->data;
-            }
-
-            void deleteNode() {
-                this->prev->next = this->next;
-                this->next->prev = this->prev;
-                this->next = nullptr;
-                this->prev = nullptr;
-                delete this;
-            }
-
-
-
-            void addImmediate(SortedListNode<T>* newNode) {
-                assert(!this->isTail());
-                this->next->prev = newNode;
-                newNode->next = this->next;
-                this->next = newNode;
-                newNode->prev = this;
-            }
-
-            void add(SortedListNode<T>* newNode) {
-                //if we arrived at the end of the chain
-                if (!this->hasNext()) {
-                    assert(this->next->isTail());
-                    this->addImmediate(newNode);
-                    assert(this->isSorted());
-                    return;
-                }
-                //if we arrived at the orderly place of the new node
-                if (newNode > this->next) {
-                    assert(!this->next->isTail());
-                    this->addImmediate(newNode);
-                    assert(this->isSorted());
-                    return;
-                }
-                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
-                this->next->add(newNode);
-                assert(this->isSorted());
-            }
-
-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
-            prev(prev), next(next), data(data) {}
-
-            /**
-             * overload of the isSorted function, to differentiate calls between
-             * the head and the rest of the chain
-             *
-             * @return if the list is sorted
-             */
-            bool isSorted(int) const {
-                if (this->isTail()){
-                    return true;
-                }
-                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
-            }
-
-        public:
-
-            inline bool isTail() const {
-                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
-            }
-
-            inline bool isHead() const {
-                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-            }
-
-            inline bool hasNext()   const {
-                return !(this->next->isTail());
-            }
-
-            void insert(T const& const data) {
-                if (data == nullptr) {
-                    //TODO invalid argument
-                }
-                SortedListNode<T> * newNode = new SortedListNode<T>(data);
-                this->add(newNode);
-                assert(this->isSorted());
-            }
-
-            /**
-             *check if the list is sorted
-             *
-             * @return if the list is sorted
-             */
-            bool isSorted() const {
-                //the head breaks the sorted logic, if it is the head- skip it.
-                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
-            }
-
-            //FIXME CORRECT FOR SYNTAX
-            bool operator==(SortedListNode<T>* other) const {
-                return (this->data == other->data);
-            }
-
-            bool operator!=(SortedListNode<T>* other) const {
-                return !(*this == *other);
-            }
-
-            bool operator>(SortedListNode<T>* other) const {
-                return (this->data > other->data);
-            }
-
-            bool operator<(SortedListNode<T>* other) const {
-                bool equal = *this == *other;
-                bool greater = *this > *other;
-                return (!equal) && (!greater);
-            }
-
-            bool operator<=(SortedListNode<T>* other) const {
-                return !(*this > *other);
-            }
-
-            bool operator>=(const SortedListNode<T>* other) const {
-                return !(*this < *other);
-            }
-        };
+        class SortedListNode;
     private:
         int listLength;
         SortedListNode<T>* head;
@@ -420,6 +279,147 @@ namespace mtm {
      */
     };
 
+    template <typename T>
+    class SortedListNode {
+            //TODO maybe delete these comment lines
+            //the members of this class are only accessible by SortedList class
+        private:
+            friend class SortedList<T>;
+            SortedListNode<T> * prev;
+            SortedListNode<T> * next;
+            T* data;
+
+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+
+            SortedListNode(T data): prev(nullptr), next(nullptr) {
+                this->data = new T(data);
+            }
+
+            //FIXME might be redundant
+            SortedListNode(SortedListNode<T>* other) {
+                this();
+                this->data = new T(other->data);
+            }
+
+            ~SortedListNode() {
+                this->prev = nullptr;
+                this->next = nullptr;
+                delete this->data;
+            }
+
+            void deleteNode() {
+                this->prev->next = this->next;
+                this->next->prev = this->prev;
+                this->next = nullptr;
+                this->prev = nullptr;
+                delete this;
+            }
+
+            void addImmediate(SortedListNode<T>* newNode) {
+                assert(!this->isTail());
+                this->next->prev = newNode;
+                newNode->next = this->next;
+                this->next = newNode;
+                newNode->prev = this;
+            }
+
+            void add(SortedListNode<T>* newNode) {
+                //if we arrived at the end of the chain
+                if (!this->hasNext()) {
+                    assert(this->next->isTail());
+                    this->addImmediate(newNode);
+                    assert(this->isSorted());
+                    return;
+                }
+                //if we arrived at the orderly place of the new node
+                if (newNode > this->next) {
+                    assert(!this->next->isTail());
+                    this->addImmediate(newNode);
+                    assert(this->isSorted());
+                    return;
+                }
+                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+                this->next->add(newNode);
+                assert(this->isSorted());
+            }
+
+            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
+            prev(prev), next(next), data(data) {}
+
+            /**
+             * overload of the isSorted function, to differentiate calls between
+             * the head and the rest of the chain
+             *
+             * @return if the list is sorted
+             */
+            bool isSorted(int) const {
+                if (this->isTail()){
+                    return true;
+                }
+                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+            }
+
+        public:
+
+            inline bool isTail() const {
+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+            }
+
+            inline bool isHead() const {
+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+            }
+
+            inline bool hasNext()   const {
+                return !(this->next->isTail());
+            }
+
+            void insert(T const& const data) {
+                if (data == nullptr) {
+                    //TODO invalid argument
+                }
+                SortedListNode<T> * newNode = new SortedListNode<T>(data);
+                this->add(newNode);
+                assert(this->isSorted());
+            }
+
+            /**
+             *check if the list is sorted
+             *
+             * @return if the list is sorted
+             */
+            bool isSorted() const {
+                //the head breaks the sorted logic, if it is the head- skip it.
+                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
+            }
+
+            //FIXME CORRECT FOR SYNTAX
+            bool operator==(SortedListNode<T>* other) const {
+                return (this->data == other->data);
+            }
+
+            bool operator!=(SortedListNode<T>* other) const {
+                return !(*this == *other);
+            }
+
+            bool operator>(SortedListNode<T>* other) const {
+                return (this->data > other->data);
+            }
+
+            bool operator<(SortedListNode<T>* other) const {
+                bool equal = *this == *other;
+                bool greater = *this > *other;
+                return (!equal) && (!greater);
+            }
+
+            bool operator<=(SortedListNode<T>* other) const {
+                return !(*this > *other);
+            }
+
+            bool operator>=(const SortedListNode<T>* other) const {
+                return !(*this < *other);
+            }
+        };
+
     template <class T>
     class SortedList<T>::NodeIterator {
         /**

commit 499a688d37e7b71e864021e5140d75b59d4d643f
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 14:38:02 2025 +0200

    moving class decleration to public

diff --git a/SortedList.h b/SortedList.h
index b791850..3c6af70 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -9,8 +9,6 @@ namespace mtm {
     template <typename T>
     class SortedList {
         //class SortedListNode; //TODO fix dependencies
-        class ConstIterator;
-        class NodeIterator;
         //TODO maybe delete these comment lines
         //provides the de-facto interface for interacting with SortedListNode,
         //wrapping function provides flexibility with static like parameters such as
@@ -220,6 +218,8 @@ namespace mtm {
         }
 
     public:
+        class NodeIterator;
+        class ConstIterator;
 
         SortedList<T>() : listLength(0){
             this->head = new SortedListNode<T>();
@@ -369,7 +369,6 @@ namespace mtm {
          * 11. filter - returns a new list with elements that satisfy a given condition V?
          * 12. apply - returns a new list with elements that were modified by an operation V?
          */
-         class ConstIterator;
     };
 
     template <class T>

commit 5454659792d9f569cccb83916cef97d83481d2df
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 14:32:46 2025 +0200

    update to reuse existing code

diff --git a/SortedList.h b/SortedList.h
index 6ddbb86..b791850 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -383,13 +383,14 @@ namespace mtm {
             ConstIterator& operator=(const ConstIterator& other) = default;
             ~ConstIterator() = default;
             const T& operator*() const{
-                if(current == this->end()) {
+                assert(!current->isHead());
+                if(current->isTail()) {
                     throw std::out_of_range("Iterator is out of range");
                 }
                 return *(current->data);
             }
             ConstIterator& operator++(){
-                if(current == this->end()){
+                if(current->isTail()){
                     throw std::out_of_range("Iterator is out of range");                
                 }
                 current = current->next;

commit 927e3785eea6b1a8d57d238c4eb87e5794f71d06
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 14:28:14 2025 +0200

    Update SortedList.h

diff --git a/SortedList.h b/SortedList.h
index 884fcae..6ddbb86 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -43,17 +43,15 @@ namespace mtm {
                 delete this->data;
             }
 
-            inline bool isTail() const {
-                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+            void deleteNode() {
+                this->prev->next = this->next;
+                this->next->prev = this->prev;
+                this->next = nullptr;
+                this->prev = nullptr;
+                delete this;
             }
 
-            inline bool isHead() const {
-                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
-            }
 
-            inline bool hasNext()   const {
-                return !(this->next->isTail());
-            }
 
             void addImmediate(SortedListNode<T>* newNode) {
                 assert(!this->isTail());
@@ -100,6 +98,19 @@ namespace mtm {
             }
 
         public:
+
+            inline bool isTail() const {
+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+            }
+
+            inline bool isHead() const {
+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+            }
+
+            inline bool hasNext()   const {
+                return !(this->next->isTail());
+            }
+
             void insert(T const& const data) {
                 if (data == nullptr) {
                     //TODO invalid argument
@@ -199,6 +210,15 @@ namespace mtm {
             return this->listLength == 0;
         }
 
+        void deleteNode(SortedListNode<T>* node) {
+            if (node == nullptr) {
+                return;
+            }
+            node->deleteNode();
+            --(this->listLength);
+            assert(this->isSorted());
+        }
+
     public:
 
         SortedList<T>() : listLength(0){

commit a4e202438cf033dd89268d31e6d29b6c103b1ece
Merge: 66c4305 099e4ac
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 14:19:07 2025 +0200

    Merge branch 'main' of https://github.com/guyfriedman2001/Matam_HW3

commit 66c43053e99417fee6c4a99998399ae718e33a7f
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 14:09:36 2025 +0200

    creating ConstIterator class

diff --git a/SortedList.h b/SortedList.h
index 5a0ca82..6fa951a 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -138,7 +138,6 @@ namespace mtm {
          *
          */
 
-
         bool isSorted() const {
             if (this->isEmpty()){
                 return true;
@@ -164,20 +163,20 @@ namespace mtm {
 
     public:
 
-        SortedList<T>() : length(0){
+        SortedList() : length(0){
             this->head = new SortedListNode<T>();
             this->tail = new SortedListNode<T>();
             this->head->next = this->tail;
             this->tail->prev = this->head;
         }
 
-        SortedList<T>(const SortedList& other) : length(0){
+        SortedList(const SortedList& other) : length(0){
             this->head = new SortedListNode<T>();
             this->tail = new SortedListNode<T>();
             this->head->next = this->tail;
             this->tail->prev = this->head;
             if(other.head != nullptr){
-                for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
                     this->insert(currentOther.data);
                 }
             }
@@ -187,18 +186,20 @@ namespace mtm {
             if(this == &other) {
                 return *this;
             }
-            
-            SortedListNode<T>* current = this->head->next;
-            while(current != this->tail) {
-                SortedListNode<T>* next = current->next;
-                delete current;
-                current = next;
+            for(SortedList<T> current : *this) {
+                this->remove(current);
             }
+            // SortedListNode<T>* current = this->head->next;
+            // while(current != this->tail) {
+            //     SortedListNode<T>* next = current->next;
+            //     delete current;
+            //     current = next;
+            // }
             this->length = 0;
             if(other.head == nullptr) {
                 return *this;
             }
-            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+            for(SortedList<T> currentOther : other) { //TODO create iterator for SortedListNodes 
                 this->insert(currentOther.data);
             }
             return *this;
@@ -307,27 +308,54 @@ namespace mtm {
          * 11. filter - returns a new list with elements that satisfy a given condition V?
          * 12. apply - returns a new list with elements that were modified by an operation V?
          */
-
+         class ConstIterator;
     };
 
     template <class T>
     class SortedList<T>::ConstIterator {
+        private:
+            friend class SortedList<T>;
+            SortedListNode<T>* current;
+            ConstIterator(SortedListNode<T>* current) : current(current) {}
+        public:
+            ConstIterator(ConstIterator& other) = default;
+            ConstIterator& operator=(const ConstIterator& other) = default;
+            ~ConstIterator() = default;
+            const T& operator*() const{
+                if(current == this->end()) {
+                    throw std::out_of_range("Iterator is out of range");
+                }
+                return *(current->data);
+            }
+            ConstIterator& operator++(){
+                if(current == this->end()){
+                    throw std::out_of_range("Iterator is out of range");                
+                }
+                current = current->next;
+                return *this;
+            }
+            bool operator!=(const ConstIterator& other) const{
+                return current != other.current;
+            }
+            bool operator>(const ConstIterator& other) const{
+                return current->data > other.current->data;
+            }
+
     /**
      * the class should support the following public interface:
      * if needed, use =defualt / =delete
      *
      * constructors and destructor:
-     * 1. a ctor(or ctors) your implementation needs
-     * 2. copy constructor
-     * 3. operator= - assignment operator
-     * 4. ~ConstIterator() - destructor
+     * 1. a ctor(or ctors) your implementation needs V?
+     * 2. copy constructor V?
+     * 3. operator= - assignment operator V?
+     * 4. ~ConstIterator() - destructor V?
      *
      * operators:
-     * 5. operator* - returns the element the iterator points to
-     * 6. operator++ - advances the iterator to the next element
-     * 7. operator!= - returns true if the iterator points to a different element
+     * 5. operator* - returns the element the iterator points to V?
+     * 6. operator++ - advances the iterator to the next element V?
+     * 7. operator!= - returns true if the iterator points to a different element V?
      *
      */
     };
-    }
 };
\ No newline at end of file

commit 099e4ac09c104eb5e51318fee812f590772876b3
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Sat Jan 4 14:04:32 2025 +0200

    add nodeiterator
    add node operators

diff --git a/SortedList.h b/SortedList.h
index 5a0ca82..d5603ee 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -3,11 +3,14 @@
 #include <iostream>
 #include <stdexcept>
 #include <cassert>
+#include <functional>
 
 namespace mtm {
-
     template <typename T>
     class SortedList {
+        //class SortedListNode; //TODO fix dependencies
+        class ConstIterator;
+        class NodeIterator;
         //TODO maybe delete these comment lines
         //provides the de-facto interface for interacting with SortedListNode,
         //wrapping function provides flexibility with static like parameters such as
@@ -28,6 +31,12 @@ namespace mtm {
                 this->data = new T(data);
             }
 
+            //FIXME might be redundant
+            SortedListNode(SortedListNode<T>* other) {
+                this();
+                this->data = new T(other->data);
+            }
+
             ~SortedListNode() {
                 this->prev = nullptr;
                 this->next = nullptr;
@@ -57,12 +66,14 @@ namespace mtm {
             void add(SortedListNode<T>* newNode) {
                 //if we arrived at the end of the chain
                 if (!this->hasNext()) {
+                    assert(this->next->isTail());
                     this->addImmediate(newNode);
                     assert(this->isSorted());
                     return;
                 }
                 //if we arrived at the orderly place of the new node
                 if (newNode > this->next) {
+                    assert(!this->next->isTail());
                     this->addImmediate(newNode);
                     assert(this->isSorted());
                     return;
@@ -107,9 +118,36 @@ namespace mtm {
                 //the head breaks the sorted logic, if it is the head- skip it.
                 return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
             }
+
+            //FIXME CORRECT FOR SYNTAX
+            bool operator==(SortedListNode<T>* other) const {
+                return (this->data == other->data);
+            }
+
+            bool operator!=(SortedListNode<T>* other) const {
+                return !(*this == *other);
+            }
+
+            bool operator>(SortedListNode<T>* other) const {
+                return (this->data > other->data);
+            }
+
+            bool operator<(SortedListNode<T>* other) const {
+                bool equal = *this == *other;
+                bool greater = *this > *other;
+                return (!equal) && (!greater);
+            }
+
+            bool operator<=(SortedListNode<T>* other) const {
+                return !(*this > *other);
+            }
+
+            bool operator>=(const SortedListNode<T>* other) const {
+                return !(*this < *other);
+            }
         };
     private:
-        int length;
+        int listLength;
         SortedListNode<T>* head;
         SortedListNode<T>* tail;
 
@@ -151,7 +189,7 @@ namespace mtm {
             for (SortedListNode<T>* node : this) {
                 ++actualLength;
             }
-            return actualLength == this->length;
+            return actualLength == this->listLength;
         }
 
         bool verifyList() const {
@@ -159,19 +197,19 @@ namespace mtm {
         }
 
         inline bool isEmpty(){
-            return this->length == 0;
+            return this->listLength == 0;
         }
 
     public:
 
-        SortedList<T>() : length(0){
+        SortedList<T>() : listLength(0){
             this->head = new SortedListNode<T>();
             this->tail = new SortedListNode<T>();
             this->head->next = this->tail;
             this->tail->prev = this->head;
         }
 
-        SortedList<T>(const SortedList& other) : length(0){
+        SortedList<T>(const SortedList& other) : listLength(0){
             this->head = new SortedListNode<T>();
             this->tail = new SortedListNode<T>();
             this->head->next = this->tail;
@@ -194,7 +232,7 @@ namespace mtm {
                 delete current;
                 current = next;
             }
-            this->length = 0;
+            this->listLength = 0;
             if(other.head == nullptr) {
                 return *this;
             }
@@ -214,7 +252,7 @@ namespace mtm {
 
         void insert(const T& newElement) {
             this->head->insert(newElement);
-            ++this->length;
+            ++(this->listLength);
             assert(this->verifyList());
         }
 
@@ -237,8 +275,10 @@ namespace mtm {
 
 
         int length() const {
-            return this->length;
+            return this->listLength;
         }
+
+        //SortedList<T> filter(std::function<bool(T)> filterFunc) const {}
         
         void remove(ConstIterator<T>& iter){
             if(iter == this->end()) {
@@ -254,15 +294,15 @@ namespace mtm {
                 nextNode->prev = prevNode;
             }
             delete iter;
-            this->length--;
+            (this->listLength)--;
         }
 
         template <class Condition>
         SortedList<T> filter(Condition condition) const{
             SortedList<T> filteredList;
-            for(const SortedListNode<T>& current : *this){
-                if(condition(current.data)) {
-                    filteredList.insert(current.data);
+            for(T& val : this){
+                if(condition(val)) {
+                    filteredList.insert(val);
                 }
             }
             return filteredList;
@@ -271,8 +311,8 @@ namespace mtm {
         template <class Function>
         SortedList<T> apply(Function function) const{
             SortedList<T> appliedList;
-            for(const SortedListNode<T>& current : *this){
-                appliedList.insert((function(current)).data);
+            for(T& val : this){
+                appliedList.insert(function(val));
             }
             return appliedList;
         }
@@ -329,5 +369,63 @@ namespace mtm {
      *
      */
     };
-    }
+
+    template <class T>
+    class SortedList<T>::NodeIterator {
+        /**
+         * the class should support the following public interface:
+         * if needed, use =defualt / =delete
+         *
+         * constructors and destructor:
+         * 1. a ctor(or ctors) your implementation needs
+         * 2. copy constructor
+         * 3. operator= - assignment operator
+         * 4. ~ConstIterator() - destructor
+         *
+         * operators:
+         * 5. operator* - returns the element the iterator points to
+         * 6. operator++ - advances the iterator to the next element
+         * 7. operator!= - returns true if the iterator points to a different element
+         *
+         */
+        private:
+        SortedListNode<T>* current;
+        int index;
+        public:
+
+        NodeIterator() = delete;
+
+        NodeIterator(SortedListNode<T>* current) : current(current) {}
+
+        bool operator==(const NodeIterator& other) const {
+            return this->current == other.current;
+        }
+
+        bool operator!=(const NodeIterator& other) const {
+            return !(this == other);
+        }
+
+        bool operator<(const NodeIterator& other) const {
+            return this->index < other.index;
+        }
+
+        bool operator>(const NodeIterator& other) const {
+            return (this != other) && (!(this < other));
+        }
+
+        bool operator<=(const NodeIterator& other) const {
+            return !(*this > other);
+        }
+
+        bool operator>=(const NodeIterator& other) const {
+            return !(*this < other);
+        }
+
+        T operator*() const {
+            return this->current;
+        }
+
+
+
+    };
 };
\ No newline at end of file

commit d08cf9576c9f5b7c1c662d75873a69a876a96dee
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 11:32:43 2025 +0200

    fixing CC and operator=()

diff --git a/.vscode/settings.json b/.vscode/settings.json
new file mode 100644
index 0000000..352ce2f
--- /dev/null
+++ b/.vscode/settings.json
@@ -0,0 +1,53 @@
+{
+    "files.associations": {
+        "iostream": "cpp",
+        "atomic": "cpp",
+        "bit": "cpp",
+        "cctype": "cpp",
+        "charconv": "cpp",
+        "clocale": "cpp",
+        "cmath": "cpp",
+        "compare": "cpp",
+        "concepts": "cpp",
+        "cstddef": "cpp",
+        "cstdint": "cpp",
+        "cstdio": "cpp",
+        "cstdlib": "cpp",
+        "cstring": "cpp",
+        "ctime": "cpp",
+        "cwchar": "cpp",
+        "exception": "cpp",
+        "format": "cpp",
+        "initializer_list": "cpp",
+        "ios": "cpp",
+        "iosfwd": "cpp",
+        "istream": "cpp",
+        "iterator": "cpp",
+        "limits": "cpp",
+        "locale": "cpp",
+        "memory": "cpp",
+        "new": "cpp",
+        "ostream": "cpp",
+        "stdexcept": "cpp",
+        "streambuf": "cpp",
+        "string": "cpp",
+        "system_error": "cpp",
+        "tuple": "cpp",
+        "type_traits": "cpp",
+        "typeinfo": "cpp",
+        "utility": "cpp",
+        "xfacet": "cpp",
+        "xiosbase": "cpp",
+        "xlocale": "cpp",
+        "xlocbuf": "cpp",
+        "xlocinfo": "cpp",
+        "xlocmes": "cpp",
+        "xlocmon": "cpp",
+        "xlocnum": "cpp",
+        "xloctime": "cpp",
+        "xmemory": "cpp",
+        "xstring": "cpp",
+        "xtr1common": "cpp",
+        "xutility": "cpp"
+    }
+}
\ No newline at end of file
diff --git a/SortedList.h b/SortedList.h
index 6cbc440..5a0ca82 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -172,29 +172,15 @@ namespace mtm {
         }
 
         SortedList<T>(const SortedList& other) : length(0){
-            if(other.head == nullptr) {
-                this->head = nullptr;
-                this->tail = nullptr;
-                return;
-            }
-            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
-                this->insert(currentOther.data);
+            this->head = new SortedListNode<T>();
+            this->tail = new SortedListNode<T>();
+            this->head->next = this->tail;
+            this->tail->prev = this->head;
+            if(other.head != nullptr){
+                for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                    this->insert(currentOther.data);
+                }
             }
-            
-            // SortedListNode<T>* currentOther = other.head;
-            // SortedListNode<T>* currentNode = this->head;
-            //  SortedListNode<T>* previousNode = nullptr;
-            // while(currentOther != nullptr) {
-            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-            //     if(previousNode == nullptr) {
-            //         this->head = currentNode;
-            //     }
-            //     if(previousNode != nullptr) {
-            //         previousNode->next = currentNode;
-            //     }
-            //     this->tail = currentNode;
-            //     previousNode = currentNode;
-            //     currentOther = currentOther->next;
         }
 
         SortedList<T>& operator=(const SortedList& other) {
@@ -202,14 +188,12 @@ namespace mtm {
                 return *this;
             }
             
-            SortedListNode<T>* current = this->head;
-            while(current != nullptr) {
+            SortedListNode<T>* current = this->head->next;
+            while(current != this->tail) {
                 SortedListNode<T>* next = current->next;
                 delete current;
                 current = next;
             }
-            this->head = nullptr;
-            this->tail = nullptr;
             this->length = 0;
             if(other.head == nullptr) {
                 return *this;
@@ -217,21 +201,6 @@ namespace mtm {
             for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
                 this->insert(currentOther.data);
             }
-            // SortedListNode<T>* currentOther = other.head;
-            // SortedListNode<T>* currentNode = this->head;
-            // SortedListNode<T>* previousNode = nullptr;
-            // while(currentOther != nullptr) {
-            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-            //     if(previousNode == nullptr) {
-            //         this->head = currentNode;
-            //     }
-            //     if(previousNode != nullptr) {
-            //         previousNode->next = currentNode;
-            //     }
-            //     this->tail = currentNode;
-            //     previousNode = currentNode;
-            //     currentOther = currentOther->next;
-            // }
             return *this;
         }
         ~SortedList() {
@@ -309,7 +278,7 @@ namespace mtm {
         }
 
         ConstIterator begin() const {
-            return ConstIterator(this->head);
+            return ConstIterator(this->head->next);
         }
 
         ConstIterator end() const {

commit 2c68bdf8b69731a12d5d4b4e302f3abb4ea95aea
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Sat Jan 4 11:14:42 2025 +0200

    fixing end() it

diff --git a/SortedList.h b/SortedList.h
index e378942..6cbc440 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -313,7 +313,7 @@ namespace mtm {
         }
 
         ConstIterator end() const {
-            return ConstIterator(nullptr);
+            return ConstIterator(this->tail);
         }
         /**
          *

commit cc2da7994d41dd0195f8f1d7585ca17b0fdf5bcd
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Fri Jan 3 12:45:29 2025 +0200

    add comments

diff --git a/.idea/editor.xml b/.idea/editor.xml
index 95d51a7..8434d3b 100644
--- a/.idea/editor.xml
+++ b/.idea/editor.xml
@@ -2,483 +2,244 @@
 <project version="4">
   <component name="BackendCodeEditorSettings">
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
     <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
-    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
     <option name="/Default/CodeStyle/CodeFormatting/CppClangFormat/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
     <option name="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue" value="true" type="bool" />
@@ -576,5 +337,244 @@
     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_SIZE/@EntryValue" value="4" type="int" />
     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CONTINUOUS_LINE_INDENT/@EntryValue" value="Double" type="string" />
     <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TAB_WIDTH/@EntryValue" value="4" type="int" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
   </component>
 </project>
\ No newline at end of file
diff --git a/SortedList.h b/SortedList.h
index bc3b36f..e378942 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -8,59 +8,125 @@ namespace mtm {
 
     template <typename T>
     class SortedList {
+        //TODO maybe delete these comment lines
+        //provides the de-facto interface for interacting with SortedListNode,
+        //wrapping function provides flexibility with static like parameters such as
+        //head and tail, without forcing a single instance of the list class.
         template <typename T>
         class SortedListNode {
-            private:
+            //TODO maybe delete these comment lines
+            //the members of this class are only accessible by SortedList class
+        private:
             friend class SortedList<T>;
             SortedListNode<T> * prev;
             SortedListNode<T> * next;
             T* data;
-            void add(SortedListNode<T> * newNode) {
-                if (newNode > this->next){ //TODO create > operator, make null node smallest;
-                    this->next->add(newNode);
-                    return;
-                }
+
+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
+
+            SortedListNode(T data): prev(nullptr), next(nullptr) {
+                this->data = new T(data);
+            }
+
+            ~SortedListNode() {
+                this->prev = nullptr;
+                this->next = nullptr;
+                delete this->data;
+            }
+
+            inline bool isTail() const {
+                return (this->data == nullptr)&&(this->prev != nullptr)&&(this->next == nullptr);
+            }
+
+            inline bool isHead() const {
+                return (this->data == nullptr)&&(this->next != nullptr)&&(this->prev == nullptr);
+            }
+
+            inline bool hasNext()   const {
+                return !(this->next->isTail());
+            }
+
+            void addImmediate(SortedListNode<T>* newNode) {
+                assert(!this->isTail());
                 this->next->prev = newNode;
                 newNode->next = this->next;
                 this->next = newNode;
                 newNode->prev = this;
             }
-            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) : prev(prev), next(next), data(data) {}
-            public:
-            void add(T const& const data) {
+
+            void add(SortedListNode<T>* newNode) {
+                //if we arrived at the end of the chain
+                if (!this->hasNext()) {
+                    this->addImmediate(newNode);
+                    assert(this->isSorted());
+                    return;
+                }
+                //if we arrived at the orderly place of the new node
+                if (newNode > this->next) {
+                    this->addImmediate(newNode);
+                    assert(this->isSorted());
+                    return;
+                }
+                //if we are yet to find the place for the new node nor did we arrive to the end of the chain
+                this->next->add(newNode);
+                assert(this->isSorted());
+            }
+
+            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) :
+            prev(prev), next(next), data(data) {}
+
+            /**
+             * overload of the isSorted function, to differentiate calls between
+             * the head and the rest of the chain
+             *
+             * @return if the list is sorted
+             */
+            bool isSorted(int) const {
+                if (this->isTail()){
+                    return true;
+                }
+                return (this >= this->next) && (this->next->isSorted(0)); //TODO create >= operator or < and use (!(this < this->next))
+            }
+
+        public:
+            void insert(T const& const data) {
                 if (data == nullptr) {
                     //TODO invalid argument
                 }
                 SortedListNode<T> * newNode = new SortedListNode<T>(data);
                 this->add(newNode);
-            }
-            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
-            ~SortedListNode() {
-                this->prev = nullptr;
-                this->next = nullptr;
-                delete this->data;
+                assert(this->isSorted());
             }
 
-            bool isSorted(){ //FIXME make it so the head itself wont call this function, because otherwise it would break the logic
-                if (this->next == nullptr){
-                    return true;
-                }
-                return (this >= this->next) && (this->next->isSorted()); //TODO create >= operator
+            /**
+             *check if the list is sorted
+             *
+             * @return if the list is sorted
+             */
+            bool isSorted() const {
+                //the head breaks the sorted logic, if it is the head- skip it.
+                return (this->isHead())?this->next->isSorted(0):this->isSorted(0);
             }
         };
-        private:
+    private:
         int length;
         SortedListNode<T>* head;
         SortedListNode<T>* tail;
 
+        /**
+         * //maybe can delete this function
         void addInitial(SortedListNode<T>* addThis){
             assert(this->isEmpty());
             this->head->add(addThis);
         }
+         */
 
+
+        /** //maybe can delete this function
         void add(SortedListNode<T>* addThis){
             if(this->isEmpty()){
-                this->addInitial(addThis);
+                this->head->addImmediate(addThis);
+                return;
             }
             for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
                 if (addThis > node){
@@ -69,22 +135,43 @@ namespace mtm {
                 }
             }
         }
+         *
+         */
+
 
-        bool isSorted(){
+        bool isSorted() const {
             if (this->isEmpty()){
                 return true;
             }
             return head->isSorted();
         }
 
+        bool verifyLength() const {
+            int actualLength = 0;
+            for (SortedListNode<T>* node : this) {
+                ++actualLength;
+            }
+            return actualLength == this->length;
+        }
+
+        bool verifyList() const {
+            return (this->isSorted())&&(this->verifyLength());
+        }
+
+        inline bool isEmpty(){
+            return this->length == 0;
+        }
+
     public:
-        SortedList() : length(0){
+
+        SortedList<T>() : length(0){
             this->head = new SortedListNode<T>();
             this->tail = new SortedListNode<T>();
             this->head->next = this->tail;
             this->tail->prev = this->head;
         }
-        SortedList(const SortedList& other) : length(0){
+
+        SortedList<T>(const SortedList& other) : length(0){
             if(other.head == nullptr) {
                 this->head = nullptr;
                 this->tail = nullptr;
@@ -109,13 +196,6 @@ namespace mtm {
             //     previousNode = currentNode;
             //     currentOther = currentOther->next;
         }
-        
-        /**
-         * no need to keep such basic utility private
-         */
-        inline bool isEmpty(){
-            return this->length == 0;
-        }
 
         SortedList<T>& operator=(const SortedList& other) {
             if(this == &other) {
@@ -163,6 +243,13 @@ namespace mtm {
             }
         }
 
+        void insert(const T& newElement) {
+            this->head->insert(newElement);
+            ++this->length;
+            assert(this->verifyList());
+        }
+
+        /**
         void insert(const T& newElement){
             if (newElement == nullptr) {
                     //TODO invalid argument
@@ -172,10 +259,13 @@ namespace mtm {
                 this->tail = this->head;
                 this->length = 1;
                 return;
-            }  
+            }
             this->head->add(newElement);
             this->length++;
         }
+         */
+
+
 
         int length() const {
             return this->length;
diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
index 2dd1bfe..e15ca9a 100644
--- a/cmake-build-debug/Testing/Temporary/LastTest.log
+++ b/cmake-build-debug/Testing/Temporary/LastTest.log
@@ -1,3 +1,3 @@
-Start testing: Dec 31 08:10 IST
+Start testing: Jan 03 11:09 IST
 ----------------------------------------------------------
-End testing: Dec 31 08:10 IST
+End testing: Jan 03 11:09 IST

commit 98938d5bebc6842979a36b6a471586cb958a2784
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Fri Jan 3 11:07:33 2025 +0200

    add linkedlist assertion functions

diff --git a/SortedList.h b/SortedList.h
index 1e29b25..bc3b36f 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -34,11 +34,19 @@ namespace mtm {
                 SortedListNode<T> * newNode = new SortedListNode<T>(data);
                 this->add(newNode);
             }
+            SortedListNode(): prev(nullptr), next(nullptr), data(nullptr) {}
             ~SortedListNode() {
                 this->prev = nullptr;
                 this->next = nullptr;
                 delete this->data;
             }
+
+            bool isSorted(){ //FIXME make it so the head itself wont call this function, because otherwise it would break the logic
+                if (this->next == nullptr){
+                    return true;
+                }
+                return (this >= this->next) && (this->next->isSorted()); //TODO create >= operator
+            }
         };
         private:
         int length;
@@ -57,13 +65,25 @@ namespace mtm {
             for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
                 if (addThis > node){
                     node->addPrevious(addThis); //TODO add addprevious method to nodes
-                    break;
+                    return;
                 }
             }
         }
 
+        bool isSorted(){
+            if (this->isEmpty()){
+                return true;
+            }
+            return head->isSorted();
+        }
+
     public:
-        SortedList() : length(0), head(nullptr), tail(nullptr) {}
+        SortedList() : length(0){
+            this->head = new SortedListNode<T>();
+            this->tail = new SortedListNode<T>();
+            this->head->next = this->tail;
+            this->tail->prev = this->head;
+        }
         SortedList(const SortedList& other) : length(0){
             if(other.head == nullptr) {
                 this->head = nullptr;
@@ -90,6 +110,9 @@ namespace mtm {
             //     currentOther = currentOther->next;
         }
         
+        /**
+         * no need to keep such basic utility private
+         */
         inline bool isEmpty(){
             return this->length == 0;
         }

commit fc286dc81fb3b2d0159659ff4c29a74b9c4fe66b
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Fri Jan 3 09:38:14 2025 +0200

    add linkedlist code

diff --git a/SortedList.h b/SortedList.h
index 145286d..1e29b25 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -2,6 +2,7 @@
 
 #include <iostream>
 #include <stdexcept>
+#include <cassert>
 
 namespace mtm {
 
@@ -15,7 +16,7 @@ namespace mtm {
             SortedListNode<T> * next;
             T* data;
             void add(SortedListNode<T> * newNode) {
-                if (newNode <= this->next){ //TODO create > operator, make null node smallest;
+                if (newNode > this->next){ //TODO create > operator, make null node smallest;
                     this->next->add(newNode);
                     return;
                 }
@@ -44,6 +45,23 @@ namespace mtm {
         SortedListNode<T>* head;
         SortedListNode<T>* tail;
 
+        void addInitial(SortedListNode<T>* addThis){
+            assert(this->isEmpty());
+            this->head->add(addThis);
+        }
+
+        void add(SortedListNode<T>* addThis){
+            if(this->isEmpty()){
+                this->addInitial(addThis);
+            }
+            for (SortedListNode<T>* node : this){ //FIXME adjust to work correctly with the iterator
+                if (addThis > node){
+                    node->addPrevious(addThis); //TODO add addprevious method to nodes
+                    break;
+                }
+            }
+        }
+
     public:
         SortedList() : length(0), head(nullptr), tail(nullptr) {}
         SortedList(const SortedList& other) : length(0){
@@ -71,6 +89,10 @@ namespace mtm {
             //     previousNode = currentNode;
             //     currentOther = currentOther->next;
         }
+        
+        inline bool isEmpty(){
+            return this->length == 0;
+        }
 
         SortedList<T>& operator=(const SortedList& other) {
             if(this == &other) {

commit 24e6da1e72d0ed05efd28275ce3c586d73a4a0de
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Fri Jan 3 08:56:34 2025 +0200

    add json configurations

diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
index 0000000..13566b8
--- /dev/null
+++ b/.idea/.gitignore
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
diff --git a/.idea/Matam_HW3.iml b/.idea/Matam_HW3.iml
new file mode 100644
index 0000000..f08604b
--- /dev/null
+++ b/.idea/Matam_HW3.iml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module classpath="CMake" type="CPP_MODULE" version="4" />
\ No newline at end of file
diff --git a/.idea/editor.xml b/.idea/editor.xml
new file mode 100644
index 0000000..95d51a7
--- /dev/null
+++ b/.idea/editor.xml
@@ -0,0 +1,580 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="BackendCodeEditorSettings">
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSmartPointerVsMakeFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCStyleCast/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionalStyleCast/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReinterpretCastFromVoidPtr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConvertingConstructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExplicitConversionOperator/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDiscardedPostfixOperatorResult/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstValueFunctionReturnType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberFunctionMayBeStatic/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConst/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVariableCanBeMadeConstexpr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterMayBeConstPtrOrRef/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPassValueParameterByConstReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppThrowExpressionCanBeReplacedWithRethrow/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroConstantCanBeReplacedWithNullptr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCompileTimeConstantCanBeReplacedWithBooleanConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIfCanBeReplacedByConstexprIf/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IfStdIsConstantEvaluatedCanBeReplaced/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StdIsConstantEvaluatedWillAlwaysEvaluateToConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=ConstevalIfIsAlwaysConstant/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassCanBeFinal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStructuredBinding/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseTypeTraitAlias/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAlgorithmWithCount/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseRangeAlgorithm/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseElementsView/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseStdSize/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForLoopCanBeReplacedWithWhile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppJoinDeclarationAndAssignment/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceTieWithStructuredBinding/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReplaceMemsetWithZeroInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAssociativeContains/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseEraseAlgorithm/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseFamiliarTemplateSyntaxForGenericLambdas/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTooWideScopeInitStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantNamespaceDefinition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineFunctionDefinitionInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonInlineVariableDefinitionInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionIsNotImplemented/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrivateSpecialMemberFunctionIsNotImplemented/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHiddenFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHidingFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPolymorphicClassWithNonVirtualPublicDestructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractClassWithoutSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompleteSwitchStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultCaseNotHandledInSwitchStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyErroneousEmptyStatements/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExpressionWithoutSideEffects/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNoDiscardExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionResultShouldBeUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingKeywordThrow/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTypeWithoutTypenameKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDependentTemplateWithoutTemplateKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppImplicitDefaultConstructorNotAvailable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeedsConstructorBecauseOfUninitializedMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedNonStaticDataMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRangeBasedForIncompatibleReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppZeroValuedExpressionUsedAsNullPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUnintendedObjectSlicing/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPossiblyUninitializedMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorDisambiguatedAsFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionInFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMustBePublicVirtualToImplementInterface/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationSpecifierWithoutDeclarators/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEmptyDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesLocal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclarationHidesUncapturedLocal/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMismatchedClassTags/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUsingResultOfAssignmentAsCondition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIntegralToPointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerToIntegralConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIncompatiblePointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPointerConversionDropsQualifiers/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStringLiteralToCharPointerConversion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNonExceptionSafeResourceAcquisition/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVirtualFunctionCallInsideCtor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractVirtualFunctionCallInCtor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInvalidLineContinuation/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfBadFormat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfRiskyFormat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfMissedArg/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrintfExtraArg/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatBadCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatLegacyCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatMixedArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooFewArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBoostFormatTooManyArgs/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedEntity/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMissingIncludeGuard/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenSyntaxError/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUnresolvedReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDoxygenUndocumentedParameter/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeletingVoidPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppBooleanIncrementExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeprecatedRegisterStorageClassSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppIdenticalOperandsInBinaryExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEqualOperandsInBinaryExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedefinitionOfDefaultArgumentInOverrideFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnamedNamespaceInHeaderFile/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNamesMismatch/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultedSpecialMemberFunctionIsImplicitlyDeleted/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNodiscardFunctionWithoutReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantComplexityInComparison/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAbstractFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSpecialFunctionWithoutNoexceptSpecification/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnsignedZeroComparison/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterLiteral/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMultiCharacterWideLiteral/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantQualifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantAccessSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAccessSpecifierWithNoDeclarations/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTypenameKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElseKeywordInsideCompoundStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantControlFlowJump/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyStatement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantEmptyDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantParentheses/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantLambdaParameterList/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantCastExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppHeaderHasBeenAlreadyIncluded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateArgumentsCanBeDeduced/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantTemplateArguments/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticSpecifierOnAnonymousNamespaceMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnMemberAllocationFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantStaticSpecifierOnThreadLocalLocalVariable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassAccessSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantInlineSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConstSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBooleanExpressionArgument/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantVoidArgumentList/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantMemberInitializer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantBaseClassInitializer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConstParameterInDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppVolatileParameterInDeclaration/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalFunctionInFinalClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFinalNonOverridingVirtualFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantElaboratedTypeSpecifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantDereferencingAndTakingAddress/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantConditionalExpression/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConditionalExpressionCanBeSimplified/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantExportKeyword/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRedundantZeroInitializerInAggregateInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUserDefinedLiteralSuffixDoesNotStartWithUnderscore/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassIsIncomplete/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterShadowing/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMutableSpecifierOnReferenceMember/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultInitializationWithNoUserConstructor/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppExplicitSpecializationInNonNamespaceScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnionMemberOfReferenceType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUninitializedDependentBaseClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderIsNotIncluded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppPrecompiledHeaderNotFound/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCoroutineCallResolveError/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppAwaiterTypeIsNotClass/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppOutParameterMustBeWritten/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWarningDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticAssertFailure/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEvaluationFailure/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTypeAliasNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppConceptNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppClassNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnumeratorNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLambdaCaptureNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableWithNonTrivialDtorIsNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppParameterNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTemplateParameterNeverUsed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityAssignedButNoRead/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEntityUsedOnlyInUnevaluatedContext/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLocalVariableMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppObjectMemberMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppSomeObjectMembersMightNotBeInitialized/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexedValue" value="ERROR" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDeclaratorUsedBeforeInitialization/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnusedIncludeDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppNotAllPathsReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CDeclarationWithImplicitIntType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppFunctionDoesntReturnValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppReturnNoValueInNonVoidFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppCVQualifierCanNotBeAppliedToReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDereferenceOperatorLimitExceeded/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppForwardEnumDeclarationWithoutUnderlyingType/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaRegionDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnmatchedPragmaEndRegionDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppStaticDataMemberInUnnamedStruct/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDefaultIsUsedAsIdentifier/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppLongFloat/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtReinterpretCastFromNullptr/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtBindingRValueToLvalueReference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtAddressOfClassRValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtDoubleUserConversionInCopyInit/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtCopyElisionInCopyInitDeclarator/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMsExtNotInitializedStaticConstLocalVar/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppRemoveRedundantBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceIfStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceForStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceWhileStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceDoStatementBraces/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongIncludesOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppWrongSlashesInIncludeDirective/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceNestedNamespacesStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceTypeAliasCodeStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceFunctionDeclarationStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppMemberInitializersOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingFunctionStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexedValue" value="SUGGESTION" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceOverridingDestructorStyle/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAuto/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUseAutoForNumeric/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersPlacement/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppEnforceCVQualifiersOrder/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppUnnecessaryWhitespace/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppTabsAreDisallowed/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantConditions/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANullDereference/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFANotInitializedField/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALoopConditionNotUpdated/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFADeletedPointer/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAMemoryLeak/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInvalidatedMemory/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesScope/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFALocalValueEscapesFunction/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantParameter/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAConstantFunctionResult/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAArrayIndexOutOfBounds/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableCode/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreachableFunctionCall/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAEndlessLoop/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAInfiniteRecursion/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnusedValue/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexedValue" value="WARNING" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFAUnreadVariable/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexedValue" value="HINT" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppDFATimeOver/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CppInconsistentNaming/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=StringLiteralTypo/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=CommentTypo/@EntryIndexRemoved" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexedValue" value="DO_NOT_SHOW" type="string" />
+    <option name="/Default/CodeInspection/Highlighting/InspectionSeverities/=IdentifierTypo/@EntryIndexRemoved" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppClangFormat/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/EditorConfig/EnableClangFormatSupport/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_BINARY_EXPRESSIONS_CHAIN/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_EXPRESSION/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_FOR_STMT/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTIPLE_DECLARATION/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_TERNARY/@EntryValue" value="ALIGN_ALL" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_CLASS_DEFINITION/@EntryValue" value="1" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue" value="2" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_BLANK_LINES_IN_CODE/@EntryValue" value="2" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/KEEP_USER_LINEBREAKS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CASE_FROM_SWITCH/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_COMMENT/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INT_ALIGN_EQ/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SIMPLE_BLOCK_STYLE/@EntryValue" value="DO_NOT_CHANGE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COMMA_IN_TEMPLATE_ARGS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COMMA_IN_TEMPLATE_PARAMS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_FOR_SEMICOLON/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_FOR_SEMICOLON/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_UNARY_OPERATOR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_ARRAY_ACCESS_BRACKETS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_CAST_EXPRESSION_PARENTHESES/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_INITIALIZER_BRACES/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_METHOD_PARENTHESES/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_INITIALIZER_BRACES/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPECIAL_ELSE_IF_TREATMENT/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_CAST_EXPRESSION_PARENTHESES/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_BINARY_OPSIGN/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_TERNARY_OPSIGNS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TYPE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/OTHER_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CASE_BLOCK_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DECLARATION/@EntryValue" value="1" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_FUNCTION_DEFINITION/@EntryValue" value="1" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_WHILE_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_ELSE_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_CATCH_ON_NEW_LINE/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/NAMESPACE_INDENTATION/@EntryValue" value="All" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_ARGUMENT/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_EXTENDS_LIST/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_PARAMETER/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_TYPE_ARGUMENT/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ALIGN_MULTILINE_TYPE_PARAMETER/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BLANK_LINES_AROUND_DECLARATIONS/@EntryValue" value="0" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_ACCESS_SPECIFIERS_FROM_CLASS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_CLASS_MEMBERS_FROM_ACCESS_SPECIFIERS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/LINE_BREAK_AFTER_COLON_IN_MEMBER_INITIALIZER_LISTS/@EntryValue" value="ON_SINGLE_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/MEMBER_INITIALIZER_LIST_STYLE/@EntryValue" value="DO_NOT_CHANGE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/PLACE_NAMESPACE_DEFINITIONS_ON_SAME_LINE/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_COLON_IN_BITFIELD_DECLARATOR/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_COLON_IN_BITFIELD_DECLARATOR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_EXTENDS_COLON/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_EXTENDS_COLON/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_FOR_COLON/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_FOR_COLON/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_DATA_MEMBER/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_DATA_MEMBERS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_METHOD/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_PTR_IN_NESTED_DECLARATOR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_DATA_MEMBER/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_DATA_MEMBERS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_AFTER_REF_IN_METHOD/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_ABSTRACT_DECL/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_DATA_MEMBER/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_DATA_MEMBERS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_PTR_IN_METHOD/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_ABSTRACT_DECL/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_DATA_MEMBER/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_DATA_MEMBERS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_REF_IN_METHOD/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_TEMPLATE_ARGS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BEFORE_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_BETWEEN_CLOSING_ANGLE_BRACKETS_IN_TEMPLATE_ARGS/@EntryValue" value="true" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_TEMPLATE_ARGS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_TEMPLATE_PARAMS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_DECLARATION_PARENTHESES/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/SPACE_WITHIN_EMPTY_BLOCKS/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_INVOCATION_LPAR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_INVOCATION_LPAR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_INVOCATION_RPAR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_DECLARATION_LPAR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_AFTER_DECLARATION_LPAR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_BEFORE_DECLARATION_RPAR/@EntryValue" value="false" type="bool" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_ARGUMENTS_STYLE/@EntryValue" value="WRAP_IF_LONG" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/WRAP_PARAMETERS_STYLE/@EntryValue" value="WRAP_IF_LONG" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/BREAK_TEMPLATE_DECLARATION/@EntryValue" value="LINE_BREAK" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/NAMESPACE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/FREE_BLOCK_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INVOCABLE_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/ANONYMOUS_METHOD_DECLARATION_BRACES/@EntryValue" value="END_OF_LINE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INITIALIZER_BRACES/@EntryValue" value="END_OF_LINE_NO_SPACE" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_STYLE/@EntryValue" value="Space" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/INDENT_SIZE/@EntryValue" value="4" type="int" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/CONTINUOUS_LINE_INDENT/@EntryValue" value="Double" type="string" />
+    <option name="/Default/CodeStyle/CodeFormatting/CppFormatting/TAB_WIDTH/@EntryValue" value="4" type="int" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
index 0000000..0b76fe5
--- /dev/null
+++ b/.idea/misc.xml
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CMakePythonSetting">
+    <option name="pythonIntegrationState" value="YES" />
+  </component>
+  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
+</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000..2f869e5
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Matam_HW3.iml" filepath="$PROJECT_DIR$/.idea/Matam_HW3.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..35eb1dd
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..01c2f22
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,15 @@
+cmake_minimum_required(VERSION 3.29)
+project(Matam_HW3)
+
+set(CMAKE_CXX_STANDARD 14)
+
+include_directories(.)
+
+add_executable(Matam_HW3
+    main.cpp
+    Person.cpp
+    Person.h
+    SortedList.h
+    Task.cpp
+    Task.h
+    TaskManager.h)
diff --git a/cmake-build-debug/.cmake/api/v1/query/cache-v2 b/cmake-build-debug/.cmake/api/v1/query/cache-v2
new file mode 100644
index 0000000..e69de29
diff --git a/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1 b/cmake-build-debug/.cmake/api/v1/query/cmakeFiles-v1
new file mode 100644
index 0000000..e69de29
diff --git a/cmake-build-debug/.cmake/api/v1/query/codemodel-v2 b/cmake-build-debug/.cmake/api/v1/query/codemodel-v2
new file mode 100644
index 0000000..e69de29
diff --git a/cmake-build-debug/.cmake/api/v1/query/toolchains-v1 b/cmake-build-debug/.cmake/api/v1/query/toolchains-v1
new file mode 100644
index 0000000..e69de29
diff --git a/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json
new file mode 100644
index 0000000..3340ebc
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/cache-v2-c2b892a1b412afc9a1ef.json
@@ -0,0 +1,1163 @@
+{
+	"entries" : 
+	[
+		{
+			"name" : "CMAKE_ADDR2LINE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "CMAKE_ADDR2LINE-NOTFOUND"
+		},
+		{
+			"name" : "CMAKE_AR",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/ar"
+		},
+		{
+			"name" : "CMAKE_BUILD_TYPE",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ..."
+				}
+			],
+			"type" : "STRING",
+			"value" : "Debug"
+		},
+		{
+			"name" : "CMAKE_CACHEFILE_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "This is the directory where this CMakeCache.txt was created"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug"
+		},
+		{
+			"name" : "CMAKE_CACHE_MAJOR_VERSION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Major version of cmake used to create the current loaded cache"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "3"
+		},
+		{
+			"name" : "CMAKE_CACHE_MINOR_VERSION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Minor version of cmake used to create the current loaded cache"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "29"
+		},
+		{
+			"name" : "CMAKE_CACHE_PATCH_VERSION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Patch version of cmake used to create the current loaded cache"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "6"
+		},
+		{
+			"name" : "CMAKE_COLOR_DIAGNOSTICS",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Enable colored diagnostics throughout."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "ON"
+		},
+		{
+			"name" : "CMAKE_COMMAND",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to CMake executable."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake"
+		},
+		{
+			"name" : "CMAKE_CPACK_COMMAND",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to cpack program executable."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack"
+		},
+		{
+			"name" : "CMAKE_CTEST_COMMAND",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to ctest program executable."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest"
+		},
+		{
+			"name" : "CMAKE_CXX_COMPILER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "CXX compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/c++"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-g"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-Os -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O3 -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_CXX_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the CXX compiler during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O2 -g -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_C_COMPILER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "C compiler"
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/cc"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-g"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-Os -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O3 -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_C_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the C compiler during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : "-O2 -g -DNDEBUG"
+		},
+		{
+			"name" : "CMAKE_DLLTOOL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "CMAKE_DLLTOOL-NOTFOUND"
+		},
+		{
+			"name" : "CMAKE_EXECUTABLE_FORMAT",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Executable file format"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "MACHO"
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXPORT_COMPILE_COMMANDS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Enable/Disable output of compile commands during generation."
+				}
+			],
+			"type" : "BOOL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_EXTRA_GENERATOR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of external makefile project generator."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_FIND_PACKAGE_REDIRECTS_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake."
+				}
+			],
+			"type" : "STATIC",
+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/pkgRedirects"
+		},
+		{
+			"name" : "CMAKE_GENERATOR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of generator."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "Ninja"
+		},
+		{
+			"name" : "CMAKE_GENERATOR_INSTANCE",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Generator instance identifier."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_GENERATOR_PLATFORM",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of generator platform."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_GENERATOR_TOOLSET",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Name of generator toolset."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_HOME_DIRECTORY",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Source directory with the top level CMakeLists.txt file for this project"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
+		},
+		{
+			"name" : "CMAKE_INSTALL_NAME_TOOL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/usr/bin/install_name_tool"
+		},
+		{
+			"name" : "CMAKE_INSTALL_PREFIX",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Install path prefix, prepended onto install directories."
+				}
+			],
+			"type" : "PATH",
+			"value" : "/usr/local"
+		},
+		{
+			"name" : "CMAKE_LINKER",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/ld"
+		},
+		{
+			"name" : "CMAKE_MAKE_PROGRAM",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "No help, variable specified on the command line."
+				}
+			],
+			"type" : "UNINITIALIZED",
+			"value" : "/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja"
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of modules during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_NM",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/nm"
+		},
+		{
+			"name" : "CMAKE_NUMBER_OF_MAKEFILES",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "number of local generators"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "1"
+		},
+		{
+			"name" : "CMAKE_OBJCOPY",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "CMAKE_OBJCOPY-NOTFOUND"
+		},
+		{
+			"name" : "CMAKE_OBJDUMP",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/objdump"
+		},
+		{
+			"name" : "CMAKE_OSX_ARCHITECTURES",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Build architectures for OSX"
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_OSX_DEPLOYMENT_TARGET",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Minimum OS X version to target for deployment (at runtime); newer APIs weak linked. Set to empty string for default value."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_OSX_SYSROOT",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "The product will be built against the headers and libraries located inside the indicated SDK."
+				}
+			],
+			"type" : "PATH",
+			"value" : "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
+		},
+		{
+			"name" : "CMAKE_PLATFORM_INFO_INITIALIZED",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Platform information initialized"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "1"
+		},
+		{
+			"name" : "CMAKE_PROJECT_DESCRIPTION",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_PROJECT_HOMEPAGE_URL",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_PROJECT_NAME",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "Matam_HW3"
+		},
+		{
+			"name" : "CMAKE_RANLIB",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/ranlib"
+		},
+		{
+			"name" : "CMAKE_READELF",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "CMAKE_READELF-NOTFOUND"
+		},
+		{
+			"name" : "CMAKE_ROOT",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to CMake installation."
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29"
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_SKIP_INSTALL_RPATH",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "If set, runtime paths are not added when installing shared libraries, but are added when building."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "NO"
+		},
+		{
+			"name" : "CMAKE_SKIP_RPATH",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "If set, runtime paths are not added when using shared libraries."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "NO"
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during all build types."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_DEBUG",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during DEBUG builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during MINSIZEREL builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELEASE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during RELEASE builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds."
+				}
+			],
+			"type" : "STRING",
+			"value" : ""
+		},
+		{
+			"name" : "CMAKE_STRIP",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/strip"
+		},
+		{
+			"name" : "CMAKE_TAPI",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "Path to a program."
+				}
+			],
+			"type" : "FILEPATH",
+			"value" : "/Library/Developer/CommandLineTools/usr/bin/tapi"
+		},
+		{
+			"name" : "CMAKE_UNAME",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "uname command"
+				}
+			],
+			"type" : "INTERNAL",
+			"value" : "/usr/bin/uname"
+		},
+		{
+			"name" : "CMAKE_VERBOSE_MAKEFILE",
+			"properties" : 
+			[
+				{
+					"name" : "ADVANCED",
+					"value" : "1"
+				},
+				{
+					"name" : "HELPSTRING",
+					"value" : "If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo."
+				}
+			],
+			"type" : "BOOL",
+			"value" : "FALSE"
+		},
+		{
+			"name" : "Matam_HW3_BINARY_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug"
+		},
+		{
+			"name" : "Matam_HW3_IS_TOP_LEVEL",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "ON"
+		},
+		{
+			"name" : "Matam_HW3_SOURCE_DIR",
+			"properties" : 
+			[
+				{
+					"name" : "HELPSTRING",
+					"value" : "Value Computed by CMake"
+				}
+			],
+			"type" : "STATIC",
+			"value" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
+		}
+	],
+	"kind" : "cache",
+	"version" : 
+	{
+		"major" : 2,
+		"minor" : 0
+	}
+}
diff --git a/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json
new file mode 100644
index 0000000..fe72958
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/cmakeFiles-v1-9ecd9743db4676d4803c.json
@@ -0,0 +1,1234 @@
+{
+	"inputs" : 
+	[
+		{
+			"path" : "CMakeLists.txt"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake"
+		},
+		{
+			"isCMake" : true,
+			"isExternal" : true,
+			"path" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in"
+		},
+		{
+			"isGenerated" : true,
+			"path" : "cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake"
+		}
+	],
+	"kind" : "cmakeFiles",
+	"paths" : 
+	{
+		"build" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug",
+		"source" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
+	},
+	"version" : 
+	{
+		"major" : 1,
+		"minor" : 0
+	}
+}
diff --git a/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json
new file mode 100644
index 0000000..4a41589
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/codemodel-v2-56ce83c7749e9e427dea.json
@@ -0,0 +1,60 @@
+{
+	"configurations" : 
+	[
+		{
+			"directories" : 
+			[
+				{
+					"build" : ".",
+					"jsonFile" : "directory-.-Debug-f5ebdc15457944623624.json",
+					"minimumCMakeVersion" : 
+					{
+						"string" : "3.29"
+					},
+					"projectIndex" : 0,
+					"source" : ".",
+					"targetIndexes" : 
+					[
+						0
+					]
+				}
+			],
+			"name" : "Debug",
+			"projects" : 
+			[
+				{
+					"directoryIndexes" : 
+					[
+						0
+					],
+					"name" : "Matam_HW3",
+					"targetIndexes" : 
+					[
+						0
+					]
+				}
+			],
+			"targets" : 
+			[
+				{
+					"directoryIndex" : 0,
+					"id" : "Matam_HW3::@6890427a1f51a3e7e1df",
+					"jsonFile" : "target-Matam_HW3-Debug-44b1d4437c129c88259c.json",
+					"name" : "Matam_HW3",
+					"projectIndex" : 0
+				}
+			]
+		}
+	],
+	"kind" : "codemodel",
+	"paths" : 
+	{
+		"build" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug",
+		"source" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3"
+	},
+	"version" : 
+	{
+		"major" : 2,
+		"minor" : 7
+	}
+}
diff --git a/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json
new file mode 100644
index 0000000..3a67af9
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/directory-.-Debug-f5ebdc15457944623624.json
@@ -0,0 +1,14 @@
+{
+	"backtraceGraph" : 
+	{
+		"commands" : [],
+		"files" : [],
+		"nodes" : []
+	},
+	"installers" : [],
+	"paths" : 
+	{
+		"build" : ".",
+		"source" : "."
+	}
+}
diff --git a/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json b/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json
new file mode 100644
index 0000000..19b68c3
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/index-2024-12-31T06-10-41-0267.json
@@ -0,0 +1,108 @@
+{
+	"cmake" : 
+	{
+		"generator" : 
+		{
+			"multiConfig" : false,
+			"name" : "Ninja"
+		},
+		"paths" : 
+		{
+			"cmake" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake",
+			"cpack" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack",
+			"ctest" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest",
+			"root" : "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29"
+		},
+		"version" : 
+		{
+			"isDirty" : false,
+			"major" : 3,
+			"minor" : 29,
+			"patch" : 6,
+			"string" : "3.29.6",
+			"suffix" : ""
+		}
+	},
+	"objects" : 
+	[
+		{
+			"jsonFile" : "codemodel-v2-56ce83c7749e9e427dea.json",
+			"kind" : "codemodel",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 7
+			}
+		},
+		{
+			"jsonFile" : "cache-v2-c2b892a1b412afc9a1ef.json",
+			"kind" : "cache",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 0
+			}
+		},
+		{
+			"jsonFile" : "cmakeFiles-v1-9ecd9743db4676d4803c.json",
+			"kind" : "cmakeFiles",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		},
+		{
+			"jsonFile" : "toolchains-v1-bb57840159693364638b.json",
+			"kind" : "toolchains",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		}
+	],
+	"reply" : 
+	{
+		"cache-v2" : 
+		{
+			"jsonFile" : "cache-v2-c2b892a1b412afc9a1ef.json",
+			"kind" : "cache",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 0
+			}
+		},
+		"cmakeFiles-v1" : 
+		{
+			"jsonFile" : "cmakeFiles-v1-9ecd9743db4676d4803c.json",
+			"kind" : "cmakeFiles",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		},
+		"codemodel-v2" : 
+		{
+			"jsonFile" : "codemodel-v2-56ce83c7749e9e427dea.json",
+			"kind" : "codemodel",
+			"version" : 
+			{
+				"major" : 2,
+				"minor" : 7
+			}
+		},
+		"toolchains-v1" : 
+		{
+			"jsonFile" : "toolchains-v1-bb57840159693364638b.json",
+			"kind" : "toolchains",
+			"version" : 
+			{
+				"major" : 1,
+				"minor" : 0
+			}
+		}
+	}
+}
diff --git a/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json b/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json
new file mode 100644
index 0000000..00af0e1
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/target-Matam_HW3-Debug-44b1d4437c129c88259c.json
@@ -0,0 +1,159 @@
+{
+	"artifacts" : 
+	[
+		{
+			"path" : "Matam_HW3"
+		}
+	],
+	"backtrace" : 1,
+	"backtraceGraph" : 
+	{
+		"commands" : 
+		[
+			"add_executable",
+			"include_directories"
+		],
+		"files" : 
+		[
+			"CMakeLists.txt"
+		],
+		"nodes" : 
+		[
+			{
+				"file" : 0
+			},
+			{
+				"command" : 0,
+				"file" : 0,
+				"line" : 8,
+				"parent" : 0
+			},
+			{
+				"command" : 1,
+				"file" : 0,
+				"line" : 6,
+				"parent" : 0
+			}
+		]
+	},
+	"compileGroups" : 
+	[
+		{
+			"compileCommandFragments" : 
+			[
+				{
+					"fragment" : "-g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics"
+				}
+			],
+			"includes" : 
+			[
+				{
+					"backtrace" : 2,
+					"path" : "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/."
+				}
+			],
+			"language" : "CXX",
+			"languageStandard" : 
+			{
+				"backtraces" : 
+				[
+					1
+				],
+				"standard" : "14"
+			},
+			"sourceIndexes" : 
+			[
+				0,
+				1,
+				4
+			]
+		}
+	],
+	"id" : "Matam_HW3::@6890427a1f51a3e7e1df",
+	"link" : 
+	{
+		"commandFragments" : 
+		[
+			{
+				"fragment" : "-g",
+				"role" : "flags"
+			},
+			{
+				"fragment" : "",
+				"role" : "flags"
+			}
+		],
+		"language" : "CXX"
+	},
+	"name" : "Matam_HW3",
+	"nameOnDisk" : "Matam_HW3",
+	"paths" : 
+	{
+		"build" : ".",
+		"source" : "."
+	},
+	"sourceGroups" : 
+	[
+		{
+			"name" : "Source Files",
+			"sourceIndexes" : 
+			[
+				0,
+				1,
+				4
+			]
+		},
+		{
+			"name" : "Header Files",
+			"sourceIndexes" : 
+			[
+				2,
+				3,
+				5,
+				6
+			]
+		}
+	],
+	"sources" : 
+	[
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "main.cpp",
+			"sourceGroupIndex" : 0
+		},
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "Person.cpp",
+			"sourceGroupIndex" : 0
+		},
+		{
+			"backtrace" : 1,
+			"path" : "Person.h",
+			"sourceGroupIndex" : 1
+		},
+		{
+			"backtrace" : 1,
+			"path" : "SortedList.h",
+			"sourceGroupIndex" : 1
+		},
+		{
+			"backtrace" : 1,
+			"compileGroupIndex" : 0,
+			"path" : "Task.cpp",
+			"sourceGroupIndex" : 0
+		},
+		{
+			"backtrace" : 1,
+			"path" : "Task.h",
+			"sourceGroupIndex" : 1
+		},
+		{
+			"backtrace" : 1,
+			"path" : "TaskManager.h",
+			"sourceGroupIndex" : 1
+		}
+	],
+	"type" : "EXECUTABLE"
+}
diff --git a/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json
new file mode 100644
index 0000000..11da80c
--- /dev/null
+++ b/cmake-build-debug/.cmake/api/v1/reply/toolchains-v1-bb57840159693364638b.json
@@ -0,0 +1,93 @@
+{
+	"kind" : "toolchains",
+	"toolchains" : 
+	[
+		{
+			"compiler" : 
+			{
+				"id" : "AppleClang",
+				"implicit" : 
+				{
+					"includeDirectories" : 
+					[
+						"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include",
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include",
+						"/Library/Developer/CommandLineTools/usr/include"
+					],
+					"linkDirectories" : 
+					[
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib",
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift"
+					],
+					"linkFrameworkDirectories" : 
+					[
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks"
+					],
+					"linkLibraries" : []
+				},
+				"path" : "/Library/Developer/CommandLineTools/usr/bin/cc",
+				"version" : "15.0.0.15000309"
+			},
+			"language" : "C",
+			"sourceFileExtensions" : 
+			[
+				"c",
+				"m"
+			]
+		},
+		{
+			"compiler" : 
+			{
+				"id" : "AppleClang",
+				"implicit" : 
+				{
+					"includeDirectories" : 
+					[
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1",
+						"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include",
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include",
+						"/Library/Developer/CommandLineTools/usr/include"
+					],
+					"linkDirectories" : 
+					[
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib",
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift"
+					],
+					"linkFrameworkDirectories" : 
+					[
+						"/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks"
+					],
+					"linkLibraries" : 
+					[
+						"c++"
+					]
+				},
+				"path" : "/Library/Developer/CommandLineTools/usr/bin/c++",
+				"version" : "15.0.0.15000309"
+			},
+			"language" : "CXX",
+			"sourceFileExtensions" : 
+			[
+				"C",
+				"M",
+				"c++",
+				"cc",
+				"cpp",
+				"cxx",
+				"mm",
+				"mpp",
+				"CPP",
+				"ixx",
+				"cppm",
+				"ccm",
+				"cxxm",
+				"c++m"
+			]
+		}
+	],
+	"version" : 
+	{
+		"major" : 1,
+		"minor" : 0
+	}
+}
diff --git a/cmake-build-debug/CMakeCache.txt b/cmake-build-debug/CMakeCache.txt
new file mode 100644
index 0000000..bfa03f3
--- /dev/null
+++ b/cmake-build-debug/CMakeCache.txt
@@ -0,0 +1,363 @@
+# This is the CMakeCache file.
+# For build in directory: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+# It was generated by CMake: /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake
+# You can edit this file to change values found and used by cmake.
+# If you do not want to change any of the values, simply exit the editor.
+# If you do want to change a value, simply edit, save, and exit the editor.
+# The syntax for the file is as follows:
+# KEY:TYPE=VALUE
+# KEY is the name of a variable in the cache.
+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
+# VALUE is the current value for the KEY.
+
+########################
+# EXTERNAL cache entries
+########################
+
+//Path to a program.
+CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND
+
+//Path to a program.
+CMAKE_AR:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ar
+
+//Choose the type of build, options are: None Debug Release RelWithDebInfo
+// MinSizeRel ...
+CMAKE_BUILD_TYPE:STRING=Debug
+
+//Enable colored diagnostics throughout.
+CMAKE_COLOR_DIAGNOSTICS:BOOL=ON
+
+//CXX compiler
+CMAKE_CXX_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/c++
+
+//Flags used by the CXX compiler during all build types.
+CMAKE_CXX_FLAGS:STRING=
+
+//Flags used by the CXX compiler during DEBUG builds.
+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the CXX compiler during MINSIZEREL builds.
+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the CXX compiler during RELEASE builds.
+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the CXX compiler during RELWITHDEBINFO builds.
+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//C compiler
+CMAKE_C_COMPILER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/cc
+
+//Flags used by the C compiler during all build types.
+CMAKE_C_FLAGS:STRING=
+
+//Flags used by the C compiler during DEBUG builds.
+CMAKE_C_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the C compiler during MINSIZEREL builds.
+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the C compiler during RELEASE builds.
+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the C compiler during RELWITHDEBINFO builds.
+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Path to a program.
+CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND
+
+//Flags used by the linker during all build types.
+CMAKE_EXE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during DEBUG builds.
+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during MINSIZEREL builds.
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during RELEASE builds.
+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during RELWITHDEBINFO builds.
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Enable/Disable output of compile commands during generation.
+CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=
+
+//Value Computed by CMake.
+CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/pkgRedirects
+
+//Path to a program.
+CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool
+
+//Install path prefix, prepended onto install directories.
+CMAKE_INSTALL_PREFIX:PATH=/usr/local
+
+//Path to a program.
+CMAKE_LINKER:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ld
+
+//No help, variable specified on the command line.
+CMAKE_MAKE_PROGRAM:UNINITIALIZED=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
+
+//Flags used by the linker during the creation of modules during
+// all build types.
+CMAKE_MODULE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of modules during
+// DEBUG builds.
+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of modules during
+// MINSIZEREL builds.
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of modules during
+// RELEASE builds.
+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of modules during
+// RELWITHDEBINFO builds.
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_NM:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/nm
+
+//Path to a program.
+CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND
+
+//Path to a program.
+CMAKE_OBJDUMP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/objdump
+
+//Build architectures for OSX
+CMAKE_OSX_ARCHITECTURES:STRING=
+
+//Minimum OS X version to target for deployment (at runtime); newer
+// APIs weak linked. Set to empty string for default value.
+CMAKE_OSX_DEPLOYMENT_TARGET:STRING=
+
+//The product will be built against the headers and libraries located
+// inside the indicated SDK.
+CMAKE_OSX_SYSROOT:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk
+
+//Value Computed by CMake
+CMAKE_PROJECT_DESCRIPTION:STATIC=
+
+//Value Computed by CMake
+CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
+
+//Value Computed by CMake
+CMAKE_PROJECT_NAME:STATIC=Matam_HW3
+
+//Path to a program.
+CMAKE_RANLIB:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/ranlib
+
+//Path to a program.
+CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND
+
+//Flags used by the linker during the creation of shared libraries
+// during all build types.
+CMAKE_SHARED_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during DEBUG builds.
+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during MINSIZEREL builds.
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during RELEASE builds.
+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during RELWITHDEBINFO builds.
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//If set, runtime paths are not added when installing shared libraries,
+// but are added when building.
+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
+
+//If set, runtime paths are not added when using shared libraries.
+CMAKE_SKIP_RPATH:BOOL=NO
+
+//Flags used by the linker during the creation of static libraries
+// during all build types.
+CMAKE_STATIC_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during DEBUG builds.
+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during MINSIZEREL builds.
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during RELEASE builds.
+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during RELWITHDEBINFO builds.
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_STRIP:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/strip
+
+//Path to a program.
+CMAKE_TAPI:FILEPATH=/Library/Developer/CommandLineTools/usr/bin/tapi
+
+//If this value is on, makefiles will be generated without the
+// .SILENT directive, and all commands will be echoed to the console
+// during the make.  This is useful for debugging only. With Visual
+// Studio IDE projects all commands are done without /nologo.
+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
+
+//Value Computed by CMake
+Matam_HW3_BINARY_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+
+//Value Computed by CMake
+Matam_HW3_IS_TOP_LEVEL:STATIC=ON
+
+//Value Computed by CMake
+Matam_HW3_SOURCE_DIR:STATIC=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
+
+
+########################
+# INTERNAL cache entries
+########################
+
+//ADVANCED property for variable: CMAKE_ADDR2LINE
+CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_AR
+CMAKE_AR-ADVANCED:INTERNAL=1
+//This is the directory where this CMakeCache.txt was created
+CMAKE_CACHEFILE_DIR:INTERNAL=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+//Major version of cmake used to create the current loaded cache
+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
+//Minor version of cmake used to create the current loaded cache
+CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
+//Patch version of cmake used to create the current loaded cache
+CMAKE_CACHE_PATCH_VERSION:INTERNAL=6
+//Path to CMake executable.
+CMAKE_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake
+//Path to cpack program executable.
+CMAKE_CPACK_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cpack
+//Path to ctest program executable.
+CMAKE_CTEST_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/ctest
+//ADVANCED property for variable: CMAKE_CXX_COMPILER
+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS
+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER
+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS
+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_DLLTOOL
+CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
+//Executable file format
+CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
+CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
+//Name of external makefile project generator.
+CMAKE_EXTRA_GENERATOR:INTERNAL=
+//Name of generator.
+CMAKE_GENERATOR:INTERNAL=Ninja
+//Generator instance identifier.
+CMAKE_GENERATOR_INSTANCE:INTERNAL=
+//Name of generator platform.
+CMAKE_GENERATOR_PLATFORM:INTERNAL=
+//Name of generator toolset.
+CMAKE_GENERATOR_TOOLSET:INTERNAL=
+//Source directory with the top level CMakeLists.txt file for this
+// project
+CMAKE_HOME_DIRECTORY:INTERNAL=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
+//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
+CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_LINKER
+CMAKE_LINKER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_NM
+CMAKE_NM-ADVANCED:INTERNAL=1
+//number of local generators
+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJCOPY
+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJDUMP
+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
+//Platform information initialized
+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RANLIB
+CMAKE_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_READELF
+CMAKE_READELF-ADVANCED:INTERNAL=1
+//Path to CMake installation.
+CMAKE_ROOT:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_RPATH
+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STRIP
+CMAKE_STRIP-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_TAPI
+CMAKE_TAPI-ADVANCED:INTERNAL=1
+//uname command
+CMAKE_UNAME:INTERNAL=/usr/bin/uname
+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
+
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake
new file mode 100644
index 0000000..8ce3f9e
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCCompiler.cmake
@@ -0,0 +1,80 @@
+set(CMAKE_C_COMPILER "/Library/Developer/CommandLineTools/usr/bin/cc")
+set(CMAKE_C_COMPILER_ARG1 "")
+set(CMAKE_C_COMPILER_ID "AppleClang")
+set(CMAKE_C_COMPILER_VERSION "15.0.0.15000309")
+set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_C_COMPILER_WRAPPER "")
+set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")
+set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert;c_std_17;c_std_23")
+set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
+set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
+set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
+set(CMAKE_C17_COMPILE_FEATURES "c_std_17")
+set(CMAKE_C23_COMPILE_FEATURES "c_std_23")
+
+set(CMAKE_C_PLATFORM_ID "Darwin")
+set(CMAKE_C_SIMULATE_ID "")
+set(CMAKE_C_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_C_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "/Library/Developer/CommandLineTools/usr/bin/ar")
+set(CMAKE_C_COMPILER_AR "")
+set(CMAKE_RANLIB "/Library/Developer/CommandLineTools/usr/bin/ranlib")
+set(CMAKE_C_COMPILER_RANLIB "")
+set(CMAKE_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
+set(CMAKE_LINKER_LINK "")
+set(CMAKE_LINKER_LLD "")
+set(CMAKE_C_COMPILER_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
+set(CMAKE_C_COMPILER_LINKER_ID "AppleClang")
+set(CMAKE_C_COMPILER_LINKER_VERSION 1053.12)
+set(CMAKE_C_COMPILER_LINKER_FRONTEND_VARIANT GNU)
+set(CMAKE_MT "")
+set(CMAKE_TAPI "/Library/Developer/CommandLineTools/usr/bin/tapi")
+set(CMAKE_COMPILER_IS_GNUCC )
+set(CMAKE_C_COMPILER_LOADED 1)
+set(CMAKE_C_COMPILER_WORKS TRUE)
+set(CMAKE_C_ABI_COMPILED TRUE)
+
+set(CMAKE_C_COMPILER_ENV_VAR "CC")
+
+set(CMAKE_C_COMPILER_ID_RUN 1)
+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
+set(CMAKE_C_LINKER_PREFERENCE 10)
+set(CMAKE_C_LINKER_DEPFILE_SUPPORTED FALSE)
+
+# Save compiler ABI information.
+set(CMAKE_C_SIZEOF_DATA_PTR "8")
+set(CMAKE_C_COMPILER_ABI "")
+set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_C_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_C_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_C_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
+endif()
+
+if(CMAKE_C_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include")
+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")
+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift")
+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks")
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake
new file mode 100644
index 0000000..e63d0df
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeCXXCompiler.cmake
@@ -0,0 +1,92 @@
+set(CMAKE_CXX_COMPILER "/Library/Developer/CommandLineTools/usr/bin/c++")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "AppleClang")
+set(CMAKE_CXX_COMPILER_VERSION "15.0.0.15000309")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "98")
+set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20;cxx_std_23")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")
+
+set(CMAKE_CXX_PLATFORM_ID "Darwin")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "GNU")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+
+set(CMAKE_AR "/Library/Developer/CommandLineTools/usr/bin/ar")
+set(CMAKE_CXX_COMPILER_AR "")
+set(CMAKE_RANLIB "/Library/Developer/CommandLineTools/usr/bin/ranlib")
+set(CMAKE_CXX_COMPILER_RANLIB "")
+set(CMAKE_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
+set(CMAKE_LINKER_LINK "")
+set(CMAKE_LINKER_LLD "")
+set(CMAKE_CXX_COMPILER_LINKER "/Library/Developer/CommandLineTools/usr/bin/ld")
+set(CMAKE_CXX_COMPILER_LINKER_ID "AppleClang")
+set(CMAKE_CXX_COMPILER_LINKER_VERSION 1053.12)
+set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT GNU)
+set(CMAKE_MT "")
+set(CMAKE_TAPI "/Library/Developer/CommandLineTools/usr/bin/tapi")
+set(CMAKE_COMPILER_IS_GNUCXX )
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang IN ITEMS C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED FALSE)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "")
+set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "c++")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks")
+set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR "")
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin
new file mode 100755
index 0000000..d8331b3
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_C.bin differ
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin
new file mode 100755
index 0000000..7659026
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CMakeDetermineCompilerABI_CXX.bin differ
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake b/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake
new file mode 100644
index 0000000..4ba5c26
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/3.29.6/CMakeSystem.cmake
@@ -0,0 +1,15 @@
+set(CMAKE_HOST_SYSTEM "Darwin-23.6.0")
+set(CMAKE_HOST_SYSTEM_NAME "Darwin")
+set(CMAKE_HOST_SYSTEM_VERSION "23.6.0")
+set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")
+
+
+
+set(CMAKE_SYSTEM "Darwin-23.6.0")
+set(CMAKE_SYSTEM_NAME "Darwin")
+set(CMAKE_SYSTEM_VERSION "23.6.0")
+set(CMAKE_SYSTEM_PROCESSOR "x86_64")
+
+set(CMAKE_CROSSCOMPILING "FALSE")
+
+set(CMAKE_SYSTEM_LOADED 1)
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
index 0000000..508c4cd
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.c
@@ -0,0 +1,895 @@
+#ifdef __cplusplus
+# error "A C++ compiler has been selected for C."
+#endif
+
+#if defined(__18CXX)
+# define ID_VOID_MAIN
+#endif
+#if defined(__CLASSIC_C__)
+/* cv-qualifiers did not exist in K&R C */
+# define const
+# define volatile
+#endif
+
+#if !defined(__has_include)
+/* If the compiler does not have __has_include, pretend the answer is
+   always no.  */
+#  define __has_include(x) 0
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_ID "GNU"
+# endif
+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
+     except that a few beta releases use the old format with V=2021.  */
+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+#  if defined(__INTEL_COMPILER_UPDATE)
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+#  else
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+#  endif
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
+   /* The third version component from --version is an update index,
+      but no macro is provided for it.  */
+#  define COMPILER_VERSION_PATCH DEC(0)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+# elif defined(__GNUG__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
+# define COMPILER_ID "IntelLLVM"
+#if defined(_MSC_VER)
+# define SIMULATE_ID "MSVC"
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_ID "GNU"
+#endif
+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
+ * VVVV is no smaller than the current year when a version is released.
+ */
+#if __INTEL_LLVM_COMPILER < 1000000L
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
+#else
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
+#endif
+#if defined(_MSC_VER)
+  /* _MSC_VER = VVRR */
+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#elif defined(__GNUG__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+#endif
+#if defined(__GNUC_MINOR__)
+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#endif
+#if defined(__GNUC_PATCHLEVEL__)
+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_C)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_C >= 0x5100
+   /* __SUNPRO_C = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# endif
+
+#elif defined(__HP_cc)
+# define COMPILER_ID "HP"
+  /* __HP_cc = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
+
+#elif defined(__DECC)
+# define COMPILER_ID "Compaq"
+  /* __DECC_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
+
+#elif defined(__IBMC__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__open_xl__) && defined(__clang__)
+# define COMPILER_ID "IBMClang"
+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
+
+
+#elif defined(__ibmxl__) && defined(__clang__)
+# define COMPILER_ID "XLClang"
+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
+
+
+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__NVCOMPILER)
+# define COMPILER_ID "NVHPC"
+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
+# if defined(__NVCOMPILER_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
+# endif
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(__clang__) && defined(__cray__)
+# define COMPILER_ID "CrayClang"
+# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
+# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
+# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
+
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__CLANG_FUJITSU)
+# define COMPILER_ID "FujitsuClang"
+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
+
+
+#elif defined(__FUJITSU)
+# define COMPILER_ID "Fujitsu"
+# if defined(__FCC_version__)
+#   define COMPILER_VERSION __FCC_version__
+# elif defined(__FCC_major__)
+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# endif
+# if defined(__fcc_version)
+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
+# elif defined(__FCC_VERSION)
+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
+# endif
+
+
+#elif defined(__ghs__)
+# define COMPILER_ID "GHS"
+/* __GHS_VERSION_NUMBER = VVVVRP */
+# ifdef __GHS_VERSION_NUMBER
+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# endif
+
+#elif defined(__TASKING__)
+# define COMPILER_ID "Tasking"
+  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
+  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
+# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
+
+#elif defined(__ORANGEC__)
+# define COMPILER_ID "OrangeC"
+# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
+# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
+# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
+
+#elif defined(__TINYC__)
+# define COMPILER_ID "TinyCC"
+
+#elif defined(__BCC__)
+# define COMPILER_ID "Bruce"
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
+# define COMPILER_ID "ARMClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
+
+#elif defined(__clang__) && defined(__ti__)
+# define COMPILER_ID "TIClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
+  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
+  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
+# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
+# define COMPILER_ID "LCC"
+# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
+# if defined(__LCC_MINOR__)
+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
+# endif
+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
+#  define SIMULATE_ID "GNU"
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#  if defined(__GNUC_PATCHLEVEL__)
+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#  endif
+# endif
+
+#elif defined(__GNUC__)
+# define COMPILER_ID "GNU"
+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(_ADI_COMPILER)
+# define COMPILER_ID "ADSP"
+#if defined(__VERSIONNUM__)
+  /* __VERSIONNUM__ = 0xVVRRPPTT */
+#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
+#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
+#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
+#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__) && defined(__ICCARM__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
+# define COMPILER_ID "SDCC"
+# if defined(__SDCC_VERSION_MAJOR)
+#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
+#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
+#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
+# else
+  /* SDCC = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__MSYS__)
+# define PLATFORM_ID "MSYS"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# elif defined(__VXWORKS__)
+#  define PLATFORM_ID "VxWorks"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#elif defined(__INTEGRITY)
+# if defined(INT_178B)
+#  define PLATFORM_ID "Integrity178"
+
+# else /* regular Integrity */
+#  define PLATFORM_ID "Integrity"
+# endif
+
+# elif defined(_ADI_COMPILER)
+#  define PLATFORM_ID "ADSP"
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_ARM64EC)
+#  define ARCHITECTURE_ID "ARM64EC"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCRX__)
+#  define ARCHITECTURE_ID "RX"
+
+# elif defined(__ICCRH850__)
+#  define ARCHITECTURE_ID "RH850"
+
+# elif defined(__ICCRL78__)
+#  define ARCHITECTURE_ID "RL78"
+
+# elif defined(__ICCRISCV__)
+#  define ARCHITECTURE_ID "RISCV"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# elif defined(__ICC430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__ICCV850__)
+#  define ARCHITECTURE_ID "V850"
+
+# elif defined(__ICC8051__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__ICCSTM8__)
+#  define ARCHITECTURE_ID "STM8"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__ghs__)
+# if defined(__PPC64__)
+#  define ARCHITECTURE_ID "PPC64"
+
+# elif defined(__ppc__)
+#  define ARCHITECTURE_ID "PPC"
+
+# elif defined(__ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__x86_64__)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(__i386__)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__clang__) && defined(__ti__)
+# if defined(__ARM_ARCH)
+#  define ARCHITECTURE_ID "Arm"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__TI_COMPILER_VERSION__)
+# if defined(__TI_ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__MSP430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__TMS320C28XX__)
+#  define ARCHITECTURE_ID "TMS320C28x"
+
+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
+#  define ARCHITECTURE_ID "TMS320C6x"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+# elif defined(__ADSPSHARC__)
+#  define ARCHITECTURE_ID "SHARC"
+
+# elif defined(__ADSPBLACKFIN__)
+#  define ARCHITECTURE_ID "Blackfin"
+
+#elif defined(__TASKING__)
+
+# if defined(__CTC__) || defined(__CPTC__)
+#  define ARCHITECTURE_ID "TriCore"
+
+# elif defined(__CMCS__)
+#  define ARCHITECTURE_ID "MCS"
+
+# elif defined(__CARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__CARC__)
+#  define ARCHITECTURE_ID "ARC"
+
+# elif defined(__C51__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__CPCP__)
+#  define ARCHITECTURE_ID "PCP"
+
+# else
+#  define ARCHITECTURE_ID ""
+# endif
+
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number. */
+#ifdef COMPILER_VERSION
+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
+
+/* Construct a string literal encoding the version number components. */
+#elif defined(COMPILER_VERSION_MAJOR)
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#elif defined(COMPILER_VERSION_INTERNAL_STR)
+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+#if !defined(__STDC__) && !defined(__clang__)
+# if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)
+#  define C_VERSION "90"
+# else
+#  define C_VERSION
+# endif
+#elif __STDC_VERSION__ > 201710L
+# define C_VERSION "23"
+#elif __STDC_VERSION__ >= 201710L
+# define C_VERSION "17"
+#elif __STDC_VERSION__ >= 201000L
+# define C_VERSION "11"
+#elif __STDC_VERSION__ >= 199901L
+# define C_VERSION "99"
+#else
+# define C_VERSION "90"
+#endif
+const char* info_language_standard_default =
+  "INFO" ":" "standard_default[" C_VERSION "]";
+
+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
+     defined(__TI_COMPILER_VERSION__)) &&                                     \
+  !defined(__STRICT_ANSI__)
+  "ON"
+#else
+  "OFF"
+#endif
+"]";
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef ID_VOID_MAIN
+void main() {}
+#else
+# if defined(__CLASSIC_C__)
+int main(argc, argv) int argc; char *argv[];
+# else
+int main(int argc, char* argv[])
+# endif
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+  require += info_arch[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+  require += info_cray[argc];
+#endif
+  require += info_language_standard_default[argc];
+  require += info_language_extensions_default[argc];
+  (void)argv;
+  return require;
+}
+#endif
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o
new file mode 100644
index 0000000..12edb26
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o differ
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
index 0000000..9a5e8f8
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.cpp
@@ -0,0 +1,878 @@
+/* This source file must have a .cpp extension so that all C++ compilers
+   recognize the extension without flags.  Borland does not know .cxx for
+   example.  */
+#ifndef __cplusplus
+# error "A C compiler has been selected for C++."
+#endif
+
+#if !defined(__has_include)
+/* If the compiler does not have __has_include, pretend the answer is
+   always no.  */
+#  define __has_include(x) 0
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_ID "GNU"
+# endif
+  /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,
+     except that a few beta releases use the old format with V=2021.  */
+# if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+#  if defined(__INTEL_COMPILER_UPDATE)
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+#  else
+#   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+#  endif
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)
+#  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)
+   /* The third version component from --version is an update index,
+      but no macro is provided for it.  */
+#  define COMPILER_VERSION_PATCH DEC(0)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+   /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+# elif defined(__GNUG__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)
+# define COMPILER_ID "IntelLLVM"
+#if defined(_MSC_VER)
+# define SIMULATE_ID "MSVC"
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_ID "GNU"
+#endif
+/* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and
+ * later.  Look for 6 digit vs. 8 digit version number to decide encoding.
+ * VVVV is no smaller than the current year when a version is released.
+ */
+#if __INTEL_LLVM_COMPILER < 1000000L
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)
+#else
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)
+#endif
+#if defined(_MSC_VER)
+  /* _MSC_VER = VVRR */
+# define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+#endif
+#if defined(__GNUC__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#elif defined(__GNUG__)
+# define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+#endif
+#if defined(__GNUC_MINOR__)
+# define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#endif
+#if defined(__GNUC_PATCHLEVEL__)
+# define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_CC)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_CC >= 0x5100
+   /* __SUNPRO_CC = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# endif
+
+#elif defined(__HP_aCC)
+# define COMPILER_ID "HP"
+  /* __HP_aCC = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
+
+#elif defined(__DECCXX)
+# define COMPILER_ID "Compaq"
+  /* __DECCXX_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
+
+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__open_xl__) && defined(__clang__)
+# define COMPILER_ID "IBMClang"
+# define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)
+# define COMPILER_VERSION_MINOR DEC(__open_xl_release__)
+# define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)
+
+
+#elif defined(__ibmxl__) && defined(__clang__)
+# define COMPILER_ID "XLClang"
+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
+
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__NVCOMPILER)
+# define COMPILER_ID "NVHPC"
+# define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)
+# define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)
+# if defined(__NVCOMPILER_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)
+# endif
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(__clang__) && defined(__cray__)
+# define COMPILER_ID "CrayClang"
+# define COMPILER_VERSION_MAJOR DEC(__cray_major__)
+# define COMPILER_VERSION_MINOR DEC(__cray_minor__)
+# define COMPILER_VERSION_PATCH DEC(__cray_patchlevel__)
+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
+
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__CLANG_FUJITSU)
+# define COMPILER_ID "FujitsuClang"
+# define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+# define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+# define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# define COMPILER_VERSION_INTERNAL_STR __clang_version__
+
+
+#elif defined(__FUJITSU)
+# define COMPILER_ID "Fujitsu"
+# if defined(__FCC_version__)
+#   define COMPILER_VERSION __FCC_version__
+# elif defined(__FCC_major__)
+#   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)
+#   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)
+#   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)
+# endif
+# if defined(__fcc_version)
+#   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)
+# elif defined(__FCC_VERSION)
+#   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)
+# endif
+
+
+#elif defined(__ghs__)
+# define COMPILER_ID "GHS"
+/* __GHS_VERSION_NUMBER = VVVVRP */
+# ifdef __GHS_VERSION_NUMBER
+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# endif
+
+#elif defined(__TASKING__)
+# define COMPILER_ID "Tasking"
+  # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)
+  # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)
+# define COMPILER_VERSION_INTERNAL DEC(__VERSION__)
+
+#elif defined(__ORANGEC__)
+# define COMPILER_ID "OrangeC"
+# define COMPILER_VERSION_MAJOR DEC(__ORANGEC_MAJOR__)
+# define COMPILER_VERSION_MINOR DEC(__ORANGEC_MINOR__)
+# define COMPILER_VERSION_PATCH DEC(__ORANGEC_PATCHLEVEL__)
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
+# define COMPILER_ID "ARMClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION/100   % 100)
+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
+
+#elif defined(__clang__) && defined(__ti__)
+# define COMPILER_ID "TIClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ti_major__)
+  # define COMPILER_VERSION_MINOR DEC(__ti_minor__)
+  # define COMPILER_VERSION_PATCH DEC(__ti_patchlevel__)
+# define COMPILER_VERSION_INTERNAL DEC(__ti_version__)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))
+# define COMPILER_ID "LCC"
+# define COMPILER_VERSION_MAJOR DEC(__LCC__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__LCC__ % 100)
+# if defined(__LCC_MINOR__)
+#  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)
+# endif
+# if defined(__GNUC__) && defined(__GNUC_MINOR__)
+#  define SIMULATE_ID "GNU"
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+#  if defined(__GNUC_PATCHLEVEL__)
+#   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+#  endif
+# endif
+
+#elif defined(__GNUC__) || defined(__GNUG__)
+# define COMPILER_ID "GNU"
+# if defined(__GNUC__)
+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(_ADI_COMPILER)
+# define COMPILER_ID "ADSP"
+#if defined(__VERSIONNUM__)
+  /* __VERSIONNUM__ = 0xVVRRPPTT */
+#  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)
+#  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)
+#  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)
+#  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__) && defined(__ICCARM__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__MSYS__)
+# define PLATFORM_ID "MSYS"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# elif defined(__VXWORKS__)
+#  define PLATFORM_ID "VxWorks"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#elif defined(__INTEGRITY)
+# if defined(INT_178B)
+#  define PLATFORM_ID "Integrity178"
+
+# else /* regular Integrity */
+#  define PLATFORM_ID "Integrity"
+# endif
+
+# elif defined(_ADI_COMPILER)
+#  define PLATFORM_ID "ADSP"
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_ARM64EC)
+#  define ARCHITECTURE_ID "ARM64EC"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCRX__)
+#  define ARCHITECTURE_ID "RX"
+
+# elif defined(__ICCRH850__)
+#  define ARCHITECTURE_ID "RH850"
+
+# elif defined(__ICCRL78__)
+#  define ARCHITECTURE_ID "RL78"
+
+# elif defined(__ICCRISCV__)
+#  define ARCHITECTURE_ID "RISCV"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# elif defined(__ICC430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__ICCV850__)
+#  define ARCHITECTURE_ID "V850"
+
+# elif defined(__ICC8051__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__ICCSTM8__)
+#  define ARCHITECTURE_ID "STM8"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__ghs__)
+# if defined(__PPC64__)
+#  define ARCHITECTURE_ID "PPC64"
+
+# elif defined(__ppc__)
+#  define ARCHITECTURE_ID "PPC"
+
+# elif defined(__ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__x86_64__)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(__i386__)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__clang__) && defined(__ti__)
+# if defined(__ARM_ARCH)
+#  define ARCHITECTURE_ID "Arm"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__TI_COMPILER_VERSION__)
+# if defined(__TI_ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__MSP430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__TMS320C28XX__)
+#  define ARCHITECTURE_ID "TMS320C28x"
+
+# elif defined(__TMS320C6X__) || defined(_TMS320C6X)
+#  define ARCHITECTURE_ID "TMS320C6x"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+# elif defined(__ADSPSHARC__)
+#  define ARCHITECTURE_ID "SHARC"
+
+# elif defined(__ADSPBLACKFIN__)
+#  define ARCHITECTURE_ID "Blackfin"
+
+#elif defined(__TASKING__)
+
+# if defined(__CTC__) || defined(__CPTC__)
+#  define ARCHITECTURE_ID "TriCore"
+
+# elif defined(__CMCS__)
+#  define ARCHITECTURE_ID "MCS"
+
+# elif defined(__CARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__CARC__)
+#  define ARCHITECTURE_ID "ARC"
+
+# elif defined(__C51__)
+#  define ARCHITECTURE_ID "8051"
+
+# elif defined(__CPCP__)
+#  define ARCHITECTURE_ID "PCP"
+
+# else
+#  define ARCHITECTURE_ID ""
+# endif
+
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number. */
+#ifdef COMPILER_VERSION
+char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";
+
+/* Construct a string literal encoding the version number components. */
+#elif defined(COMPILER_VERSION_MAJOR)
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#elif defined(COMPILER_VERSION_INTERNAL_STR)
+char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
+#  if defined(__INTEL_CXX11_MODE__)
+#    if defined(__cpp_aggregate_nsdmi)
+#      define CXX_STD 201402L
+#    else
+#      define CXX_STD 201103L
+#    endif
+#  else
+#    define CXX_STD 199711L
+#  endif
+#elif defined(_MSC_VER) && defined(_MSVC_LANG)
+#  define CXX_STD _MSVC_LANG
+#else
+#  define CXX_STD __cplusplus
+#endif
+
+const char* info_language_standard_default = "INFO" ":" "standard_default["
+#if CXX_STD > 202002L
+  "23"
+#elif CXX_STD > 201703L
+  "20"
+#elif CXX_STD >= 201703L
+  "17"
+#elif CXX_STD >= 201402L
+  "14"
+#elif CXX_STD >= 201103L
+  "11"
+#else
+  "98"
+#endif
+"]";
+
+const char* info_language_extensions_default = "INFO" ":" "extensions_default["
+#if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \
+     defined(__TI_COMPILER_VERSION__)) &&                                     \
+  !defined(__STRICT_ANSI__)
+  "ON"
+#else
+  "OFF"
+#endif
+"]";
+
+/*--------------------------------------------------------------------------*/
+
+int main(int argc, char* argv[])
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+  require += info_arch[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXT_COMPUTE_LINUX_TARGET)
+  require += info_cray[argc];
+#endif
+  require += info_language_standard_default[argc];
+  require += info_language_extensions_default[argc];
+  (void)argv;
+  return require;
+}
diff --git a/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o
new file mode 100644
index 0000000..4678bba
Binary files /dev/null and b/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o differ
diff --git a/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
new file mode 100644
index 0000000..23fe12a
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/CMakeConfigureLog.yaml
@@ -0,0 +1,433 @@
+
+---
+events:
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake:205 (message)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      The system is: Darwin - 23.6.0 - x86_64
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
+      Compiler: /Library/Developer/CommandLineTools/usr/bin/cc 
+      Build flags: 
+      Id flags:  
+      
+      The output was:
+      1
+      ld: library 'System' not found
+      clang: error: linker command failed with exit code 1 (use -v to see invocation)
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
+      Compiler: /Library/Developer/CommandLineTools/usr/bin/cc 
+      Build flags: 
+      Id flags: -c 
+      
+      The output was:
+      0
+      
+      
+      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.o"
+      
+      The C compiler identification is AppleClang, found in:
+        /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdC/CMakeCCompilerId.o
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
+      Compiler: /Library/Developer/CommandLineTools/usr/bin/c++ 
+      Build flags: 
+      Id flags:  
+      
+      The output was:
+      1
+      ld: library 'c++' not found
+      clang: error: linker command failed with exit code 1 (use -v to see invocation)
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
+      Compiler: /Library/Developer/CommandLineTools/usr/bin/c++ 
+      Build flags: 
+      Id flags: -c 
+      
+      The output was:
+      0
+      
+      
+      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.o"
+      
+      The CXX compiler identification is AppleClang, found in:
+        /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/3.29.6/CompilerIdCXX/CMakeCXXCompilerId.o
+      
+  -
+    kind: "try_compile-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:67 (try_compile)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    checks:
+      - "Detecting C compiler ABI info"
+    directories:
+      source: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy"
+      binary: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy"
+    cmakeVariables:
+      CMAKE_C_FLAGS: ""
+      CMAKE_C_FLAGS_DEBUG: "-g"
+      CMAKE_EXE_LINKER_FLAGS: ""
+      CMAKE_OSX_ARCHITECTURES: ""
+      CMAKE_OSX_DEPLOYMENT_TARGET: ""
+      CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
+    buildResult:
+      variable: "CMAKE_C_ABI_COMPILED"
+      cached: true
+      stdout: |
+        Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy'
+        
+        Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_5df0d
+        [1/2] /Library/Developer/CommandLineTools/usr/bin/cc   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl,-v -MD -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c
+        Apple clang version 15.0.0 (clang-1500.3.9.4)
+        Target: x86_64-apple-darwin23.6.0
+        Thread model: posix
+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
+        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
+         "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -x c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c
+        clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0
+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"
+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"
+        #include "..." search starts here:
+        #include <...> search starts here:
+         /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include
+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include
+         /Library/Developer/CommandLineTools/usr/include
+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)
+        End of search list.
+        [2/2] : && /Library/Developer/CommandLineTools/usr/bin/cc -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -v -Wl,-v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -o cmTC_5df0d   && :
+        Apple clang version 15.0.0 (clang-1500.3.9.4)
+        Target: x86_64-apple-darwin23.6.0
+        Thread model: posix
+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
+         "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_5df0d -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a
+        @(#)PROGRAM:ld PROJECT:ld-1053.12
+        BUILD 15:44:24 Feb  3 2024
+        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
+        will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
+        LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
+        TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
+        Library search paths:
+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib
+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift
+        Framework search paths:
+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks
+        
+      exitCode: 0
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:137 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed C implicit include dir info: rv=done
+        found start of include info
+        found start of implicit include info
+          add: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
+          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
+          add: [/Library/Developer/CommandLineTools/usr/include]
+        end of search list found
+        collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
+        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
+        collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
+        implicit include dirs: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include]
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:173 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed C implicit link information:
+        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
+        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?))("|,| |$)]
+        ignore line: [Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy']
+        ignore line: []
+        ignore line: [Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_5df0d]
+        ignore line: [[1/2] /Library/Developer/CommandLineTools/usr/bin/cc   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl -v -MD -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c]
+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
+        ignore line: [Target: x86_64-apple-darwin23.6.0]
+        ignore line: [Thread model: posix]
+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
+        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
+        ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-jT4Afy -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -x c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c]
+        ignore line: [clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0]
+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"]
+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"]
+        ignore line: [#include "..." search starts here:]
+        ignore line: [#include <...> search starts here:]
+        ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
+        ignore line: [ /Library/Developer/CommandLineTools/usr/include]
+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)]
+        ignore line: [End of search list.]
+        ignore line: [[2/2] : && /Library/Developer/CommandLineTools/usr/bin/cc -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl -search_paths_first -Wl -headerpad_max_install_names -v -Wl -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -o cmTC_5df0d   && :]
+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
+        ignore line: [Target: x86_64-apple-darwin23.6.0]
+        ignore line: [Thread model: posix]
+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
+        link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_5df0d -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
+          arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
+          arg [-demangle] ==> ignore
+          arg [-lto_library] ==> ignore, skip following value
+          arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
+          arg [-dynamic] ==> ignore
+          arg [-arch] ==> ignore
+          arg [x86_64] ==> ignore
+          arg [-platform_version] ==> ignore
+          arg [macos] ==> ignore
+          arg [14.0.0] ==> ignore
+          arg [14.4] ==> ignore
+          arg [-syslibroot] ==> ignore
+          arg [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk] ==> ignore
+          arg [-o] ==> ignore
+          arg [cmTC_5df0d] ==> ignore
+          arg [-search_paths_first] ==> ignore
+          arg [-headerpad_max_install_names] ==> ignore
+          arg [-v] ==> ignore
+          arg [CMakeFiles/cmTC_5df0d.dir/CMakeCCompilerABI.c.o] ==> ignore
+          arg [-lSystem] ==> lib [System]
+          arg [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
+        linker tool for 'C': /Library/Developer/CommandLineTools/usr/bin/ld
+        Library search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
+        Framework search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
+        remove lib [System]
+        remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib]
+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
+        collapse framework dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
+        implicit libs: []
+        implicit objs: []
+        implicit dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
+        implicit fwks: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:210 (cmake_determine_linker_id)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Running the C compiler's linker: "/Library/Developer/CommandLineTools/usr/bin/ld" "-v"
+      @(#)PROGRAM:ld PROJECT:ld-1053.12
+      BUILD 15:44:24 Feb  3 2024
+      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
+      will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
+      LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
+      TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
+  -
+    kind: "try_compile-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:67 (try_compile)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    checks:
+      - "Detecting CXX compiler ABI info"
+    directories:
+      source: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP"
+      binary: "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP"
+    cmakeVariables:
+      CMAKE_CXX_FLAGS: ""
+      CMAKE_CXX_FLAGS_DEBUG: "-g"
+      CMAKE_CXX_SCAN_FOR_MODULES: "OFF"
+      CMAKE_EXE_LINKER_FLAGS: ""
+      CMAKE_OSX_ARCHITECTURES: ""
+      CMAKE_OSX_DEPLOYMENT_TARGET: ""
+      CMAKE_OSX_SYSROOT: "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk"
+    buildResult:
+      variable: "CMAKE_CXX_ABI_COMPILED"
+      cached: true
+      stdout: |
+        Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP'
+        
+        Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_1e587
+        [1/2] /Library/Developer/CommandLineTools/usr/bin/c++   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl,-v -MD -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp
+        Apple clang version 15.0.0 (clang-1500.3.9.4)
+        Target: x86_64-apple-darwin23.6.0
+        Thread model: posix
+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
+        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
+         "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp
+        clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0
+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"
+        ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"
+        #include "..." search starts here:
+        #include <...> search starts here:
+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1
+         /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include
+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include
+         /Library/Developer/CommandLineTools/usr/include
+         /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)
+        End of search list.
+        [2/2] : && /Library/Developer/CommandLineTools/usr/bin/c++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -v -Wl,-v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_1e587   && :
+        Apple clang version 15.0.0 (clang-1500.3.9.4)
+        Target: x86_64-apple-darwin23.6.0
+        Thread model: posix
+        InstalledDir: /Library/Developer/CommandLineTools/usr/bin
+         "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_1e587 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a
+        @(#)PROGRAM:ld PROJECT:ld-1053.12
+        BUILD 15:44:24 Feb  3 2024
+        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
+        will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
+        LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
+        TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
+        Library search paths:
+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib
+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift
+        Framework search paths:
+        	/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks
+        
+      exitCode: 0
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:137 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed CXX implicit include dir info: rv=done
+        found start of include info
+        found start of implicit include info
+          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
+          add: [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
+          add: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
+          add: [/Library/Developer/CommandLineTools/usr/include]
+        end of search list found
+        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
+        collapse include dir [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include] ==> [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
+        collapse include dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
+        collapse include dir [/Library/Developer/CommandLineTools/usr/include] ==> [/Library/Developer/CommandLineTools/usr/include]
+        implicit include dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1;/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include;/Library/Developer/CommandLineTools/usr/include]
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:173 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Parsed CXX implicit link information:
+        link line regex: [^( *|.*[/\\])(ld[0-9]*(\\.[a-z]+)?|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
+        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(\\.[a-z]+)?))("|,| |$)]
+        ignore line: [Change Dir: '/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP']
+        ignore line: []
+        ignore line: [Run Build Command(s): /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -v cmTC_1e587]
+        ignore line: [[1/2] /Library/Developer/CommandLineTools/usr/bin/c++   -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics   -v -Wl -v -MD -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp]
+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
+        ignore line: [Target: x86_64-apple-darwin23.6.0]
+        ignore line: [Thread model: posix]
+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
+        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
+        ignore line: [ "/Library/Developer/CommandLineTools/usr/bin/clang" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -mrelax-all --mrelax-relocations -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=all -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=14.4 -fvisibility-inlines-hidden-static-local-var -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1053.12 -v -fcoverage-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0 -dependency-file CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/CMakeScratch/TryCompile-158hdP -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -mllvm -disable-aligned-alloc-awareness=1 -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -x c++ /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp]
+        ignore line: [clang -cc1 version 15.0.0 (clang-1500.3.9.4) default target x86_64-apple-darwin23.6.0]
+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/local/include"]
+        ignore line: [ignoring nonexistent directory "/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/Library/Frameworks"]
+        ignore line: [#include "..." search starts here:]
+        ignore line: [#include <...> search starts here:]
+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include/c++/v1]
+        ignore line: [ /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include]
+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/include]
+        ignore line: [ /Library/Developer/CommandLineTools/usr/include]
+        ignore line: [ /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks (framework directory)]
+        ignore line: [End of search list.]
+        ignore line: [[2/2] : && /Library/Developer/CommandLineTools/usr/bin/c++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -Wl -search_paths_first -Wl -headerpad_max_install_names -v -Wl -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_1e587   && :]
+        ignore line: [Apple clang version 15.0.0 (clang-1500.3.9.4)]
+        ignore line: [Target: x86_64-apple-darwin23.6.0]
+        ignore line: [Thread model: posix]
+        ignore line: [InstalledDir: /Library/Developer/CommandLineTools/usr/bin]
+        link line: [ "/Library/Developer/CommandLineTools/usr/bin/ld" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch x86_64 -platform_version macos 14.0.0 14.4 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -o cmTC_1e587 -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
+          arg [/Library/Developer/CommandLineTools/usr/bin/ld] ==> ignore
+          arg [-demangle] ==> ignore
+          arg [-lto_library] ==> ignore, skip following value
+          arg [/Library/Developer/CommandLineTools/usr/lib/libLTO.dylib] ==> skip value of -lto_library
+          arg [-dynamic] ==> ignore
+          arg [-arch] ==> ignore
+          arg [x86_64] ==> ignore
+          arg [-platform_version] ==> ignore
+          arg [macos] ==> ignore
+          arg [14.0.0] ==> ignore
+          arg [14.4] ==> ignore
+          arg [-syslibroot] ==> ignore
+          arg [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk] ==> ignore
+          arg [-o] ==> ignore
+          arg [cmTC_1e587] ==> ignore
+          arg [-search_paths_first] ==> ignore
+          arg [-headerpad_max_install_names] ==> ignore
+          arg [-v] ==> ignore
+          arg [CMakeFiles/cmTC_1e587.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
+          arg [-lc++] ==> lib [c++]
+          arg [-lSystem] ==> lib [System]
+          arg [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a] ==> lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
+        linker tool for 'CXX': /Library/Developer/CommandLineTools/usr/bin/ld
+        Library search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
+        Framework search paths: [;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
+        remove lib [System]
+        remove lib [/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/lib/darwin/libclang_rt.osx.a]
+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib]
+        collapse library dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
+        collapse framework dir [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks] ==> [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
+        implicit libs: [c++]
+        implicit objs: []
+        implicit dirs: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib;/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/usr/lib/swift]
+        implicit fwks: [/Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk/System/Library/Frameworks]
+      
+      
+  -
+    kind: "message-v1"
+    backtrace:
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake:40 (message)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake:210 (cmake_determine_linker_id)"
+      - "/Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
+      - "CMakeLists.txt:2 (project)"
+    message: |
+      Running the CXX compiler's linker: "/Library/Developer/CommandLineTools/usr/bin/ld" "-v"
+      @(#)PROGRAM:ld PROJECT:ld-1053.12
+      BUILD 15:44:24 Feb  3 2024
+      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
+      will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
+      LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
+      TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.3.2.2)
+...
diff --git a/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
new file mode 100644
index 0000000..43977dc
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/TargetDirectories.txt
@@ -0,0 +1,3 @@
+/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/Matam_HW3.dir
+/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/edit_cache.dir
+/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/CMakeFiles/rebuild_cache.dir
diff --git a/cmake-build-debug/CMakeFiles/clion-Debug-log.txt b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
new file mode 100644
index 0000000..f12a101
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/clion-Debug-log.txt
@@ -0,0 +1,16 @@
+/Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -G Ninja -S /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+-- The C compiler identification is AppleClang 15.0.0.15000309
+-- The CXX compiler identification is AppleClang 15.0.0.15000309
+-- Detecting C compiler ABI info
+-- Detecting C compiler ABI info - done
+-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc - skipped
+-- Detecting C compile features
+-- Detecting C compile features - done
+-- Detecting CXX compiler ABI info
+-- Detecting CXX compiler ABI info - done
+-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ - skipped
+-- Detecting CXX compile features
+-- Detecting CXX compile features - done
+-- Configuring done (2.0s)
+-- Generating done (0.0s)
+-- Build files have been written to: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
diff --git a/cmake-build-debug/CMakeFiles/clion-environment.txt b/cmake-build-debug/CMakeFiles/clion-environment.txt
new file mode 100644
index 0000000..a84bfe2
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/clion-environment.txt
@@ -0,0 +1,4 @@
+ToolSet: 1.0 (local)Ninja: 1.12.0@/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
+Options: 
+
+Options:-DCMAKE_MAKE_PROGRAM=/Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja
\ No newline at end of file
diff --git a/cmake-build-debug/CMakeFiles/cmake.check_cache b/cmake-build-debug/CMakeFiles/cmake.check_cache
new file mode 100644
index 0000000..3dccd73
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/cmake.check_cache
@@ -0,0 +1 @@
+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
diff --git a/cmake-build-debug/CMakeFiles/rules.ninja b/cmake-build-debug/CMakeFiles/rules.ninja
new file mode 100644
index 0000000..20b58b9
--- /dev/null
+++ b/cmake-build-debug/CMakeFiles/rules.ninja
@@ -0,0 +1,64 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Ninja" Generator, CMake Version 3.29
+
+# This file contains all the rules used to get the outputs files
+# built from the input files.
+# It is included in the main 'build.ninja'.
+
+# =============================================================================
+# Project: Matam_HW3
+# Configurations: Debug
+# =============================================================================
+# =============================================================================
+
+#############################################
+# Rule for compiling CXX files.
+
+rule CXX_COMPILER__Matam_HW3_unscanned_Debug
+  depfile = $DEP_FILE
+  deps = gcc
+  command = ${LAUNCHER}${CODE_CHECK}/Library/Developer/CommandLineTools/usr/bin/c++ $DEFINES $INCLUDES $FLAGS -MD -MT $out -MF $DEP_FILE -o $out -c $in
+  description = Building CXX object $out
+
+
+#############################################
+# Rule for linking CXX executable.
+
+rule CXX_EXECUTABLE_LINKER__Matam_HW3_Debug
+  command = $PRE_LINK && /Library/Developer/CommandLineTools/usr/bin/c++ $FLAGS -Wl,-search_paths_first -Wl,-headerpad_max_install_names $LINK_FLAGS $in -o $TARGET_FILE $LINK_PATH $LINK_LIBRARIES && $POST_BUILD
+  description = Linking CXX executable $TARGET_FILE
+  restat = $RESTAT
+
+
+#############################################
+# Rule for running custom commands.
+
+rule CUSTOM_COMMAND
+  command = $COMMAND
+  description = $DESC
+
+
+#############################################
+# Rule for re-running cmake.
+
+rule RERUN_CMAKE
+  command = /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake --regenerate-during-build -S/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+  description = Re-running CMake...
+  generator = 1
+
+
+#############################################
+# Rule for cleaning all built files.
+
+rule CLEAN
+  command = /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja $FILE_ARG -t clean $TARGETS
+  description = Cleaning all built files...
+
+
+#############################################
+# Rule for printing all primary targets available.
+
+rule HELP
+  command = /Applications/CLion.app/Contents/bin/ninja/mac/x64/ninja -t targets
+  description = All primary targets available:
+
diff --git a/cmake-build-debug/Testing/Temporary/LastTest.log b/cmake-build-debug/Testing/Temporary/LastTest.log
new file mode 100644
index 0000000..2dd1bfe
--- /dev/null
+++ b/cmake-build-debug/Testing/Temporary/LastTest.log
@@ -0,0 +1,3 @@
+Start testing: Dec 31 08:10 IST
+----------------------------------------------------------
+End testing: Dec 31 08:10 IST
diff --git a/cmake-build-debug/build.ninja b/cmake-build-debug/build.ninja
new file mode 100644
index 0000000..0d90ed2
--- /dev/null
+++ b/cmake-build-debug/build.ninja
@@ -0,0 +1,164 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "Ninja" Generator, CMake Version 3.29
+
+# This file contains all the build statements describing the
+# compilation DAG.
+
+# =============================================================================
+# Write statements declared in CMakeLists.txt:
+# 
+# Which is the root file.
+# =============================================================================
+
+# =============================================================================
+# Project: Matam_HW3
+# Configurations: Debug
+# =============================================================================
+
+#############################################
+# Minimal version of Ninja required by this file
+
+ninja_required_version = 1.5
+
+
+#############################################
+# Set configuration variable for custom commands.
+
+CONFIGURATION = Debug
+# =============================================================================
+# Include auxiliary files.
+
+
+#############################################
+# Include rules file.
+
+include CMakeFiles/rules.ninja
+
+# =============================================================================
+
+#############################################
+# Logical path to working directory; prefix for absolute paths.
+
+cmake_ninja_workdir = /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/
+# =============================================================================
+# Object build statements for EXECUTABLE target Matam_HW3
+
+
+#############################################
+# Order-only phony target for Matam_HW3
+
+build cmake_object_order_depends_target_Matam_HW3: phony || .
+
+build CMakeFiles/Matam_HW3.dir/main.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/main.cpp || cmake_object_order_depends_target_Matam_HW3
+  DEP_FILE = CMakeFiles/Matam_HW3.dir/main.cpp.o.d
+  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
+  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
+  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
+  TARGET_PDB = Matam_HW3.pdb
+
+build CMakeFiles/Matam_HW3.dir/Person.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/Person.cpp || cmake_object_order_depends_target_Matam_HW3
+  DEP_FILE = CMakeFiles/Matam_HW3.dir/Person.cpp.o.d
+  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
+  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
+  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
+  TARGET_PDB = Matam_HW3.pdb
+
+build CMakeFiles/Matam_HW3.dir/Task.cpp.o: CXX_COMPILER__Matam_HW3_unscanned_Debug /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/Task.cpp || cmake_object_order_depends_target_Matam_HW3
+  DEP_FILE = CMakeFiles/Matam_HW3.dir/Task.cpp.o.d
+  FLAGS = -g -std=gnu++14 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk -fcolor-diagnostics
+  INCLUDES = -I/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/.
+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
+  OBJECT_FILE_DIR = CMakeFiles/Matam_HW3.dir
+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
+  TARGET_PDB = Matam_HW3.pdb
+
+
+# =============================================================================
+# Link build statements for EXECUTABLE target Matam_HW3
+
+
+#############################################
+# Link the executable Matam_HW3
+
+build Matam_HW3: CXX_EXECUTABLE_LINKER__Matam_HW3_Debug CMakeFiles/Matam_HW3.dir/main.cpp.o CMakeFiles/Matam_HW3.dir/Person.cpp.o CMakeFiles/Matam_HW3.dir/Task.cpp.o
+  FLAGS = -g -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX14.4.sdk
+  OBJECT_DIR = CMakeFiles/Matam_HW3.dir
+  POST_BUILD = :
+  PRE_LINK = :
+  TARGET_COMPILE_PDB = CMakeFiles/Matam_HW3.dir/
+  TARGET_FILE = Matam_HW3
+  TARGET_PDB = Matam_HW3.pdb
+
+
+#############################################
+# Utility command for edit_cache
+
+build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
+  COMMAND = cd /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug && /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
+  DESC = No interactive CMake dialog available...
+  restat = 1
+
+build edit_cache: phony CMakeFiles/edit_cache.util
+
+
+#############################################
+# Utility command for rebuild_cache
+
+build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
+  COMMAND = cd /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug && /Applications/CLion.app/Contents/bin/cmake/mac/x64/bin/cmake --regenerate-during-build -S/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3 -B/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+  DESC = Running CMake to regenerate build system...
+  pool = console
+  restat = 1
+
+build rebuild_cache: phony CMakeFiles/rebuild_cache.util
+
+# =============================================================================
+# Target aliases.
+
+# =============================================================================
+# Folder targets.
+
+# =============================================================================
+
+#############################################
+# Folder: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug
+
+build all: phony Matam_HW3
+
+# =============================================================================
+# Built-in targets
+
+
+#############################################
+# Re-run CMake if any of its inputs changed.
+
+build build.ninja: RERUN_CMAKE | /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/CMakeLists.txt CMakeCache.txt CMakeFiles/3.29.6/CMakeCCompiler.cmake CMakeFiles/3.29.6/CMakeCXXCompiler.cmake CMakeFiles/3.29.6/CMakeSystem.cmake
+  pool = console
+
+
+#############################################
+# A missing CMake input file is not an error.
+
+build /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCCompilerABI.c /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompiler.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXCompilerABI.cpp /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCXXInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCommonLanguageInclude.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeCompilerIdDetection.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompileFeatures.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerABI.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineCompilerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeDetermineSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeFindBinUtils.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeGenericSystem.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeInitializeConfigs.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeLanguageInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitIncludeInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseImplicitLinkInfo.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeParseLibraryArchitecture.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystem.cmake.in /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInformation.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeSystemSpecificInitialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCXXCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/CMakeTestCompilerCommon.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ADSP-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMCC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/ARMClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/AppleClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Borland-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Bruce-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CMakeCommonCompilerMacros.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang-DetermineCompilerInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Compaq-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Cray-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/CrayClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Embarcadero-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Fujitsu-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GHS-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/GNU.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/HP-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IAR-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMCPP-CXX-DetermineVersionInternal.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IBMClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Intel-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/LCC-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/MSVC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVHPC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/NVIDIA-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/OrangeC-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PGI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/PathScale-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SCO-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SDCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/SunPro-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TI-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TIClang-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Tasking-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/VisualAge-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/Watcom-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XL-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/XLClang-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-C-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Compiler/zOS-CXX-DetermineCompiler.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/CMakeDetermineLinkerId.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Internal/FeatureTesting.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-AppleClang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-C.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Apple-Clang.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Determine-CXX.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin-Initialize.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/Darwin.cmake /Applications/CLion.app/Contents/bin/cmake/mac/x64/share/cmake-3.29/Modules/Platform/UnixPaths.cmake /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/CMakeLists.txt CMakeCache.txt CMakeFiles/3.29.6/CMakeCCompiler.cmake CMakeFiles/3.29.6/CMakeCXXCompiler.cmake CMakeFiles/3.29.6/CMakeSystem.cmake: phony
+
+
+#############################################
+# Clean all the built files.
+
+build clean: CLEAN
+
+
+#############################################
+# Print all primary targets available.
+
+build help: HELP
+
+
+#############################################
+# Make the all target the default.
+
+default all
diff --git a/cmake-build-debug/cmake_install.cmake b/cmake-build-debug/cmake_install.cmake
new file mode 100644
index 0000000..0ad05a0
--- /dev/null
+++ b/cmake-build-debug/cmake_install.cmake
@@ -0,0 +1,49 @@
+# Install script for directory: /Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3
+
+# Set the install prefix
+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
+  set(CMAKE_INSTALL_PREFIX "/usr/local")
+endif()
+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+
+# Set the install configuration name.
+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+  if(BUILD_TYPE)
+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
+  else()
+    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
+  endif()
+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
+endif()
+
+# Set the component getting installed.
+if(NOT CMAKE_INSTALL_COMPONENT)
+  if(COMPONENT)
+    message(STATUS "Install component: \"${COMPONENT}\"")
+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
+  else()
+    set(CMAKE_INSTALL_COMPONENT)
+  endif()
+endif()
+
+# Is this installation the result of a crosscompile?
+if(NOT DEFINED CMAKE_CROSSCOMPILING)
+  set(CMAKE_CROSSCOMPILING "FALSE")
+endif()
+
+# Set default install directory permissions.
+if(NOT DEFINED CMAKE_OBJDUMP)
+  set(CMAKE_OBJDUMP "/Library/Developer/CommandLineTools/usr/bin/objdump")
+endif()
+
+if(CMAKE_INSTALL_COMPONENT)
+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
+else()
+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
+endif()
+
+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
+       "${CMAKE_INSTALL_MANIFEST_FILES}")
+file(WRITE "/Users/guyfriedman/Documents/Technion/Semester_C_11.2024-02.2025/234124/HW3/Matam_HW3/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")

commit 7da9ff648f3a2b3c5254ded0c1e71cc9ffca223f
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 19:56:01 2025 +0200

    fixing id funcs

diff --git a/SortedList.h b/SortedList.h
index 4e0fc01..145286d 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -136,7 +136,7 @@ namespace mtm {
             return this->length;
         }
         
-        void remove(ConstIterator& iter){
+        void remove(ConstIterator<T>& iter){
             if(iter == this->end()) {
                 return;
             }
diff --git a/TaskManager.cpp b/TaskManager.cpp
index 60cc7f2..f134e46 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -2,6 +2,8 @@
 #include "TaskManager.h"
 using namespace mtm;
 
+int TaskManager::idCounter = 0;
+
 Person* TaskManager::isEmployeeExist(const string& personName){
     Person* currentEmployee = nullptr;
     for (int i = 0; i < numOfEmployees; i++){
@@ -21,7 +23,9 @@ void TaskManager::assignTask(const string &personName, const Task &task){
         currentEmployee = new Person(personName);
         employees[numOfEmployees++] = currentEmployee;
     }
-    currentEmployee->assignTask(task);
+    Task newTask(task.getPriority(), task.getType(), task.getDescription());
+    newTask.setId(++idCounter);
+    currentEmployee->assignTask(newTask);
 }
 
 void TaskManager::completeTask(const string &personName){
@@ -73,6 +77,7 @@ void TaskManager::printAllTasks() const{
     for(SortedList<Task> currentTask : allTasks){
         std::cout << *currentTask.begin().data << std::endl;
     }
+    std::cout << std::endl;
 }
 
 void TaskManager::printTasksByType(TaskType type) const{
@@ -81,6 +86,7 @@ void TaskManager::printTasksByType(TaskType type) const{
     for(SortedList<Task> currentTask : tasksByType){
         std::cout << *currentTask.begin().data << std::endl;
     }
+    std::cout << std::endl;
    
 }
 SortedList<Task> TaskManager::getAllEmployeesTasks() const{
diff --git a/TaskManager.h b/TaskManager.h
index 66d8130..f8ca722 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -16,6 +16,7 @@ private:
      * @brief Maximum number of persons the TaskManager can handle.
      */
     static const int MAX_PERSONS = 10;
+    static int idCounter;
     int numOfEmployees = 0;
     Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName);
@@ -81,4 +82,4 @@ public:
      * @brief Prints all tasks assigned to all employees.
      */
     void printAllTasks() const;
-};
+};
\ No newline at end of file

commit 6ebfe623ea0e597fd33e0bec8b0b31ec8aa285de
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 18:14:29 2025 +0200

    fixing vonst and typos

diff --git a/TaskManager.cpp b/TaskManager.cpp
index c9b9ded..60cc7f2 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -2,35 +2,36 @@
 #include "TaskManager.h"
 using namespace mtm;
 
-Person* TaskManager::isEmployeeExist(const string& personName) const{
+Person* TaskManager::isEmployeeExist(const string& personName){
+    Person* currentEmployee = nullptr;
     for (int i = 0; i < numOfEmployees; i++){
         if (employees[i]->getName() == personName){
-            return employees[i];
+            currentEmployee = employees[i];
         }
     }
-    return nullptr;
+    return currentEmployee;
 }
 
 void TaskManager::assignTask(const string &personName, const Task &task){
-    Person* cuurentEmployee = isEmployeeExist(personName);
-    if(cuurentEmployee==nullptr){
+    Person* currentEmployee = isEmployeeExist(personName);
+    if(currentEmployee == nullptr){
         if(numOfEmployees == MAX_PERSONS){
             throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
         }
-        cuurentEmployee = new Person(personName);
-        employees[numOfEmployees++] = cuurentEmployee;
+        currentEmployee = new Person(personName);
+        employees[numOfEmployees++] = currentEmployee;
     }
-    cuurentEmployee->assignTask(task);
+    currentEmployee->assignTask(task);
 }
 
 void TaskManager::completeTask(const string &personName){
-    Person* cuurentEmployee = isEmployeeExist(personName);
-    if(cuurentEmployee == nullptr){
+    Person* currentEmployee = isEmployeeExist(personName);
+    if(currentEmployee == nullptr){
        return;
     }
     try
     {
-        cuurentEmployee->completeTask();
+        currentEmployee->completeTask();
     }
     catch (const std::runtime_error& e)
     {
@@ -44,9 +45,10 @@ void TaskManager::bumpPriorityByType(TaskType type, int priority){
     }
     for(int i = 0; i < numOfEmployees; i++){
         SortedList<Task> oldTasks = this->employees[i]->getTasks();
-
         SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
+        this->employees[i]->setTasks(newTasks);
     }
+
 }
 
 SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
diff --git a/TaskManager.h b/TaskManager.h
index 6102d16..66d8130 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -18,7 +18,7 @@ private:
     static const int MAX_PERSONS = 10;
     int numOfEmployees = 0;
     Person* employees[MAX_PERSONS];
-    Person* isEmployeeExist(const string& personName) const;
+    Person* isEmployeeExist(const string& personName);
     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
     SortedList<Task> getAllEmployeesTasks() const;
 

commit 7647d87289720cf326f0c1e01e13965f0f90a8af
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 17:42:03 2025 +0200

    fixing getAllEmployeesTasks

diff --git a/TaskManager.h b/TaskManager.h
index 322e1fe..6102d16 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -20,7 +20,7 @@ private:
     Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName) const;
     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
-    SortedList<Task> getAllEmployeesTasks(const Person* employees, int numOfEmployees);
+    SortedList<Task> getAllEmployeesTasks() const;
 
     // Note - Additional private fields and methods can be added if needed.
 

commit 19081f0a620e6714609126cc12545ed09b192369
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 17:39:24 2025 +0200

    creating printTasksByType and help func getAllEmployeesTasks

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 18b10a4..c9b9ded 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -67,14 +67,28 @@ void TaskManager::printAllEmployees() const{
 }
 
 void TaskManager::printAllTasks() const{
+    SortedList<Task> allTasks = getAllEmployeesTasks();
+    for(SortedList<Task> currentTask : allTasks){
+        std::cout << *currentTask.begin().data << std::endl;
+    }
+}
+
+void TaskManager::printTasksByType(TaskType type) const{
+    SortedList<Task> allTasks = getAllEmployeesTasks();
+    SortedList<Task> tasksByType = allTasks.filter([type](SortedList<Task> sortedListTask) { return (sortedListTask.begin().getType() == type); });
+    for(SortedList<Task> currentTask : tasksByType){
+        std::cout << *currentTask.begin().data << std::endl;
+    }
+   
+}
+SortedList<Task> TaskManager::getAllEmployeesTasks() const{
     SortedList<Task> allTasks;
-    for(int i = 0; i < numOfEmployees; i++){
-        SortedList<Task> tasks = employees[i]->getTasks();
+    for(int i = 0; i < this->numOfEmployees; i++){
+        SortedList<Task> tasks = this->employees[i]->getTasks();
         for(SortedList<Task> currentTask : tasks){
             allTasks.insert(currentTask.begin().data);
         }
     }
-    for(SortedList<Task> currentTask : allTasks){
-        std::cout << *currentTask.begin().data << std::endl;
-    }
+    return allTasks;
 }
+
diff --git a/TaskManager.h b/TaskManager.h
index 46865a3..322e1fe 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -20,6 +20,7 @@ private:
     Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName) const;
     SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
+    SortedList<Task> getAllEmployeesTasks(const Person* employees, int numOfEmployees);
 
     // Note - Additional private fields and methods can be added if needed.
 

commit 92959be25c3aaf09ab210c4d239a49af11820dcf
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 17:26:52 2025 +0200

    creating printAllTasks()

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 9299970..18b10a4 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -62,6 +62,19 @@ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type,
 void TaskManager::printAllEmployees() const{
     for(int i = 0; i < numOfEmployees; i++){
         std::cout << *employees[i] << std::endl;
+        std::cout << std::endl;
     }
 }
 
+void TaskManager::printAllTasks() const{
+    SortedList<Task> allTasks;
+    for(int i = 0; i < numOfEmployees; i++){
+        SortedList<Task> tasks = employees[i]->getTasks();
+        for(SortedList<Task> currentTask : tasks){
+            allTasks.insert(currentTask.begin().data);
+        }
+    }
+    for(SortedList<Task> currentTask : allTasks){
+        std::cout << *currentTask.begin().data << std::endl;
+    }
+}

commit e04f3a85ad476f48aa568a5b1fab579cb9487438
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 17:13:07 2025 +0200

    creating printAllEmployees()

diff --git a/SortedList.h b/SortedList.h
index 2da277c..4e0fc01 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -193,15 +193,15 @@ namespace mtm {
          *
          * iterator:
          * 5. class ConstIterator;
-         * 6. begin method
-         * 7. end method
+         * 6. begin method V?
+         * 7. end method V?
          *
          * functions:
          * 8. insert - inserts a new element to the list V
          * 9. remove - removes an element from the list V
          * 10. length - returns the number of elements in the list V
-         * 11. filter - returns a new list with elements that satisfy a given condition V
-         * 12. apply - returns a new list with elements that were modified by an operation V
+         * 11. filter - returns a new list with elements that satisfy a given condition V?
+         * 12. apply - returns a new list with elements that were modified by an operation V?
          */
 
     };
diff --git a/TaskManager.cpp b/TaskManager.cpp
index 31ad921..9299970 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -59,3 +59,9 @@ SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type,
     return tasks;
 }
 
+void TaskManager::printAllEmployees() const{
+    for(int i = 0; i < numOfEmployees; i++){
+        std::cout << *employees[i] << std::endl;
+    }
+}
+

commit 76a6228d8515358a8ecc262072c26f6948c0b6ed
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 17:07:45 2025 +0200

    creating bumpPriorityByType func

diff --git a/SortedList.h b/SortedList.h
index 84e06d4..2da277c 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -168,11 +168,18 @@ namespace mtm {
         SortedList<T> apply(Function function) const{
             SortedList<T> appliedList;
             for(const SortedListNode<T>& current : *this){
-                appliedList.insert(function(current.data));
+                appliedList.insert((function(current)).data);
             }
             return appliedList;
         }
-        
+
+        ConstIterator begin() const {
+            return ConstIterator(this->head);
+        }
+
+        ConstIterator end() const {
+            return ConstIterator(nullptr);
+        }
         /**
          *
          * the class should support the following public interface:
@@ -193,8 +200,8 @@ namespace mtm {
          * 8. insert - inserts a new element to the list V
          * 9. remove - removes an element from the list V
          * 10. length - returns the number of elements in the list V
-         * 11. filter - returns a new list with elements that satisfy a given condition
-         * 12. apply - returns a new list with elements that were modified by an operation
+         * 11. filter - returns a new list with elements that satisfy a given condition V
+         * 12. apply - returns a new list with elements that were modified by an operation V
          */
 
     };
diff --git a/TaskManager.cpp b/TaskManager.cpp
index 7e37fa8..31ad921 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -2,7 +2,7 @@
 #include "TaskManager.h"
 using namespace mtm;
 
-mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
+Person* TaskManager::isEmployeeExist(const string& personName) const{
     for (int i = 0; i < numOfEmployees; i++){
         if (employees[i]->getName() == personName){
             return employees[i];
@@ -11,7 +11,7 @@ mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
     return nullptr;
 }
 
-void mtm::TaskManager::assignTask(const string &personName, const Task &task){
+void TaskManager::assignTask(const string &personName, const Task &task){
     Person* cuurentEmployee = isEmployeeExist(personName);
     if(cuurentEmployee==nullptr){
         if(numOfEmployees == MAX_PERSONS){
@@ -23,7 +23,7 @@ void mtm::TaskManager::assignTask(const string &personName, const Task &task){
     cuurentEmployee->assignTask(task);
 }
 
-void mtm::TaskManager::completeTask(const string &personName){
+void TaskManager::completeTask(const string &personName){
     Person* cuurentEmployee = isEmployeeExist(personName);
     if(cuurentEmployee == nullptr){
        return;
@@ -36,4 +36,26 @@ void mtm::TaskManager::completeTask(const string &personName){
     {
         std::cout << e.what() << std::endl;
     }
-}
\ No newline at end of file
+}
+
+void TaskManager::bumpPriorityByType(TaskType type, int priority){
+    if(priority <= 0){
+        return;
+    }
+    for(int i = 0; i < numOfEmployees; i++){
+        SortedList<Task> oldTasks = this->employees[i]->getTasks();
+
+        SortedList<Task> newTasks = oldTasks.apply([this, type, priority](SortedList<Task> task) { return setPriority(task, type, priority); });
+    }
+}
+
+SortedList<Task> TaskManager::setPriority(SortedList<Task> tasks, TaskType type, int priority){
+    if(tasks.begin()->getType() == type){
+        SortedList<Task> resultTasks;
+        Task newTask = Task(tasks.begin()->getPriority() + priority, tasks.begin()->getType(), tasks.begin()->getDescription());
+        resultTasks.insert(newTask);
+        return resultTasks;
+    }
+    return tasks;
+}
+
diff --git a/TaskManager.h b/TaskManager.h
index 90eacdd..46865a3 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -17,9 +17,9 @@ private:
      */
     static const int MAX_PERSONS = 10;
     int numOfEmployees = 0;
-    mtm::Person* employees[MAX_PERSONS];
-
+    Person* employees[MAX_PERSONS];
     Person* isEmployeeExist(const string& personName) const;
+    SortedList<Task> setPriority(SortedList<Task> tasks, TaskType type, int priority);
 
     // Note - Additional private fields and methods can be added if needed.
 

commit 48eb0cd03b24c892900c38e43949646ee701e3de
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 15:04:48 2025 +0200

    creating apply func

diff --git a/SortedList.h b/SortedList.h
index d849437..84e06d4 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -164,6 +164,15 @@ namespace mtm {
             return filteredList;
         }
 
+        template <class Function>
+        SortedList<T> apply(Function function) const{
+            SortedList<T> appliedList;
+            for(const SortedListNode<T>& current : *this){
+                appliedList.insert(function(current.data));
+            }
+            return appliedList;
+        }
+        
         /**
          *
          * the class should support the following public interface:

commit c793e7f302c5f0d8e4592583d493ce685696638d
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 14:53:07 2025 +0200

    creating filter func

diff --git a/SortedList.h b/SortedList.h
index 2f154a8..d849437 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -152,6 +152,18 @@ namespace mtm {
             delete iter;
             this->length--;
         }
+
+        template <class Condition>
+        SortedList<T> filter(Condition condition) const{
+            SortedList<T> filteredList;
+            for(const SortedListNode<T>& current : *this){
+                if(condition(current.data)) {
+                    filteredList.insert(current.data);
+                }
+            }
+            return filteredList;
+        }
+
         /**
          *
          * the class should support the following public interface:
@@ -170,7 +182,7 @@ namespace mtm {
          *
          * functions:
          * 8. insert - inserts a new element to the list V
-         * 9. remove - removes an element from the list
+         * 9. remove - removes an element from the list V
          * 10. length - returns the number of elements in the list V
          * 11. filter - returns a new list with elements that satisfy a given condition
          * 12. apply - returns a new list with elements that were modified by an operation

commit d298dd0c5f2cd7c6e37a5ea36a06940ae2752fa4
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 14:37:24 2025 +0200

    creating remove func

diff --git a/SortedList.h b/SortedList.h
index 33f2372..2f154a8 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -46,7 +46,7 @@ namespace mtm {
 
     public:
         SortedList() : length(0), head(nullptr), tail(nullptr) {}
-        SortedList(const SortedList& other) : length(other.length){
+        SortedList(const SortedList& other) : length(0){
             if(other.head == nullptr) {
                 this->head = nullptr;
                 this->tail = nullptr;
@@ -85,7 +85,7 @@ namespace mtm {
             }
             this->head = nullptr;
             this->tail = nullptr;
-            this->length = other.length;
+            this->length = 0;
             if(other.head == nullptr) {
                 return *this;
             }
@@ -136,6 +136,22 @@ namespace mtm {
             return this->length;
         }
         
+        void remove(ConstIterator& iter){
+            if(iter == this->end()) {
+                return;
+            }
+            if(iter == this->begin()) {
+                this->head = this->head->next;
+            }
+            else{
+                SortedListNode<T>* nextNode = iter->next;
+                SortedListNode<T>* prevNode = iter->prev;
+                prevNode->next = nextNode;
+                nextNode->prev = prevNode;
+            }
+            delete iter;
+            this->length--;
+        }
         /**
          *
          * the class should support the following public interface:
@@ -155,7 +171,7 @@ namespace mtm {
          * functions:
          * 8. insert - inserts a new element to the list V
          * 9. remove - removes an element from the list
-         * 10. length - returns the number of elements in the list
+         * 10. length - returns the number of elements in the list V
          * 11. filter - returns a new list with elements that satisfy a given condition
          * 12. apply - returns a new list with elements that were modified by an operation
          */

commit dcfb97b1a2f8cc4475c01cbcab5ad520aeab402f
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 14:19:59 2025 +0200

    creating sortedList::length()

diff --git a/SortedList.h b/SortedList.h
index bc8640f..33f2372 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -127,12 +127,14 @@ namespace mtm {
                 this->tail = this->head;
                 this->length = 1;
                 return;
-            }
-            
+            }  
             this->head->add(newElement);
             this->length++;
         }
 
+        int length() const {
+            return this->length;
+        }
         
         /**
          *
@@ -151,7 +153,7 @@ namespace mtm {
          * 7. end method
          *
          * functions:
-         * 8. insert - inserts a new element to the list
+         * 8. insert - inserts a new element to the list V
          * 9. remove - removes an element from the list
          * 10. length - returns the number of elements in the list
          * 11. filter - returns a new list with elements that satisfy a given condition

commit 307d8808fe0e8718d77846a9fa57b01be789f568
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 14:13:59 2025 +0200

    changing CC and operator= to insert(currentOther.data), and creating insert

diff --git a/SortedList.h b/SortedList.h
index 1c66bd0..bc8640f 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -47,27 +47,36 @@ namespace mtm {
     public:
         SortedList() : length(0), head(nullptr), tail(nullptr) {}
         SortedList(const SortedList& other) : length(other.length){
-            SortedListNode<T>* currentOther = other.head;
-            SortedListNode<T>* currentNode = this->head;
-             SortedListNode<T>* previousNode = nullptr;
-            while(currentOther != nullptr) {
-                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-                if(previousNode == nullptr) {
-                    this->head = currentNode;
-                }
-                if(previousNode != nullptr) {
-                    previousNode->next = currentNode;
-                }
-                this->tail = currentNode;
-                previousNode = currentNode;
-                currentOther = currentOther->next;
-        }
+            if(other.head == nullptr) {
+                this->head = nullptr;
+                this->tail = nullptr;
+                return;
+            }
+            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                this->insert(currentOther.data);
+            }
+            
+            // SortedListNode<T>* currentOther = other.head;
+            // SortedListNode<T>* currentNode = this->head;
+            //  SortedListNode<T>* previousNode = nullptr;
+            // while(currentOther != nullptr) {
+            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+            //     if(previousNode == nullptr) {
+            //         this->head = currentNode;
+            //     }
+            //     if(previousNode != nullptr) {
+            //         previousNode->next = currentNode;
+            //     }
+            //     this->tail = currentNode;
+            //     previousNode = currentNode;
+            //     currentOther = currentOther->next;
         }
 
         SortedList<T>& operator=(const SortedList& other) {
             if(this == &other) {
                 return *this;
             }
+            
             SortedListNode<T>* current = this->head;
             while(current != nullptr) {
                 SortedListNode<T>* next = current->next;
@@ -77,21 +86,27 @@ namespace mtm {
             this->head = nullptr;
             this->tail = nullptr;
             this->length = other.length;
-            SortedListNode<T>* currentOther = other.head;
-            SortedListNode<T>* currentNode = this->head;
-            SortedListNode<T>* previousNode = nullptr;
-            while(currentOther != nullptr) {
-                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
-                if(previousNode == nullptr) {
-                    this->head = currentNode;
-                }
-                if(previousNode != nullptr) {
-                    previousNode->next = currentNode;
-                }
-                this->tail = currentNode;
-                previousNode = currentNode;
-                currentOther = currentOther->next;
+            if(other.head == nullptr) {
+                return *this;
+            }
+            for(SortedListNode<T> currentOther : other) { //TODO create iterator for SortedListNodes 
+                this->insert(currentOther.data);
             }
+            // SortedListNode<T>* currentOther = other.head;
+            // SortedListNode<T>* currentNode = this->head;
+            // SortedListNode<T>* previousNode = nullptr;
+            // while(currentOther != nullptr) {
+            //     currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
+            //     if(previousNode == nullptr) {
+            //         this->head = currentNode;
+            //     }
+            //     if(previousNode != nullptr) {
+            //         previousNode->next = currentNode;
+            //     }
+            //     this->tail = currentNode;
+            //     previousNode = currentNode;
+            //     currentOther = currentOther->next;
+            // }
             return *this;
         }
         ~SortedList() {
@@ -103,6 +118,20 @@ namespace mtm {
             }
         }
 
+        void insert(const T& newElement){
+            if (newElement == nullptr) {
+                    //TODO invalid argument
+                }
+            if(this->head == nullptr) {
+                this->head = new SortedListNode<T>(nullptr, nullptr, newElement);
+                this->tail = this->head;
+                this->length = 1;
+                return;
+            }
+            
+            this->head->add(newElement);
+            this->length++;
+        }
 
         
         /**
@@ -114,7 +143,7 @@ namespace mtm {
          * 1. SortedList() - creates an empty list. V
          * 2. copy constructor V
          * 3. operator= - assignment operator V
-         * 4. ~SortedList() - destructor
+         * 4. ~SortedList() - destructor V
          *
          * iterator:
          * 5. class ConstIterator;

commit c5596932a0672936d1c4b13e4ace77120711dc40
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 13:37:12 2025 +0200

    removing class SortedListNode duplication

diff --git a/SortedList.h b/SortedList.h
index b0cb6ff..1c66bd0 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -24,7 +24,7 @@ namespace mtm {
                 this->next = newNode;
                 newNode->prev = this;
             }
-            SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
+            SortedListNode(SortedListNode<T>* prev = nullptr, SortedListNode<T>* next = nullptr, T* data = nullptr) : prev(prev), next(next), data(data) {}
             public:
             void add(T const& const data) {
                 if (data == nullptr) {
@@ -43,28 +43,15 @@ namespace mtm {
         int length;
         SortedListNode<T>* head;
         SortedListNode<T>* tail;
-        class SortedListNode { 
-        private:
-            T* data;
-            SortedListNode<T>* next;
-            SortedListNode<T>* previous;
-        public:
-            SortedListNode(T* data = nullptr, SortedListNode<T>* next = nullptr, SortedListNode<T>* previous = nullptr) : data(data), next(next), previous(previous) {}
-            ~SortedListNode() {
-                delete data;
-            }
-        };
-
 
     public:
         SortedList() : length(0), head(nullptr), tail(nullptr) {}
-
         SortedList(const SortedList& other) : length(other.length){
             SortedListNode<T>* currentOther = other.head;
             SortedListNode<T>* currentNode = this->head;
              SortedListNode<T>* previousNode = nullptr;
             while(currentOther != nullptr) {
-                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
+                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
                 if(previousNode == nullptr) {
                     this->head = currentNode;
                 }
@@ -94,7 +81,7 @@ namespace mtm {
             SortedListNode<T>* currentNode = this->head;
             SortedListNode<T>* previousNode = nullptr;
             while(currentOther != nullptr) {
-                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
+                currentNode = new SortedListNode<T>(previousNode, nullptr, currentOther->data);
                 if(previousNode == nullptr) {
                     this->head = currentNode;
                 }

commit 8eadcb3870edf7cd034a945599defa41f2b687c0
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 12:55:31 2025 +0200

    creating  ~SortedList()

diff --git a/SortedList.h b/SortedList.h
index debf7a3..b0cb6ff 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -107,6 +107,14 @@ namespace mtm {
             }
             return *this;
         }
+        ~SortedList() {
+            SortedListNode<T>* current = this->head;
+            while(current != nullptr) {
+                SortedListNode<T>* next = current->next;
+                delete current;
+                current = next;
+            }
+        }
 
 
         
@@ -118,7 +126,7 @@ namespace mtm {
          * constructors and destructor:
          * 1. SortedList() - creates an empty list. V
          * 2. copy constructor V
-         * 3. operator= - assignment operator
+         * 3. operator= - assignment operator V
          * 4. ~SortedList() - destructor
          *
          * iterator:

commit b16f143293cdb6acf1760486e70f0761367b1ee0
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 12:50:03 2025 +0200

    foxing rtype for  operator=

diff --git a/SortedList.h b/SortedList.h
index 049c7b9..debf7a3 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -77,7 +77,7 @@ namespace mtm {
         }
         }
 
-        SortedList& operator=(const SortedList& other) {
+        SortedList<T>& operator=(const SortedList& other) {
             if(this == &other) {
                 return *this;
             }

commit 35390b57dcb4a7c6c2fd122da090748a1cd90ea7
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Thu Jan 2 12:49:28 2025 +0200

    creating  operator= for sortedList

diff --git a/SortedList.h b/SortedList.h
index 31c5ed5..049c7b9 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -75,14 +75,49 @@ namespace mtm {
                 previousNode = currentNode;
                 currentOther = currentOther->next;
         }
+        }
+
+        SortedList& operator=(const SortedList& other) {
+            if(this == &other) {
+                return *this;
+            }
+            SortedListNode<T>* current = this->head;
+            while(current != nullptr) {
+                SortedListNode<T>* next = current->next;
+                delete current;
+                current = next;
+            }
+            this->head = nullptr;
+            this->tail = nullptr;
+            this->length = other.length;
+            SortedListNode<T>* currentOther = other.head;
+            SortedListNode<T>* currentNode = this->head;
+            SortedListNode<T>* previousNode = nullptr;
+            while(currentOther != nullptr) {
+                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
+                if(previousNode == nullptr) {
+                    this->head = currentNode;
+                }
+                if(previousNode != nullptr) {
+                    previousNode->next = currentNode;
+                }
+                this->tail = currentNode;
+                previousNode = currentNode;
+                currentOther = currentOther->next;
+            }
+            return *this;
+        }
+
+
+        
         /**
          *
          * the class should support the following public interface:
          * if needed, use =defualt / =delete
          *
          * constructors and destructor:
-         * 1. SortedList() - creates an empty list.
-         * 2. copy constructor
+         * 1. SortedList() - creates an empty list. V
+         * 2. copy constructor V
          * 3. operator= - assignment operator
          * 4. ~SortedList() - destructor
          *
@@ -120,5 +155,5 @@ namespace mtm {
      *
      */
     };
-}
-
+    }
+};
\ No newline at end of file

commit bf8549153b26c883a799ed93163f99b0d56bb963
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Wed Jan 1 19:00:06 2025 +0200

    creating completeTask func

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 752291d..7e37fa8 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -22,3 +22,18 @@ void mtm::TaskManager::assignTask(const string &personName, const Task &task){
     }
     cuurentEmployee->assignTask(task);
 }
+
+void mtm::TaskManager::completeTask(const string &personName){
+    Person* cuurentEmployee = isEmployeeExist(personName);
+    if(cuurentEmployee == nullptr){
+       return;
+    }
+    try
+    {
+        cuurentEmployee->completeTask();
+    }
+    catch (const std::runtime_error& e)
+    {
+        std::cout << e.what() << std::endl;
+    }
+}
\ No newline at end of file

commit 26c8d14dae8fb4f3659f32fec16ca5ede8896541
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Wed Jan 1 18:49:00 2025 +0200

    fixing isEmployeeExist and creating assignTask

diff --git a/TaskManager.cpp b/TaskManager.cpp
index d5f7dfb..752291d 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -2,11 +2,23 @@
 #include "TaskManager.h"
 using namespace mtm;
 
-bool TaskManager::isEmployeeExist(const string& personName) const{
+mtm::Person* mtm::TaskManager::isEmployeeExist(const string& personName) const{
     for (int i = 0; i < numOfEmployees; i++){
         if (employees[i]->getName() == personName){
-            return true;
+            return employees[i];
         }
     }
-    return false;
+    return nullptr;
+}
+
+void mtm::TaskManager::assignTask(const string &personName, const Task &task){
+    Person* cuurentEmployee = isEmployeeExist(personName);
+    if(cuurentEmployee==nullptr){
+        if(numOfEmployees == MAX_PERSONS){
+            throw std::runtime_error("TaskManager::assignTask: you have reached the maximum number of employees");
+        }
+        cuurentEmployee = new Person(personName);
+        employees[numOfEmployees++] = cuurentEmployee;
+    }
+    cuurentEmployee->assignTask(task);
 }
diff --git a/TaskManager.h b/TaskManager.h
index 6249403..90eacdd 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -17,9 +17,9 @@ private:
      */
     static const int MAX_PERSONS = 10;
     int numOfEmployees = 0;
-    Person* employees[MAX_PERSONS];
+    mtm::Person* employees[MAX_PERSONS];
 
-    bool isEmployeeExist(const string& personName) const;
+    Person* isEmployeeExist(const string& personName) const;
 
     // Note - Additional private fields and methods can be added if needed.
 

commit b00f9441a686498153f3a8bb990d3ef44c333f94
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Wed Jan 1 18:32:52 2025 +0200

    adding private method - isEmployeeExist

diff --git a/TaskManager.cpp b/TaskManager.cpp
index 00a59c7..d5f7dfb 100644
--- a/TaskManager.cpp
+++ b/TaskManager.cpp
@@ -1,3 +1,12 @@
 #include <iostream>
 #include "TaskManager.h"
-#include "SortedList.h"
+using namespace mtm;
+
+bool TaskManager::isEmployeeExist(const string& personName) const{
+    for (int i = 0; i < numOfEmployees; i++){
+        if (employees[i]->getName() == personName){
+            return true;
+        }
+    }
+    return false;
+}
diff --git a/TaskManager.h b/TaskManager.h
index 6be757b..6249403 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -2,8 +2,9 @@
 #pragma once
 
 #include "Task.h"
-#include "Person.h" //check if allowed
-#include "SortedList.h" //check if allowed
+#include "SortedList.h"
+#include "Person.h"
+using namespace mtm;
 
 
 /**
@@ -16,7 +17,9 @@ private:
      */
     static const int MAX_PERSONS = 10;
     int numOfEmployees = 0;
-    mtm::Person* employees[MAX_PERSONS];
+    Person* employees[MAX_PERSONS];
+
+    bool isEmployeeExist(const string& personName) const;
 
     // Note - Additional private fields and methods can be added if needed.
 

commit d1ea71d3453e9cd5a280e029dd24431566ad78bd
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Wed Jan 1 18:18:01 2025 +0200

    defining TaskManager c'tor to default

diff --git a/TaskManager.h b/TaskManager.h
index 3a44f03..6be757b 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -15,7 +15,7 @@ private:
      * @brief Maximum number of persons the TaskManager can handle.
      */
     static const int MAX_PERSONS = 10;
-    int numOfEmployees;
+    int numOfEmployees = 0;
     mtm::Person* employees[MAX_PERSONS];
 
     // Note - Additional private fields and methods can be added if needed.
@@ -26,7 +26,7 @@ public:
      *
      * Note - you may add =default if needed.
      */
-    TaskManager();
+    TaskManager() = default;
 
     /**
      * @brief Deleted copy constructor to prevent copying of TaskManager objects.

commit 2ca9a6df4110f8a224b2eb936ee9e55029096acc
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Wed Jan 1 18:14:52 2025 +0200

    adding private fields to taskManager.h

diff --git a/TaskManager.h b/TaskManager.h
index f1acc89..3a44f03 100644
--- a/TaskManager.h
+++ b/TaskManager.h
@@ -2,6 +2,9 @@
 #pragma once
 
 #include "Task.h"
+#include "Person.h" //check if allowed
+#include "SortedList.h" //check if allowed
+
 
 /**
  * @brief Class managing tasks assigned to multiple persons.
@@ -12,6 +15,8 @@ private:
      * @brief Maximum number of persons the TaskManager can handle.
      */
     static const int MAX_PERSONS = 10;
+    int numOfEmployees;
+    mtm::Person* employees[MAX_PERSONS];
 
     // Note - Additional private fields and methods can be added if needed.
 

commit 7fb158bb718f08b35e811c40c9172be503807e27
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Wed Jan 1 17:47:32 2025 +0200

    creating TaskManager.cpp file

diff --git a/TaskManager.cpp b/TaskManager.cpp
new file mode 100644
index 0000000..00a59c7
--- /dev/null
+++ b/TaskManager.cpp
@@ -0,0 +1,3 @@
+#include <iostream>
+#include "TaskManager.h"
+#include "SortedList.h"

commit e6a353555de175a882959e6ac3c3c61703715665
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Tue Dec 31 08:43:58 2024 +0200

    add const

diff --git a/SortedList.h b/SortedList.h
index 4290e9c..31c5ed5 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -26,7 +26,7 @@ namespace mtm {
             }
             SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
             public:
-            void add(T& data) {
+            void add(T const& const data) {
                 if (data == nullptr) {
                     //TODO invalid argument
                 }

commit daa6df8966b91b05a59f8a46be14f8130a134f2a
Author: guy friedman <guy.friedman2001@gmail.com>
Date:   Tue Dec 31 08:35:38 2024 +0200

    add code to SortedListNode

diff --git a/SortedList.h b/SortedList.h
index 2eb0a1f..4290e9c 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -7,6 +7,38 @@ namespace mtm {
 
     template <typename T>
     class SortedList {
+        template <typename T>
+        class SortedListNode {
+            private:
+            friend class SortedList<T>;
+            SortedListNode<T> * prev;
+            SortedListNode<T> * next;
+            T* data;
+            void add(SortedListNode<T> * newNode) {
+                if (newNode <= this->next){ //TODO create > operator, make null node smallest;
+                    this->next->add(newNode);
+                    return;
+                }
+                this->next->prev = newNode;
+                newNode->next = this->next;
+                this->next = newNode;
+                newNode->prev = this;
+            }
+            SortedListNode() : prev(nullptr), next(nullptr), data(nullptr) {}
+            public:
+            void add(T& data) {
+                if (data == nullptr) {
+                    //TODO invalid argument
+                }
+                SortedListNode<T> * newNode = new SortedListNode<T>(data);
+                this->add(newNode);
+            }
+            ~SortedListNode() {
+                this->prev = nullptr;
+                this->next = nullptr;
+                delete this->data;
+            }
+        };
         private:
         int length;
         SortedListNode<T>* head;

commit 10b87fb6f427d4d5a2df42c5ddc84bea358aef69
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Mon Dec 30 18:34:33 2024 +0200

    creating CC

diff --git a/SortedList.h b/SortedList.h
index e3eabd6..2eb0a1f 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -26,6 +26,23 @@ namespace mtm {
 
     public:
         SortedList() : length(0), head(nullptr), tail(nullptr) {}
+
+        SortedList(const SortedList& other) : length(other.length){
+            SortedListNode<T>* currentOther = other.head;
+            SortedListNode<T>* currentNode = this->head;
+             SortedListNode<T>* previousNode = nullptr;
+            while(currentOther != nullptr) {
+                currentNode = new SortedListNode<T>(currentOther->data, nullptr, previousNode);
+                if(previousNode == nullptr) {
+                    this->head = currentNode;
+                }
+                if(previousNode != nullptr) {
+                    previousNode->next = currentNode;
+                }
+                this->tail = currentNode;
+                previousNode = currentNode;
+                currentOther = currentOther->next;
+        }
         /**
          *
          * the class should support the following public interface:

commit 24862fd70781ac234296c413ce254c955c663f1f
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Mon Dec 30 18:17:38 2024 +0200

    creating SortedList() c'tor

diff --git a/SortedList.h b/SortedList.h
index e011cce..e3eabd6 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -25,6 +25,7 @@ namespace mtm {
 
 
     public:
+        SortedList() : length(0), head(nullptr), tail(nullptr) {}
         /**
          *
          * the class should support the following public interface:

commit 8c4be612b0f1ca04da33d029393457f96e7fc7b0
Author: Ori Elkabetz <orielk2@gmail.com>
Date:   Mon Dec 30 18:12:11 2024 +0200

    setting SortedList private and creating class SortedListNode

diff --git a/SortedList.h b/SortedList.h
index ddb0d8e..e011cce 100644
--- a/SortedList.h
+++ b/SortedList.h
@@ -7,6 +7,23 @@ namespace mtm {
 
     template <typename T>
     class SortedList {
+        private:
+        int length;
+        SortedListNode<T>* head;
+        SortedListNode<T>* tail;
+        class SortedListNode { 
+        private:
+            T* data;
+            SortedListNode<T>* next;
+            SortedListNode<T>* previous;
+        public:
+            SortedListNode(T* data = nullptr, SortedListNode<T>* next = nullptr, SortedListNode<T>* previous = nullptr) : data(data), next(next), previous(previous) {}
+            ~SortedListNode() {
+                delete data;
+            }
+        };
+
+
     public:
         /**
          *

commit a3481f8f37f2fbd59d824d4020f19d434ec6f9a5
Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
Date:   Sun Dec 22 10:44:54 2024 +0200

    Update Task.cpp

diff --git a/Task.cpp b/Task.cpp
index 176989a..b5d3670 100644
--- a/Task.cpp
+++ b/Task.cpp
@@ -50,7 +50,10 @@ ostream &operator<<(ostream& os, const Task& task) {
 }
 
 bool operator>(const Task& lhs, const Task& rhs) {
-    return lhs.m_priority > rhs.m_priority;
+    if (lhs.m_priority == rhs.m_priority) {
+            return lhs.m_id < rhs.m_id; 
+        }
+        return lhs.m_priority > rhs.m_priority;
 }
 
 

commit ef076db7052b54a8918ae43ebe390b6a7a629909
Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
Date:   Fri Dec 20 17:02:30 2024 +0200

    Update README.md

diff --git a/README.md b/README.md
index 22bd23c..8b87dca 100644
--- a/README.md
+++ b/README.md
@@ -2,6 +2,5 @@
 
 This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
 
-You may find the full instructions for this assignment on the [course's website](https://moodle2324.technion.ac.il/course/view.php?id=3205).
-
-Good luck and have fun!
+You may find the full instructions for this assignment on the course's website.
+Good luck, and have fun!

commit ef8a3ce100827ef3fead32a4927a3566fe3d0d5d
Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
Date:   Fri Dec 20 17:01:08 2024 +0200

    Add files via upload

diff --git a/Person.cpp b/Person.cpp
new file mode 100644
index 0000000..4a6b9aa
--- /dev/null
+++ b/Person.cpp
@@ -0,0 +1,51 @@
+
+#include "Person.h"
+using std::endl;
+
+// Constructor
+Person::Person(const string &name) : m_name(name) {}
+
+// Getters and setters
+string Person::getName() const {
+    return m_name;
+}
+
+const SortedList<Task>& Person::getTasks() const {
+    return m_tasks;
+}
+
+void Person::setTasks(const SortedList<Task>& tasks) {
+    m_tasks = tasks;
+}
+
+// Other methods
+void Person::assignTask(const Task& task) {
+    m_tasks.insert(task);
+}
+
+
+int Person::completeTask() {
+    if (m_tasks.length() == 0) {
+        throw std::runtime_error("No tasks assigned to this person.");
+    }
+    int taskId = (*m_tasks.begin()).getId();
+    m_tasks.remove(m_tasks.begin());
+    return taskId;
+}
+
+const Task& Person::getHighestPriorityTask() const {
+    if (m_tasks.length() == 0) {
+        throw std::runtime_error("No tasks assigned to this person.");
+    }
+    return (*m_tasks.begin());
+}
+
+// Overloaded operators
+ostream& operator<<(ostream& os, const Person& person) {
+    os << "Person: " << person.m_name << endl;
+    // Assuming the SortedList has an appropriate method to list tasks
+    for (const Task& t: person.m_tasks) {
+        os << t << endl;
+    }
+    return os;
+}
diff --git a/Person.h b/Person.h
new file mode 100644
index 0000000..aea7f69
--- /dev/null
+++ b/Person.h
@@ -0,0 +1,79 @@
+
+#pragma once
+
+#include <iostream>
+#include <string>
+#include "Task.h"
+#include "SortedList.h"
+
+using mtm::SortedList;
+using std::ostream;
+using std::string;
+
+/**
+ * @brief Class representing a person who can have tasks assigned.
+ */
+class Person {
+private:
+    string m_name;
+    SortedList<Task> m_tasks;
+
+public:
+    /**
+     * @brief Constructor to create a Person object.
+     *
+     * @param name The name of the person (default is an empty string).
+     */
+    Person(const string& name = "");
+
+    /**
+     * @brief Gets the name of the person.
+     *
+     * @return string The name of the person.
+     */
+    string getName() const;
+
+    /**
+     * @brief Gets the list of tasks assigned to the person.
+     *
+     * @return const SortedList<Task>& The list of tasks assigned to the person.
+     */
+    const SortedList<Task>& getTasks() const;
+
+    /**
+     * @brief Sets the list of tasks for the person.
+     *
+     * @param tasks The list of tasks to be set.
+     */
+    void setTasks(const SortedList<Task>& tasks);
+
+    /**
+     * @brief Assigns a new task to the person.
+     *
+     * @param task The task to be assigned.
+     */
+    void assignTask(const Task& task);
+
+    /**
+     * @brief Completes the highest priority task from the list of tasks.
+     *
+     * @return int The ID of the completed task.
+     */
+    int completeTask();
+
+    /**
+     * @brief Gets the highest priority task assigned to the person.
+     *
+     * @return const Task& The highest priority task.
+     */
+    const Task& getHighestPriorityTask() const;
+
+    /**
+     * @brief Overloaded output stream operator for printing Person details.
+     *
+     * @param os The output stream.
+     * @param person The Person object to be printed.
+     * @return ostream& The output stream with the Person details.
+     */
+    friend ostream &operator<<(ostream &os, const Person &person);
+};
diff --git a/README.md b/README.md
index f53e20d..22bd23c 100644
--- a/README.md
+++ b/README.md
@@ -1,6 +1,7 @@
-# HW3_2425A
-This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
-
-You may find the full instructions for this assignment on the course's website.
-
-Good luck and have fun!
+# Matam Homework 3
+
+This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
+
+You may find the full instructions for this assignment on the [course's website](https://moodle2324.technion.ac.il/course/view.php?id=3205).
+
+Good luck and have fun!
diff --git a/SortedList.h b/SortedList.h
new file mode 100644
index 0000000..ddb0d8e
--- /dev/null
+++ b/SortedList.h
@@ -0,0 +1,57 @@
+#pragma once
+
+#include <iostream>
+#include <stdexcept>
+
+namespace mtm {
+
+    template <typename T>
+    class SortedList {
+    public:
+        /**
+         *
+         * the class should support the following public interface:
+         * if needed, use =defualt / =delete
+         *
+         * constructors and destructor:
+         * 1. SortedList() - creates an empty list.
+         * 2. copy constructor
+         * 3. operator= - assignment operator
+         * 4. ~SortedList() - destructor
+         *
+         * iterator:
+         * 5. class ConstIterator;
+         * 6. begin method
+         * 7. end method
+         *
+         * functions:
+         * 8. insert - inserts a new element to the list
+         * 9. remove - removes an element from the list
+         * 10. length - returns the number of elements in the list
+         * 11. filter - returns a new list with elements that satisfy a given condition
+         * 12. apply - returns a new list with elements that were modified by an operation
+         */
+
+    };
+
+    template <class T>
+    class SortedList<T>::ConstIterator {
+    /**
+     * the class should support the following public interface:
+     * if needed, use =defualt / =delete
+     *
+     * constructors and destructor:
+     * 1. a ctor(or ctors) your implementation needs
+     * 2. copy constructor
+     * 3. operator= - assignment operator
+     * 4. ~ConstIterator() - destructor
+     *
+     * operators:
+     * 5. operator* - returns the element the iterator points to
+     * 6. operator++ - advances the iterator to the next element
+     * 7. operator!= - returns true if the iterator points to a different element
+     *
+     */
+    };
+}
+
diff --git a/Task.cpp b/Task.cpp
new file mode 100644
index 0000000..176989a
--- /dev/null
+++ b/Task.cpp
@@ -0,0 +1,83 @@
+
+#include "Task.h"
+
+// Constructor
+Task::Task(int priority, TaskType type, const string &desc)
+    : m_description(desc), m_priority(priority), m_type(type)
+{
+    // enforce priority range of 0-100
+    // 0 is lowest priority, 100 is highest
+    if (m_priority < 0)
+    {
+        m_priority = 0;
+    }
+    else if (m_priority > 100)
+    {
+        m_priority = 100;
+    }
+}
+
+Task::Task(int priority, const string &desc)
+    : Task(priority, TaskType::General, desc) {}
+
+// Getters and setters
+int Task::getId() const {
+    return m_id;
+}
+
+void Task::setId(int newId) {
+    m_id = newId;
+}
+
+TaskType Task::getType() const {
+    return m_type;
+}
+
+string Task::getDescription() const {
+    return m_description;
+}
+
+int Task::getPriority() const {
+    return m_priority;
+}
+
+
+// Overloaded operators
+ostream &operator<<(ostream& os, const Task& task) {
+    os << "Task ID: " << task.m_id << ", Priority: " << task.m_priority;
+    os << ", Type: " << taskTypeToString(task.m_type) << ", Description: " << task.m_description;
+    return os;
+}
+
+bool operator>(const Task& lhs, const Task& rhs) {
+    return lhs.m_priority > rhs.m_priority;
+}
+
+
+// Convert TaskType to string
+std::string taskTypeToString(TaskType type) {
+    switch (type) {
+    case TaskType::Meeting:
+        return "Meeting";
+    case TaskType::Presentation:
+        return "Presentation";
+    case TaskType::Documentation:
+        return "Documentation";
+    case TaskType::Development:
+        return "Development";
+    case TaskType::Testing:
+        return "Testing";
+    case TaskType::Research:
+        return "Research";
+    case TaskType::Training:
+        return "Training";
+    case TaskType::Maintenance:
+        return "Maintenance";
+    case TaskType::CustomerSupport:
+        return "Customer Support";
+    case TaskType::General:
+        return "General";
+    default:
+        return "Unknown Task";
+    }
+}
diff --git a/Task.h b/Task.h
new file mode 100644
index 0000000..87ed435
--- /dev/null
+++ b/Task.h
@@ -0,0 +1,115 @@
+
+#pragma once
+
+#include <iostream>
+#include <string>
+
+using std::ostream;
+using std::string;
+
+/**
+ * @brief Enum class representing different types of tasks.
+ */
+enum class TaskType {
+    Meeting,
+    Presentation,
+    Documentation,
+    Development,
+    Testing,
+    Research,
+    Training,
+    Maintenance,
+    CustomerSupport,
+    General
+};
+
+/**
+ * @brief Converts a TaskType enum to its corresponding string representation.
+ *
+ * @param type The TaskType enum to be converted.
+ * @return std::string The string representation of the TaskType.
+ */
+string taskTypeToString(TaskType type);
+
+/**
+ * @brief Class representing a task.
+ */
+class Task {
+private:
+    int m_id;
+    string m_description;
+    int m_priority;
+    TaskType m_type;
+
+public:
+    /**
+     * @brief Constructor to create a Task object.
+     *
+     * @param priority The priority of the task, enforced to be in range [0, 100].
+     * @param type The type of the task (default is TaskType::General).
+     * @param desc The description of the task (default is an empty string).
+     */
+    Task(int priority, TaskType type = TaskType::General, const string& desc = "");
+
+    /**
+     * @brief Constructor to create a Task object with a default type.
+     *
+     * @param priority The priority of the task, enforced to be in range [0, 100].
+     * @param desc The description of the task.
+     */
+    Task(int priority, const string& desc = "");
+
+    /**
+     * @brief Gets the ID of the task.
+     *
+     * @return int The ID of the task.
+     */
+    int getId() const;
+
+    /**
+     * @brief Sets the ID of the task.
+     *
+     * @param newId The new ID to be set for the task.
+     */
+    void setId(int newId);
+
+    /**
+     * @brief Gets the description of the task.
+     *
+     * @return string The description of the task.
+     */
+    string getDescription() const;
+
+    /**
+     * @brief Gets the priority of the task.
+     *
+     * @return int The priority of the task.
+     */
+    int getPriority() const;
+
+    /**
+     * @brief Gets the type of the task.
+     *
+     * @return TaskType The type of the task.
+     */
+    TaskType getType() const;
+
+    /**
+     * @brief Overloaded output stream operator for printing Task details.
+     *
+     * @param os The output stream.
+     * @param task The Task object to be printed.
+     * @return ostream& The output stream with the Task details.
+     */
+    friend ostream &operator<<(ostream& os, const Task& task);
+
+    /**
+     * @brief Overloaded greater-than operator to compare two Task objects based on priority.
+     *
+     * @param lhs The left-hand side Task object.
+     * @param rhs The right-hand side Task object.
+     * @return true If the priority of lhs is greater than that of rhs.
+     * @return false If the priority of lhs is not greater than that of rhs.
+     */
+    friend bool operator>(const Task& lhs, const Task& rhs);
+};
diff --git a/TaskManager.h b/TaskManager.h
new file mode 100644
index 0000000..f1acc89
--- /dev/null
+++ b/TaskManager.h
@@ -0,0 +1,75 @@
+
+#pragma once
+
+#include "Task.h"
+
+/**
+ * @brief Class managing tasks assigned to multiple persons.
+ */
+class TaskManager {
+private:
+    /**
+     * @brief Maximum number of persons the TaskManager can handle.
+     */
+    static const int MAX_PERSONS = 10;
+
+    // Note - Additional private fields and methods can be added if needed.
+
+public:
+    /**
+     * @brief Default constructor to create a TaskManager object.
+     *
+     * Note - you may add =default if needed.
+     */
+    TaskManager();
+
+    /**
+     * @brief Deleted copy constructor to prevent copying of TaskManager objects.
+     */
+    TaskManager(const TaskManager &other) = delete;
+
+    /**
+     * @brief Deleted copy assignment operator to prevent assignment of TaskManager objects.
+     */
+    TaskManager &operator=(const TaskManager &other) = delete;
+
+    /**
+     * @brief Assigns a task to a person.
+     *
+     * @param personName The name of the person to whom the task will be assigned.
+     * @param task The task to be assigned.
+     */
+    void assignTask(const string &personName, const Task &task);
+
+    /**
+     * @brief Completes the highest priority task assigned to a person.
+     *
+     * @param personName The name of the person who will complete the task.
+     */
+    void completeTask(const string &personName);
+
+    /**
+     * @brief Bumps the priority of all tasks of a specific type.
+     *
+     * @param type The type of tasks whose priority will be bumped.
+     * @param priority The amount by which the priority will be increased.
+     */
+    void bumpPriorityByType(TaskType type, int priority);
+
+    /**
+     * @brief Prints all employees and their tasks.
+     */
+    void printAllEmployees() const;
+
+    /**
+     * @brief Prints all tasks of a specific type.
+     *
+     * @param type The type of tasks to be printed.
+     */
+    void printTasksByType(TaskType type) const;
+
+    /**
+     * @brief Prints all tasks assigned to all employees.
+     */
+    void printAllTasks() const;
+};
diff --git a/main.cpp b/main.cpp
new file mode 100644
index 0000000..8fd68ab
--- /dev/null
+++ b/main.cpp
@@ -0,0 +1,531 @@
+
+#include <iostream>
+#include "TaskManager.h"
+#include "Task.h"
+
+using std::cout;
+using std::endl;
+
+using mtm::SortedList;
+
+typedef bool (*testFunc)(void);
+
+//defines
+
+#define RUN_TEST(test, name)                        \
+    do                                              \
+    {                                               \
+        std::cout << "Running " << name << " ... " << std::endl ; \
+        if (test())                                 \
+        {                                           \
+            std::cout << "[OK]\n";                  \
+        }                                           \
+        else                                        \
+        {                                           \
+            std::cout << "[Failed]\n";              \
+        }                                           \
+    } while (0)
+
+#define ASSERT_TEST(expr)                                                                               \
+    do                                                                                                  \
+    {                                                                                                   \
+        if (!(expr))                                                                                    \
+        {                                                                                               \
+            std::cout << "\nAssertion failed at " << __FILE__ << ":" << __LINE__ << #expr << std::endl; \
+            return false;                                                                               \
+        }                                                                                               \
+    } while (0)
+
+
+
+
+
+// tests
+
+class ExceptionThrowingType
+{
+public:
+    static int copy_count;
+    static const int max_copies = 3; // Exception will be thrown on the third copy
+    static bool throw_state;
+
+    ExceptionThrowingType(int value = 0) : value(value) {}
+
+    // Copy constructor
+    ExceptionThrowingType(const ExceptionThrowingType &other) : value(other.value)
+    {
+        if ((++copy_count >= max_copies) && (throw_state))
+        {
+            throw std::bad_alloc();
+        }
+    }
+
+    // Assignment operator
+    ExceptionThrowingType &operator=(const ExceptionThrowingType &other)
+    {
+        if (this != &other)
+        {
+            value = other.value;
+            if (++copy_count >= max_copies)
+            {
+                throw std::bad_alloc();
+            }
+        }
+        return *this;
+    }
+
+    // Comparison operator
+    bool operator>(const ExceptionThrowingType &other) const
+    {
+        return value > other.value;
+    }
+
+    int getValue() const
+    {
+        return value;
+    }
+
+    void zeroCounter()
+    {
+        this->copy_count = 0;
+    }
+    void changeState(bool state)
+    {
+        this->throw_state=state;
+    }
+
+private:
+    int value;
+};
+
+int ExceptionThrowingType::copy_count = 0;
+bool ExceptionThrowingType::throw_state = false;
+
+
+bool testTaskManagerPrintTasksByType()
+{
+    TaskManager manager;
+    Task task1(1, TaskType::Documentation, "Document API methods");
+    Task task2(5, TaskType::Development, "Refactor core module");
+    Task task3(8, TaskType::Testing, "Integration testing");
+    Task task4(5, TaskType::General, "Weekly team meeting");
+    Task task5(7, TaskType::Development, "Implement new feature");
+    Task task6(3, TaskType::Documentation, "Update user guide");
+    Task task7(-1, TaskType::Testing, "Write unit tests");
+    Task task8(2000, TaskType::Testing, "stream");
+    Task task9(6, TaskType::Development, "Fix bug in UI");
+    Task task10(4, TaskType::General, "Clean up code");
+    Task task11(2, TaskType::Documentation, "Write README");
+    Task task12(1, TaskType::Testing, "Run system tests");
+    Task task13(2, TaskType::Testing, "Run system tests");
+    Task task14(1, TaskType::Testing, "Run system tests");
+    Task task15(1, TaskType::Testing, "Run system tests");
+    Task task16(4, TaskType::General, "Clean up code");
+    Task task17(4, TaskType::General, "Clean up code");
+
+    manager.assignTask("Alice", task1);
+    manager.assignTask("Bob", task2);
+    manager.assignTask("Bob", Task(5, TaskType::General, "Run system tests"));
+    manager.assignTask("Bob", Task(7, TaskType::General, "Run system tests"));
+    manager.assignTask("Bob", Task(-1, TaskType::General, "Run system tests"));
+    manager.assignTask("Bob", Task(200, TaskType::General, "200"));
+    manager.assignTask("Charlixcx", task3);
+    manager.assignTask("Dana", task4);
+    manager.assignTask("Eve", task5);
+    manager.assignTask("Frank", task6);
+    manager.assignTask("Grace", task7);
+    manager.assignTask("SOPHIE", task8);
+    manager.assignTask("Hank", task9);
+    manager.assignTask("Bonie", task10);
+
+    manager.assignTask("Alice", task1);
+    manager.assignTask("Bob", task1);
+
+    manager.completeTask("Dana");
+
+    manager.printTasksByType(TaskType::Development);
+    cout << endl;
+    manager.bumpPriorityByType(TaskType::Development, 50);
+    manager.printTasksByType(TaskType::Development);
+    cout << endl;
+    manager.printTasksByType(TaskType::Testing);
+    cout << endl;
+
+    return true;
+}
+
+bool testListBasic()
+{
+    // Test default constructor
+    SortedList<int> list;
+    if (list.length() != 0)
+        return false;
+
+    // Test insert and length
+    list.insert(5);
+    list.insert(3);
+    list.insert(8);
+    if (list.length() != 3)
+        return false;
+
+    // Test copy constructor
+    SortedList<int> copy(list);
+    if (copy.length() != 3)
+        return false;
+
+    // Check copied elements
+    auto it_copy = copy.begin();
+    auto it_list = list.begin();
+    for (int i = 0; i < list.length(); ++i)
+    {
+        if ((*it_copy != *it_list) || (&(*it_copy) == &(*it_list)))
+            return false;
+        ++it_copy;
+        ++it_list;
+    }
+
+    // Test assignment operator
+    SortedList<int> another_list;
+    another_list = list;
+    if (another_list.length() != 3)
+        return false;
+
+    // Check assigned elements
+    it_list = list.begin();
+    auto it_another_list = another_list.begin();
+    for (int i = 0; i < list.length(); ++i)
+    {
+        if ((*it_another_list != *it_list) || (&(*it_another_list) == &(*it_list)))
+            return false;
+        ++it_another_list;
+        ++it_list;
+    }
+
+    // Ensure deep copy
+    list.insert(10);
+    if (another_list.length() != 3)
+        return false;
+
+    return true;
+}
+
+
+
+bool testListExceptions()
+{
+    using mtm::SortedList;
+
+    SortedList<int> list;
+
+    // Attempt to increment an iterator past the end of the list
+    try
+    {
+        auto it = list.end();
+        ++it;         // This should throw an exception
+        return false; // If no exception is thrown, the test should fail
+    }
+    catch (const std::out_of_range &e)
+    {
+        // Exception is expected, so the test should pass
+    }
+
+    // Insert some elements
+    list.insert(5);
+    list.insert(3);
+    list.insert(8);
+    list.insert(1);
+
+    // Attempt to increment an iterator past the end of the list after insertion
+    try
+    {
+        auto it = list.begin();
+        ++it;
+        ++it;
+        ++it;
+        ++it;
+        ++it;         // This should throw an exception
+        return false; // If no exception is thrown, the test should fail
+    }
+    catch (const std::out_of_range &e)
+    {
+        // Exception is expected, so the test should pass
+    }
+
+    // Attempt to remove using an end iterator (which should be invalid)
+    try
+    {
+        auto endIt = list.end();
+        list.remove(endIt); // This should not throw an exception but should handle gracefully
+        // No exception expected, so no assert here
+    }
+    catch (...)
+    {
+        return false; // If any exception is thrown, the test should fail
+    }
+
+    // Create an iterator and make it invalid by incrementing past the end
+    auto it = list.begin();
+    ++it;
+    ++it;
+    ++it;
+    ++it; // Now it should be invalid (past end)
+
+    try
+    {
+        ++it;         // Incrementing further should throw an exception
+        return false; // If no exception is thrown, the test should fail
+    }
+    catch (const std::out_of_range &e)
+    {
+        // Exception is expected, so the test should pass
+    }
+
+    ////
+
+    // Test exception safety in copy constructor
+    try
+    {
+        SortedList<int> list;
+        list.insert(1);
+        list.insert(2);
+        SortedList<int> copy(list); // This should not throw
+    }
+    catch (...)
+    {
+        return false;
+    }
+
+    // Test exception safety in assignment operator
+    try
+    {
+        SortedList<int> list;
+        list.insert(1);
+        list.insert(2);
+        SortedList<int> another_list;
+        another_list = list; // This should not throw
+    }
+    catch (...)
+    {
+        return false;
+    }
+
+    // Ensure proper memory management in case of exceptions (Mock the exception)
+    try
+    {
+        SortedList<int> list;
+        list.insert(1);
+        list.insert(2);
+        // Simulate exception during copy constructor
+
+        struct MockException : public std::exception
+        {
+        };
+        throw MockException();
+        SortedList<int> copy(list);
+        return false; // Should not reach here
+    }
+    catch (const std::exception &)
+    {
+        // Expected behavior
+    }
+
+    return true;
+}
+
+bool testCopyConstructorExceptionSafety()
+{
+    try
+    {
+        ExceptionThrowingType x(1);
+        x.zeroCounter();
+        x.changeState(false);
+        SortedList<ExceptionThrowingType> list;
+        list.insert(ExceptionThrowingType(1));
+        list.insert(ExceptionThrowingType(2));
+
+        // Force an exception during the copy constructor
+        // add flag
+        x.changeState(true);
+        SortedList<ExceptionThrowingType> copy(list); // Should throw std::bad_alloc
+        return false;                                 // If no exception is thrown, the test fails
+    }
+    catch (const std::bad_alloc &)
+    {
+        // Expected exception was thrown
+    }
+    catch (...)
+    {
+        return false; // Unexpected exception
+    }
+
+    return true;
+}
+
+
+
+bool testTaskManager()
+{
+    TaskManager tm;
+
+    // Create some tasks
+    Task task1(1, TaskType::Meeting, "Discuss project goals");
+    Task task2(2, TaskType::Development, "Implement feature X");
+    Task task3(3, TaskType::Testing, "Test feature X");
+    Task task4(4, TaskType::Documentation, "Write docs for feature X");
+    Task task5(5, TaskType::Research, "Explore new tech");
+
+    // Assign tasks to employees
+    tm.assignTask("Alice", task1);
+    tm.assignTask("Bob", task2);
+    tm.assignTask("Alice", task3);
+    tm.assignTask("Charlie", task4);
+    tm.assignTask("Bob", task5);
+
+    tm.printAllEmployees();
+    cout << endl;
+
+    tm.printAllTasks();
+    cout << endl;
+
+    // Complete a task and verify it no longer appears
+    tm.completeTask("Alice");
+
+    tm.printAllTasks();
+    cout << endl;
+
+    tm.bumpPriorityByType(TaskType::Documentation, 2);
+
+    tm.printTasksByType(TaskType::Documentation);
+    cout << endl;
+
+    tm.printTasksByType(TaskType::Research);
+    cout << endl;
+
+    return true;
+}
+
+bool testTaskManagerAssignTask()
+{
+    TaskManager manager;
+    Task task1(1, TaskType::Documentation, "Document API methods");
+    Task task2(5, TaskType::Development, "Refactor core module");
+    Task task3(8, TaskType::Testing, "Integration testing");
+    Task task4(5, TaskType::General, "Weekly team meeting");
+    Task task5(7, TaskType::Development, "Implement new feature");
+    Task task6(3, TaskType::Documentation, "Update user guide");
+    Task task7(-1, TaskType::Testing, "Write unit tests");
+    Task task8(2000, TaskType::Testing, "stream");
+    Task task9(6, TaskType::Development, "Fix bug in UI");
+    Task task10(4, TaskType::General, "Clean up code");
+    Task task11(2, TaskType::Documentation, "Write README");
+    Task task12(1, TaskType::Testing, "Run system tests");
+    Task task13(1, TaskType::Testing, "Run system tests");
+    Task task14(1, TaskType::Testing, "Run system tests");
+    Task task15(1, TaskType::Testing, "Run system tests");
+    Task task16(4, TaskType::General, "Clean up code");
+    Task task17(4, TaskType::General, "Clean up code");
+
+    manager.assignTask("Alice", task1);
+    manager.assignTask("Bob", task2);
+    manager.assignTask("Charlixcx", task3);
+    manager.assignTask("Dana", task4);
+    manager.assignTask("Eve", task5);
+    manager.assignTask("Frank", task6);
+    manager.assignTask("Grace", task7);
+    manager.assignTask("SOPHIE", task8);
+    manager.assignTask("Hank", task9);
+    manager.assignTask("Bonie", task10);
+
+    try
+    {
+        manager.assignTask("boom", task11);
+        return false; // should have thrown exception
+    }
+    catch (std::exception &e)
+    {
+    }
+
+    manager.assignTask("Bob", task12);
+    manager.assignTask("Bob", task13);
+    manager.assignTask("Bob", task14);
+    manager.assignTask("Bob", task15);
+    manager.assignTask("Bob", task16);
+    manager.assignTask("Bob", task17);
+
+    // Assuming we have a way to verify task has been assigned, like a method that counts tasks
+    return true;
+}
+
+
+// end of tests
+
+
+
+
+
+
+
+
+#define TESTS_NAMES                          \
+    X(testListBasic)                         \
+    X(testListExceptions)                    \
+    X(testTaskManager)                       \
+    X(testCopyConstructorExceptionSafety)    \
+    X(testTaskManagerAssignTask)             \
+    X(testTaskManagerPrintTasksByType)
+
+
+testFunc tests[] = {
+#define X(name) name,
+    TESTS_NAMES
+#undef X
+};
+
+const char *tests_names[] = {
+#define X(name) #name,
+    TESTS_NAMES
+#undef X
+};
+using mtm::SortedList;
+
+template <typename T>
+void printList(const mtm::SortedList<T> &list, std::ostream &os=std::cout)
+{
+    for (auto it = list.begin(); it != list.end(); ++it)
+    {
+        os << *it << " ";
+    }
+    os << std::endl;
+}
+
+
+int main(int argc, char **argv)
+{
+    int number_of_tests = sizeof(tests) / sizeof(tests[0]);
+
+    if (argc == 1)
+    {
+        for (int test_idx = 0; test_idx < number_of_tests; test_idx++)
+        {
+            std::cout << "Running test " << test_idx + 1 << std::endl;
+            RUN_TEST(tests[test_idx], tests_names[test_idx]);
+            cout << endl;
+        }
+        return 0;
+    }
+    if (argc != 2)
+    {
+        std::cout << "Usage: tests <test index>" << std::endl;
+        return 0;
+    }
+
+    int test_idx = strtol(argv[1], NULL, 10);
+    if (test_idx < 1 || test_idx > number_of_tests)
+    {
+        std::cerr << "Invalid test index " << test_idx << std::endl;
+        return 0;
+    }
+
+    RUN_TEST(tests[test_idx - 1], tests_names[test_idx - 1]);
+    return 0;
+}
diff --git a/tests/test1.expected b/tests/test1.expected
new file mode 100644
index 0000000..9da604f
--- /dev/null
+++ b/tests/test1.expected
@@ -0,0 +1,3 @@
+Running testListBasic ... 
+[OK]
+
diff --git a/tests/test2.expected b/tests/test2.expected
new file mode 100644
index 0000000..a1fb014
--- /dev/null
+++ b/tests/test2.expected
@@ -0,0 +1,3 @@
+Running testListExceptions ... 
+[OK]
+
diff --git a/tests/test3.expected b/tests/test3.expected
new file mode 100644
index 0000000..c6d84ca
--- /dev/null
+++ b/tests/test3.expected
@@ -0,0 +1,30 @@
+Running testTaskManager ... 
+Person: Alice
+Task ID: 2, Priority: 3, Type: Testing, Description: Test feature X
+Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
+
+Person: Bob
+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
+Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
+
+Person: Charlie
+Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
+
+
+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
+Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
+Task ID: 2, Priority: 3, Type: Testing, Description: Test feature X
+Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
+Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
+
+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
+Task ID: 3, Priority: 4, Type: Documentation, Description: Write docs for feature X
+Task ID: 1, Priority: 2, Type: Development, Description: Implement feature X
+Task ID: 0, Priority: 1, Type: Meeting, Description: Discuss project goals
+
+Task ID: 3, Priority: 6, Type: Documentation, Description: Write docs for feature X
+
+Task ID: 4, Priority: 5, Type: Research, Description: Explore new tech
+
+[OK]
+
diff --git a/tests/test4.expected b/tests/test4.expected
new file mode 100644
index 0000000..a46c1c9
--- /dev/null
+++ b/tests/test4.expected
@@ -0,0 +1,3 @@
+Running testCopyConstructorExceptionSafety ... 
+[OK]
+
diff --git a/tests/test5.expected b/tests/test5.expected
new file mode 100644
index 0000000..e7db415
--- /dev/null
+++ b/tests/test5.expected
@@ -0,0 +1,3 @@
+Running testTaskManagerAssignTask ... 
+[OK]
+
diff --git a/tests/test6.expected b/tests/test6.expected
new file mode 100644
index 0000000..07fd396
--- /dev/null
+++ b/tests/test6.expected
@@ -0,0 +1,15 @@
+Running testTaskManagerPrintTasksByType ... 
+Task ID: 8, Priority: 7, Type: Development, Description: Implement new feature
+Task ID: 12, Priority: 6, Type: Development, Description: Fix bug in UI
+Task ID: 1, Priority: 5, Type: Development, Description: Refactor core module
+
+Task ID: 8, Priority: 57, Type: Development, Description: Implement new feature
+Task ID: 12, Priority: 56, Type: Development, Description: Fix bug in UI
+Task ID: 1, Priority: 55, Type: Development, Description: Refactor core module
+
+Task ID: 11, Priority: 100, Type: Testing, Description: stream
+Task ID: 6, Priority: 8, Type: Testing, Description: Integration testing
+Task ID: 10, Priority: 0, Type: Testing, Description: Write unit tests
+
+[OK]
+

commit 5bdbf99b46b6f1558a47c5533aefc209c37e23d4
Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
Date:   Fri Dec 20 16:57:29 2024 +0200

    Update README.md

diff --git a/README.md b/README.md
index c36b592..f53e20d 100644
--- a/README.md
+++ b/README.md
@@ -1 +1,6 @@
-# HW3_2425A
\ No newline at end of file
+# HW3_2425A
+This repository contains all supplied files for the first homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
+
+You may find the full instructions for this assignment on the course's website.
+
+Good luck and have fun!

commit 6c999dc9a584fbf8c3a296c357c16141db7b5abe
Author: Ron Raphaeli <102682845+ronraphaeli@users.noreply.github.com>
Date:   Fri Dec 20 16:57:09 2024 +0200

    Initial commit

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..c36b592
--- /dev/null
+++ b/README.md
@@ -0,0 +1 @@
+# HW3_2425A
\ No newline at end of file
